<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>马树菌的博客驿站</title>
  
  <subtitle>https://v1.jinrishici.com/all.png</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://lesliewong.cn/"/>
  <updated>2024-01-18T05:06:13.946Z</updated>
  <id>http://lesliewong.cn/</id>
  
  <author>
    <name>爱冒泡的马树菌</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>算法思维体操：基于generator生成器自己实现Async/Await（TypeScript）</title>
    <link href="http://lesliewong.cn/2023/02/23/generator-to-write-async-await-typescript/"/>
    <id>http://lesliewong.cn/2023/02/23/generator-to-write-async-await-typescript/</id>
    <published>2023-02-23T15:07:30.000Z</published>
    <updated>2024-01-18T05:06:13.946Z</updated>
    
    <content type="html"><![CDATA[<h3 id="实现Async-Await"><a href="#实现Async-Await" class="headerlink" title="实现Async/Await"></a>实现Async/Await</h3><p>要挑战的任务是使用JavaScript的generator生成器来实现Async/Await。</p><a id="more"></a><h4 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h4><p>下面是一个Async/Await函数的示例。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">doSomething</span>(<span class="params">value</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> result1 = <span class="keyword">await</span> fetchFromNetwork(value + <span class="string">'-1'</span>);</span><br><span class="line">    <span class="keyword">const</span> result2 = <span class="keyword">await</span> fetchFromNetwork(value + <span class="string">'-2'</span>);</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> result3 = <span class="keyword">await</span> failedFetchFromNetwork();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">        <span class="built_in">console</span>.error(<span class="string">'Error fetching from network'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result1 + <span class="string">' '</span> + result2;</span><br><span class="line">&#125;</span><br><span class="line">doSomething(<span class="string">'http://google.com'</span>)</span><br><span class="line">    .then(<span class="function"><span class="params">r</span> =&gt;</span> <span class="built_in">console</span>.log(<span class="string">`Got result: <span class="subst">$&#123;r&#125;</span>`</span>))</span><br><span class="line">    .catch(<span class="built_in">console</span>.error)</span><br></pre></td></tr></table></figure><p>我们需要使用generator生成器和一个特别的封装函数“asynk”来实现同样功能。等效的示例为：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> doSomething = asynk(<span class="function"><span class="keyword">function</span>* (<span class="params">value</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> result1 = <span class="keyword">yield</span> fetchFromNetwork(value + <span class="string">'-1'</span>);</span><br><span class="line">    <span class="keyword">const</span> result2 = <span class="keyword">yield</span> fetchFromNetwork(value + <span class="string">'-2'</span>);</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> result3 = <span class="keyword">yield</span> failedFetchFromNetwork();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">        <span class="built_in">console</span>.error(<span class="string">'Error fetching from network'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result1 + <span class="string">' '</span> + result2;</span><br><span class="line">&#125;);</span><br><span class="line">doSomething(<span class="string">'http://google.com'</span>)</span><br><span class="line">    .then(<span class="function"><span class="params">r</span> =&gt;</span> <span class="built_in">console</span>.log(<span class="string">`Got result: <span class="subst">$&#123;r&#125;</span>`</span>))</span><br><span class="line">    .catch(<span class="built_in">console</span>.error)</span><br></pre></td></tr></table></figure><p>关于“asynk“的注意事项：</p><ol><li>它接收一个generator生成器函数并返回一个新函数；</li><li>当返回的函数被调用时，它应该返回一个Promise期约。Promise期约应当对generator生成器函数的返回值有所处理；</li><li>返回函数的类型特征应该和传入generator生成器函数的类型特征匹配。唯一的例外是，如果generator生成器函数返回一个非Promise期约的类型，返回函数应该返回一个与那个类型相对应的Promise期约。</li></ol><h4 id="待处理事项"><a href="#待处理事项" class="headerlink" title="待处理事项"></a>待处理事项</h4><ul><li>如果愿意的话，你可以先实现无类型的方案。有些人觉得使用类型有所帮助，另外一些人则觉得后续添加类型更容易；</li><li>先关注控制流，然后才是参数值返回值可能有所帮助。</li></ul><h4 id="规则"><a href="#规则" class="headerlink" title="规则"></a>规则</h4><ul><li>你不能使用原生的Async/Await；</li><li>请不要直接查阅与”如何使用generator生成器实现Async/Await“相关的网上资料。</li></ul><h4 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h4><p>下面是一些你会觉得有用的链接。请悉听尊便访问这些链接，但务必仅限于此。</p><ul><li><p><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator" target="_blank" rel="noopener">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator</a></p></li><li><p><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator/next" target="_blank" rel="noopener">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator/next</a></p></li></ul><p>下面的类型定义或许有所裨益：</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">interface</span> Generator&lt;T = unknown, TReturn = any, TNext = unknown&gt; <span class="keyword">extends</span> Iterator&lt;T, TReturn, TNext&gt; &#123;</span><br><span class="line">    <span class="comment">// <span class="doctag">NOTE:</span> 'next' is defined using a tuple to ensure we report the correct assignability errors in all places.</span></span><br><span class="line">    next(...args: [] | [TNext]): IteratorResult&lt;T, TReturn&gt;;</span><br><span class="line">    <span class="keyword">return</span>(value: TReturn): IteratorResult&lt;T, TReturn&gt;;</span><br><span class="line">    <span class="keyword">throw</span>(e: <span class="built_in">any</span>): IteratorResult&lt;T, TReturn&gt;;</span><br><span class="line">    [Symbol.iterator](): Generator&lt;T, TReturn, TNext&gt;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">interface</span> IteratorYieldResult&lt;TYield&gt; &#123;</span><br><span class="line">    done?: <span class="literal">false</span>;</span><br><span class="line">    value: TYield;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">interface</span> IteratorReturnResult&lt;TReturn&gt; &#123;</span><br><span class="line">    done: <span class="literal">true</span>;</span><br><span class="line">    value: TReturn;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> IteratorResult&lt;T, TReturn = <span class="built_in">any</span>&gt; = IteratorYieldResult&lt;T&gt; | IteratorReturnResult&lt;TReturn&gt;;</span><br></pre></td></tr></table></figure><h4 id="TypeScript代码模板："><a href="#TypeScript代码模板：" class="headerlink" title="TypeScript代码模板："></a>TypeScript代码模板：</h4><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// See README.md for instructions.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// <span class="doctag">TODO:</span> add type annotations.</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">asynk</span>(<span class="params">fn: <span class="built_in">any</span></span>) </span>&#123;</span><br><span class="line">  <span class="comment">// YOUR CODE HERE</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Playgroud for testing the code.</span></span><br><span class="line"><span class="built_in">console</span>.clear();</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span>* <span class="title">countUp</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">yield</span> i;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> g = countUp();</span><br><span class="line"><span class="built_in">console</span>.log(g.next());</span><br><span class="line"><span class="built_in">console</span>.log(g.next());</span><br><span class="line"></span><br><span class="line"><span class="comment">// const playground = asynk(function* () &#123;</span></span><br><span class="line"><span class="comment">//     const result = yield Promise.resolve('hello');</span></span><br><span class="line"><span class="comment">// &#125;);</span></span><br><span class="line"><span class="comment">// playground().catch(console.error)</span></span><br></pre></td></tr></table></figure><h4 id="最终实现："><a href="#最终实现：" class="headerlink" title="最终实现："></a>最终实现：</h4><p>无类型的JavaScript版本：</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">asynk</span>(<span class="params">fn</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// YOUR CODE HERE</span></span><br><span class="line">  <span class="keyword">return</span> <span class="function">(<span class="params">...args</span>) =&gt;</span></span><br><span class="line">    <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">// Initialize the generator function, which might have signatures,</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">// Extract the next() queue fisrt, then iterate another initialized generator</span></span><br><span class="line">      <span class="keyword">const</span> runner = fn(...args);</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> promiseCallbackQueue = [</span><br><span class="line">          (res, slaveRunner) =&gt; slaveRunner.next(res).value,</span><br><span class="line">        ];</span><br><span class="line">        <span class="keyword">let</span> result = runner.next();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// First round, collect promiseCallback</span></span><br><span class="line">        <span class="keyword">while</span> (!result.done &amp;&amp; <span class="built_in">String</span>(result.value) === <span class="string">'[object Promise]'</span>) &#123;</span><br><span class="line">          promiseCallbackQueue.push(</span><br><span class="line">            (res, slaveRunner) =&gt; slaveRunner.next(res).value</span><br><span class="line">          );</span><br><span class="line">          result = runner.next();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">        Second round, iterate another generator promise chain and pass promised value, by using the trick of event loop</span></span><br><span class="line"><span class="comment">        setTimeout -&gt; MacroQueue</span></span><br><span class="line"><span class="comment">        Promise resolve -&gt; MicroQueue</span></span><br><span class="line"><span class="comment">        For each setTimeout, its inner promise resolve will call in advance of the latter setTimeout, because of MicroQueue</span></span><br><span class="line"><span class="comment">        Drawback: initialize the given generator for twice.         </span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">let</span> medium;</span><br><span class="line">        <span class="keyword">let</span> pcqLen = promiseCallbackQueue.length;</span><br><span class="line">        <span class="keyword">const</span> slaveRunner = fn(...args);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; pcqLen; i++) &#123;</span><br><span class="line">          setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">const</span> pm = promiseCallbackQueue[i](medium, slaveRunner);</span><br><span class="line">            medium = pm; <span class="comment">// To get the final yield value, would be Promise fisrt</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">String</span>(pm) === <span class="string">'[object Promise]'</span>) &#123;</span><br><span class="line">              pm.then(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">                medium = res; <span class="comment">// get the input value to yield function</span></span><br><span class="line">              &#125;);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">              resolve(medium);</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;, <span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">        <span class="comment">// catch operation</span></span><br><span class="line">        <span class="keyword">return</span> reject(e);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.clear();</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span>* <span class="title">countUp</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">    <span class="keyword">yield</span> i;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> g = countUp();</span><br><span class="line"><span class="built_in">console</span>.log(g.next());</span><br><span class="line"><span class="built_in">console</span>.log(g.next());</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> playground = asynk(<span class="function"><span class="keyword">function</span>* (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> result = <span class="keyword">yield</span> <span class="built_in">Promise</span>.resolve(<span class="string">'hello'</span>);</span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">playground()</span><br><span class="line">  .then(<span class="function">(<span class="params">r</span>) =&gt;</span> <span class="built_in">console</span>.log(r, <span class="string">'yes'</span>))</span><br><span class="line">  .catch(<span class="built_in">console</span>.error);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> fetchFromNetwork = <span class="function">(<span class="params">val</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">Promise</span>.resolve(val);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> failedFetchFromNetwork = <span class="function">(<span class="params">val</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">Promise</span>.resolve(val);</span><br><span class="line">  <span class="comment">// return Promise.reject(val);</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> doSomething = asynk(<span class="function"><span class="keyword">function</span>* (<span class="params">value</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> result1 = <span class="keyword">yield</span> fetchFromNetwork(value + <span class="string">'-1'</span>);</span><br><span class="line">  <span class="keyword">const</span> result2 = <span class="keyword">yield</span> fetchFromNetwork(value + <span class="string">'-2'</span>);</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> result3 = <span class="keyword">yield</span> failedFetchFromNetwork().catch(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.error(err);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">    <span class="built_in">console</span>.error(<span class="string">'Error fetching from network'</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> result1 + <span class="string">" "</span> + result2;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">doSomething(<span class="string">'http://google.com'</span>)</span><br><span class="line">  .then(<span class="function">(<span class="params">r</span>) =&gt;</span> <span class="built_in">console</span>.log(<span class="string">`Got result: <span class="subst">$&#123;r&#125;</span>`</span>))</span><br><span class="line">  .catch(<span class="built_in">console</span>.error);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 打印结果：</span></span><br><span class="line"><span class="comment">// &#123; value: 0, done: false &#125;</span></span><br><span class="line"><span class="comment">// &#123; value: 1, done: false &#125;</span></span><br><span class="line"><span class="comment">// 'hello' 'yes'</span></span><br><span class="line"><span class="comment">// 'Got result: http://google.com-1 http://google.com-2'</span></span><br></pre></td></tr></table></figure><blockquote><p>思路：先使用一个while循环遍历generator生成器收集next次数，然后for循环再遍历generator生成器，前后传递生成器Promise.then得到的值，诀窍是使用setTimeout属于宏队列，promise属于微队列，同一次事件循环中setTimeout总会先于promise执行这一JS异步编程特性。</p><p>不足之处：generator生成器函数会被执行两次，如果在其中有声明console的话，会让人觉得有些奇怪，但是最终的返回值结果倒是正确。</p></blockquote><p>含类型的TypeScript版本：</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">interface</span> Generator&lt;T = unknown, TReturn = any, TNext = unknown&gt;</span><br><span class="line">  <span class="keyword">extends</span> Iterator&lt;T, TReturn, TNext&gt; &#123;</span><br><span class="line">  <span class="comment">// <span class="doctag">NOTE:</span> 'next' is defined using a tuple to ensure we report the correct assignability errors in all places.</span></span><br><span class="line">  next(...args: [] | [TNext]): IteratorResult&lt;T, TReturn&gt;;</span><br><span class="line">  <span class="keyword">return</span>(value: TReturn): IteratorResult&lt;T, TReturn&gt;;</span><br><span class="line">  <span class="keyword">throw</span>(e: <span class="built_in">any</span>): IteratorResult&lt;T, TReturn&gt;;</span><br><span class="line">  [Symbol.iterator](): Generator&lt;T, TReturn, TNext&gt;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">interface</span> IteratorYieldResult&lt;TYield&gt; &#123;</span><br><span class="line">  done?: <span class="literal">false</span>;</span><br><span class="line">  value: TYield;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">interface</span> IteratorReturnResult&lt;TReturn&gt; &#123;</span><br><span class="line">  done: <span class="literal">true</span>;</span><br><span class="line">  value: TReturn;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> IteratorResult&lt;T, TReturn = <span class="built_in">any</span>&gt; =</span><br><span class="line">  | IteratorYieldResult&lt;T&gt;</span><br><span class="line">  | IteratorReturnResult&lt;TReturn&gt;;</span><br><span class="line"></span><br><span class="line">function asynk(fn: (...args: any) =&gt; Generator&lt;Promise&lt;any&gt;, any, string&gt;) &#123;</span><br><span class="line">  <span class="comment">// YOUR CODE HERE</span></span><br><span class="line">  <span class="keyword">return</span> <span class="function">(<span class="params">...args: <span class="built_in">any</span></span>) =&gt;</span></span><br><span class="line">    <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">// Initialize the generator function, which might have signatures,</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">// Extract the next() queue fisrt, then iterate another initialized generator</span></span><br><span class="line">      <span class="keyword">const</span> runner = fn(...args);</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> promiseCallbackQueue = [</span><br><span class="line">          (res: <span class="built_in">any</span>, slaveRunner: <span class="built_in">any</span>) =&gt; slaveRunner.next(res).value,</span><br><span class="line">        ];</span><br><span class="line">        <span class="keyword">let</span> result = runner.next();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// First round, collect promiseCallback</span></span><br><span class="line">        <span class="keyword">while</span> (!result.done &amp;&amp; <span class="built_in">String</span>(result.value) === <span class="string">'[object Promise]'</span>) &#123;</span><br><span class="line">          promiseCallbackQueue.push(</span><br><span class="line">            (res, slaveRunner) =&gt; slaveRunner.next(res).value,</span><br><span class="line">          );</span><br><span class="line">          result = runner.next();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">        Second round, iterate another generator promise chain and pass promised value, by using the trick of event loop</span></span><br><span class="line"><span class="comment">        setTimeout -&gt; MacroQueue</span></span><br><span class="line"><span class="comment">        Promise resolve -&gt; MicroQueue</span></span><br><span class="line"><span class="comment">        For each setTimeout, its inner promise resolve will call in advance of the latter setTimeout, because of MicroQueue</span></span><br><span class="line"><span class="comment">        Drawback: initialize the given generator for twice.</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">let</span> medium: <span class="built_in">Promise</span>&lt;<span class="built_in">any</span>&gt; | <span class="built_in">string</span>;</span><br><span class="line">        <span class="keyword">let</span> pcqLen = promiseCallbackQueue.length;</span><br><span class="line">        <span class="keyword">const</span> slaveRunner = fn(...args);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; pcqLen; i++) &#123;</span><br><span class="line">          setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">const</span> pm = promiseCallbackQueue[i](medium, slaveRunner);</span><br><span class="line">            medium = pm; <span class="comment">// To get the final yield value, would be Promise fisrt</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">String</span>(pm) === <span class="string">'[object Promise]'</span>) &#123;</span><br><span class="line">              pm.then(<span class="function">(<span class="params">res: <span class="built_in">string</span></span>) =&gt;</span> &#123;</span><br><span class="line">                medium = res; <span class="comment">// get the input value to yield function</span></span><br><span class="line">              &#125;);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">              resolve(medium);</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;, <span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">        <span class="comment">// catch operation</span></span><br><span class="line">        <span class="keyword">return</span> reject(e);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.clear();</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span>* <span class="title">countUp</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">    <span class="keyword">yield</span> i;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> g = countUp();</span><br><span class="line"><span class="built_in">console</span>.log(g.next());</span><br><span class="line"><span class="built_in">console</span>.log(g.next());</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> playground = asynk(<span class="function"><span class="keyword">function</span>* (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> result = <span class="keyword">yield</span> <span class="built_in">Promise</span>.resolve(<span class="string">'hello'</span>);</span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">playground()</span><br><span class="line">  .then(<span class="function"><span class="params">r</span> =&gt;</span> <span class="built_in">console</span>.log(r, <span class="string">'yes'</span>))</span><br><span class="line">  .catch(<span class="built_in">console</span>.error);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> fetchFromNetwork = <span class="function">(<span class="params">val: <span class="built_in">string</span></span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">Promise</span>.resolve(val);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> failedFetchFromNetwork = <span class="function">(<span class="params">val: <span class="built_in">string</span></span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">Promise</span>.resolve(val);</span><br><span class="line">  <span class="comment">// return Promise.reject(val);</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> doSomething = asynk(<span class="function"><span class="keyword">function</span>* (<span class="params">value</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> result1 = <span class="keyword">yield</span> fetchFromNetwork(value + <span class="string">'-1'</span>);</span><br><span class="line">  <span class="keyword">const</span> result2 = <span class="keyword">yield</span> fetchFromNetwork(value + <span class="string">'-2'</span>);</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> result3 = <span class="keyword">yield</span> failedFetchFromNetwork(value).catch(<span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.error(err);</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="built_in">console</span>.log(result3);</span><br><span class="line">  &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">    <span class="built_in">console</span>.error(<span class="string">'Error fetching from network'</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> result1 + <span class="string">' '</span> + result2;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">doSomething(<span class="string">'http://google.com'</span>)</span><br><span class="line">  .then(<span class="function"><span class="params">r</span> =&gt;</span> <span class="built_in">console</span>.log(<span class="string">`Got result: <span class="subst">$&#123;r&#125;</span>`</span>))</span><br><span class="line">  .catch(<span class="built_in">console</span>.error);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 打印结果：</span></span><br><span class="line"><span class="comment">// &#123; value: 0, done: false &#125;</span></span><br><span class="line"><span class="comment">// &#123; value: 1, done: false &#125;</span></span><br><span class="line"><span class="comment">// &#123; result3: undefined &#125;</span></span><br><span class="line"><span class="comment">// 'hello' 'yes'</span></span><br><span class="line"><span class="comment">// &#123; result3: 'http://google.com' &#125;</span></span><br><span class="line"><span class="comment">// 'Got result: http://google.com-1 http://google.com-2'</span></span><br></pre></td></tr></table></figure><blockquote><p>处理原则: 让TypeScript校验不显红即可, 适当使用any和string.</p></blockquote><h4 id="其他实现参考："><a href="#其他实现参考：" class="headerlink" title="其他实现参考："></a>其他实现参考：</h4><h5 id="Babel-7，面向chrome-54"><a href="#Babel-7，面向chrome-54" class="headerlink" title="Babel 7，面向chrome 54"></a>Babel 7，面向chrome 54</h5><p><a href="https://babeljs.io/repl#?browsers=chrome 54&amp;build=&amp;builtIns=false&amp;corejs=3.21&amp;spec=false&amp;loose=false&amp;code_lz=MYewdgzgLgBAZgUysAFgMQE4gLYDkkDuIGA1jALwwAUAbgIYA2AlBQHwwDeAUDDBkgFcMYGAAUs2AJYQEAOn4QQDGglqMmAbi4BfLV1CRYcOpIYIAJmiSpMOfFCKkK1eszacefQcLETpchSUVNWYtXgB6cK8oIRFxHH95BAArBGAoEM0dPToIAE8wYHgBQqhJcBhzEABlHCQUSTAAcxCBBBZuXl4DaC8IAQYoAEZnOgITI2t0CXtHElaEGABqGAByAFoh1ayumB7YBQGoACZR8clJ5Gm7QmJ51zbltfXj7bCuqAw8j13d_b6jgBmM4TeAmMyWKa2PC3UhUHZdbR7OhXagIDBYDAdTy_PbgRRmWTozFUVYAUQxxHgU0aTXgEhgYFhJDeOJg2jZ_BiPkOgxGK1WayevJOWg5VVq2HqtNJKCgUAADgAuSJNEAgJqE0DYbZs2RQFAIMBUDDuHpKOQMDVUAAGAHEQAcEP1BkqYAASDgYbQ2phMPXAFGoKjmwnE4hMIA&amp;debug=false&amp;forceAllTransforms=false&amp;shippedProposals=false&amp;circleciRepo=&amp;evaluate=false&amp;fileSize=false&amp;timeTravel=false&amp;sourceType=module&amp;lineWrap=true&amp;presets=env%2Creact%2Cstage-2&amp;prettier=false&amp;targets=&amp;version=7.21.2&amp;externalPlugins=&amp;assumptions={}" target="_blank" rel="noopener">Babel Repl</a></p><p><em>输入：</em></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> fetchFromNetwork = <span class="function">(<span class="params">val</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">Promise</span>.resolve(val);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> failedFetchFromNetwork = <span class="function">(<span class="params">val</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">Promise</span>.resolve(val);</span><br><span class="line">  <span class="comment">// return Promise.reject(val);</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">doSomething</span>(<span class="params">value</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> result1 = <span class="keyword">await</span> fetchFromNetwork(value + <span class="string">'-1'</span>);</span><br><span class="line">    <span class="keyword">const</span> result2 = <span class="keyword">await</span> fetchFromNetwork(value + <span class="string">'-2'</span>);</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> result3 = <span class="keyword">await</span> failedFetchFromNetwork();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">        <span class="built_in">console</span>.error(<span class="string">'Error fetching from network'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result1 + <span class="string">' '</span> + result2;</span><br><span class="line">&#125;</span><br><span class="line">doSomething(<span class="string">'http://google.com'</span>)</span><br><span class="line">    .then(<span class="function"><span class="params">r</span> =&gt;</span> <span class="built_in">console</span>.log(<span class="string">`Got result: <span class="subst">$&#123;r&#125;</span>`</span>))</span><br><span class="line">    .catch(<span class="built_in">console</span>.error)</span><br></pre></td></tr></table></figure><p><em>输出：</em></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">asyncGeneratorStep</span>(<span class="params">gen, resolve, reject, _next, _throw, key, arg</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">var</span> info = gen[key](arg);</span><br><span class="line">    <span class="keyword">var</span> value = info.value;</span><br><span class="line">  &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">    reject(error);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (info.done) &#123;</span><br><span class="line">    resolve(value);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="built_in">Promise</span>.resolve(value).then(_next, _throw);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">_asyncToGenerator</span>(<span class="params">fn</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> self = <span class="keyword">this</span>,</span><br><span class="line">      args = <span class="built_in">arguments</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span> (<span class="params">resolve, reject</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">var</span> gen = fn.apply(self, args);</span><br><span class="line">      <span class="function"><span class="keyword">function</span> <span class="title">_next</span>(<span class="params">value</span>) </span>&#123;</span><br><span class="line">        asyncGeneratorStep(gen, resolve, reject, _next, _throw, <span class="string">'next'</span>, value);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="function"><span class="keyword">function</span> <span class="title">_throw</span>(<span class="params">err</span>) </span>&#123;</span><br><span class="line">        asyncGeneratorStep(gen, resolve, reject, _next, _throw, <span class="string">'throw'</span>, err);</span><br><span class="line">      &#125;</span><br><span class="line">      _next(<span class="literal">undefined</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> fetchFromNetwork = <span class="function">(<span class="params">val</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">Promise</span>.resolve(val);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">const</span> failedFetchFromNetwork = <span class="function">(<span class="params">val</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">Promise</span>.resolve(val);</span><br><span class="line">  <span class="comment">// return Promise.reject(val);</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">doSomething</span>(<span class="params">_x</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> _doSomething.apply(<span class="keyword">this</span>, <span class="built_in">arguments</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">_doSomething</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  _doSomething = _asyncToGenerator(<span class="function"><span class="keyword">function</span>* (<span class="params">value</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> result1 = <span class="keyword">yield</span> fetchFromNetwork(value + <span class="string">'-1'</span>);</span><br><span class="line">    <span class="keyword">const</span> result2 = <span class="keyword">yield</span> fetchFromNetwork(value + <span class="string">'-2'</span>);</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> result3 = <span class="keyword">yield</span> failedFetchFromNetwork();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">      <span class="built_in">console</span>.error(<span class="string">'Error fetching from network'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result1 + <span class="string">' '</span> + result2;</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">return</span> _doSomething.apply(<span class="keyword">this</span>, <span class="built_in">arguments</span>);</span><br><span class="line">&#125;</span><br><span class="line">doSomething(<span class="string">'http://google.com'</span>)</span><br><span class="line">  .then(<span class="function">(<span class="params">r</span>) =&gt;</span> <span class="built_in">console</span>.log(<span class="string">`Got result: <span class="subst">$&#123;r&#125;</span>`</span>))</span><br><span class="line">  .catch(<span class="built_in">console</span>.error);</span><br></pre></td></tr></table></figure><blockquote><p>精华之处：_next和_throw函数的递归调用。</p></blockquote><h5 id="TypeScript-4-9-5，面向ES2015"><a href="#TypeScript-4-9-5，面向ES2015" class="headerlink" title="TypeScript 4.9.5，面向ES2015"></a>TypeScript 4.9.5，面向ES2015</h5><p><a href="https://www.typescriptlang.org/play?target=2#code/MYewdgzgLgBAZgUysAFgMQE4gLYDkkDuIGA1jALwwAUAbgIYA2AlBQHwwDeAUDDBkgFcMYGAAUs2AJYQEAOn4QQDGglqMmAbi4BfLV1CRYcOpIYIAJmiSpMOfFCKkK1eszacefQcLETpchSUVNWYtXgB6cK8oIRFxHH95BAArBGAoEM0dPToIAE8wYHgBQqhJcBhzEABlHCQUSTAAcxCBBBZuXl4DaC8IAQYoAEZnOgITI2t0CXtHElaEGABqGAByAFoh1ayumB7YBQGoACZR8clJ5Gm7QmJ51zbltfXj7bCuqAw8j13d-b6jgBmM4TeAmMyWKa2PC3UhUHZdbR7OhXagIDBYDAdTy-PbgRRmWTozFUVYAUQxxHgU0aTXgEhgYFhJDeOJg2jZ-BiPkOgxGK1WayevJOWg5VVq2HqtNJKCgUAADgAuSJNEAgJqE0DYbZs2RQFAIMBUDDuHpKOQMDVUAAGAHEQAcEP1BkqYAASDgYbQ2phMPXAFGoKjmwnE4hMIA" target="_blank" rel="noopener">TypeScript Playground</a></p><p><em>输入：</em></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> fetchFromNetwork = <span class="function">(<span class="params">val</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">Promise</span>.resolve(val);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> failedFetchFromNetwork = <span class="function">(<span class="params">val</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">Promise</span>.resolve(val);</span><br><span class="line">  <span class="comment">// return Promise.reject(val);</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">doSomething</span>(<span class="params">value</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> result1 = <span class="keyword">await</span> fetchFromNetwork(value);</span><br><span class="line">    <span class="keyword">const</span> result2 = <span class="keyword">await</span> fetchFromNetwork(value);</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> result3 = <span class="keyword">await</span> failedFetchFromNetwork();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">        <span class="built_in">console</span>.error(<span class="string">'Error fetching from network'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result1 + result2;</span><br><span class="line">&#125;</span><br><span class="line">doSomething(<span class="string">'http://google.com'</span>)</span><br><span class="line">    .then(<span class="function"><span class="params">r</span> =&gt;</span> <span class="built_in">console</span>.log(<span class="string">`Got result: <span class="subst">$&#123;r&#125;</span>`</span>))</span><br><span class="line">    .catch(<span class="built_in">console</span>.error)</span><br></pre></td></tr></table></figure><p><em>输出：</em></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">var</span> __awaiter =</span><br><span class="line">  (<span class="keyword">this</span> &amp;&amp; <span class="keyword">this</span>.__awaiter) ||</span><br><span class="line">  <span class="function"><span class="keyword">function</span> (<span class="params">thisArg, _arguments, P, generator</span>) </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">adopt</span>(<span class="params">value</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> value <span class="keyword">instanceof</span> P</span><br><span class="line">        ? value</span><br><span class="line">        : <span class="keyword">new</span> P(<span class="function"><span class="keyword">function</span> (<span class="params">resolve</span>) </span>&#123;</span><br><span class="line">            resolve(value);</span><br><span class="line">          &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> (P || (P = <span class="built_in">Promise</span>))(<span class="function"><span class="keyword">function</span> (<span class="params">resolve, reject</span>) </span>&#123;</span><br><span class="line">      <span class="function"><span class="keyword">function</span> <span class="title">fulfilled</span>(<span class="params">value</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">          step(generator.next(value));</span><br><span class="line">        &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">          reject(e);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="function"><span class="keyword">function</span> <span class="title">rejected</span>(<span class="params">value</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">          step(generator[<span class="string">'throw'</span>](value));</span><br><span class="line">        &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">          reject(e);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="function"><span class="keyword">function</span> <span class="title">step</span>(<span class="params">result</span>) </span>&#123;</span><br><span class="line">        result.done</span><br><span class="line">          ? resolve(result.value)</span><br><span class="line">          : adopt(result.value).then(fulfilled, rejected);</span><br><span class="line">      &#125;</span><br><span class="line">      step((generator = generator.apply(thisArg, _arguments || [])).next());</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;;</span><br><span class="line"><span class="keyword">const</span> fetchFromNetwork = <span class="function">(<span class="params">val</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">Promise</span>.resolve(val);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">const</span> failedFetchFromNetwork = <span class="function">(<span class="params">val</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">Promise</span>.resolve(val);</span><br><span class="line">  <span class="comment">// return Promise.reject(val);</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">doSomething</span>(<span class="params">value</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> __awaiter(<span class="keyword">this</span>, <span class="keyword">void</span> <span class="number">0</span>, <span class="keyword">void</span> <span class="number">0</span>, <span class="function"><span class="keyword">function</span>* (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> result1 = <span class="keyword">yield</span> fetchFromNetwork(value + <span class="string">'-1'</span>);</span><br><span class="line">    <span class="keyword">const</span> result2 = <span class="keyword">yield</span> fetchFromNetwork(value + <span class="string">'-2'</span>);</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> result3 = <span class="keyword">yield</span> failedFetchFromNetwork();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">      <span class="built_in">console</span>.error(<span class="string">'Error fetching from network'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result1 + <span class="string">' '</span> + result2;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line">doSomething(<span class="string">'http://google.com'</span>)</span><br><span class="line">  .then(<span class="function">(<span class="params">r</span>) =&gt;</span> <span class="built_in">console</span>.log(<span class="string">`Got result: <span class="subst">$&#123;r&#125;</span>`</span>))</span><br><span class="line">  .catch(<span class="built_in">console</span>.error);</span><br></pre></td></tr></table></figure><blockquote><p>精华之处: step函数的递归调用.</p></blockquote><p><img src="https://image-static.segmentfault.com/279/129/279129796-63f8ef7a08979_fix732" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;实现Async-Await&quot;&gt;&lt;a href=&quot;#实现Async-Await&quot; class=&quot;headerlink&quot; title=&quot;实现Async/Await&quot;&gt;&lt;/a&gt;实现Async/Await&lt;/h3&gt;&lt;p&gt;要挑战的任务是使用JavaScript的generator生成器来实现Async/Await。&lt;/p&gt;
    
    </summary>
    
    
      <category term="TypeScript" scheme="http://lesliewong.cn/categories/TypeScript/"/>
    
      <category term="算法" scheme="http://lesliewong.cn/categories/TypeScript/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://lesliewong.cn/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="TypeScript" scheme="http://lesliewong.cn/tags/TypeScript/"/>
    
  </entry>
  
  <entry>
    <title>算法思维体操：用JavaScript和Python自己实现reduceRight和map（链表）</title>
    <link href="http://lesliewong.cn/2023/02/22/reduceRight-map-polyfill-javascript-python/"/>
    <id>http://lesliewong.cn/2023/02/22/reduceRight-map-polyfill-javascript-python/</id>
    <published>2023-02-22T15:07:30.000Z</published>
    <updated>2024-01-18T05:05:30.494Z</updated>
    
    <content type="html"><![CDATA[<h3 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h3><p>我们从一个链表的构造函数开始，“cons”，它接收一个必要参数“head”及一个可选参数“tail”（相对于支持这样的实现的语言来说）。该构造函数返回一个链表的表示结构体，其中第一个元素为“head”，其余的元素被包裹在“tail“链表中。空链表的话用JavaScript中的undefined或Python中的None来表示。</p><a id="more"></a><p>举例来说，直到微小变化，”cons(1, cons(2, cons(3, cons(4))))”构造了一个含有4个元素的链表，”1 2 3 4“。</p><p>为了便于检查链表中的内容，我们定义了”listToString“方法来将链表转换为相应的字符串，其中链表元素之间用空格隔开。</p><p>”myMap“方法接收一个一元函数”fn“和一个链表”list“。它循序遍历链表中的每一个元素，并返回一个各元素都被”fn“转化过了的链表。</p><p>”myReduce”方法会对输入的链表从头到尾使用一个reducer函数“fn”，然后返回最终结果。比如，假设链表为“cons(1, cons(2, cons(3,)))”，“myReduce(fn, accm, list)”应该返回执行“fn(fn(fn(accm, 1), 2), 3)”得到的结果。</p><p>上述的三个方法都是使用递归实现的，巧妙运用了链表的递归结构。</p><h3 id="第1部分：实现“myReduceRight”"><a href="#第1部分：实现“myReduceRight”" class="headerlink" title="第1部分：实现“myReduceRight”"></a>第1部分：实现“myReduceRight”</h3><p>请实现“myReduceRight”方法。其类似于“myReduce”，不同之处在于它是从尾到头对输入的链表使用reducer函数“fn”的。比如，假设链表为“cons(1, cons(2, cons(3)))”，”myReduceRight(fn, accm, list)”应该返回执行“fn(1, fn(2, fn(3, accm)))”得到的结果。</p><p>要求：</p><ol><li>你<strong>需要</strong>使用递归来实现，而不是任何显式的for/while循环；</li><li>你<strong>不能</strong>在你的实现中使用先前已定义好的”listToString“、”myMap“和”myReduce“方法；</li><li>你<strong>不能</strong>修改原始链表。</li></ol><p>要检查你的实现的正确性，可以验证：</p><ul><li>”<code>myReduceRight(xTimesTwoPlusY, 0, exampleList)</code>“应该得到“20”；</li><li>“<code>myReduceRight(unfoldCalculation, accm, exampleList)</code>“应该表示为”fn(1, fn(2, fn(3, fn(4, accm))))”；</li><li>“<code>myReduceRight(printXAndReturnY, 0, exampleList)</code>“应该按照输入链表的逆序来打印内容。</li></ul><hr><h3 id="第2部分：实现”myMap2“"><a href="#第2部分：实现”myMap2“" class="headerlink" title="第2部分：实现”myMap2“"></a>第2部分：实现”myMap2“</h3><p>请基于“myReduceRight”方法实现”myMap2“，其应该在功能性上同质于”myMap“。</p><p>对实现的基本要求：</p><ol><li>你<strong>不能</strong>在你的实现中使用先前已定义好的”listToString“、”myMap“和”myReduce“方法；</li><li>你<strong>不能</strong>修改任何函数的输入输出特征，包括”myReduceRight“的输入输出特征；</li><li>你<strong>不能</strong>在借在”myReduceRight“中投机取巧来助力实现”myMap2“，例如向”myReduceRight“传递隐藏标志以表示特殊处理；</li><li>你<strong>不能</strong>使用任何语言原生的特殊数据结构（举例，C++中的”std::vector”，Java中的“ArrayList”，Python中的“list”）。</li></ol><p>如果你的实现满足以下尽可能多的要求，你将获得“加分”：</p><ol><li>不要使用任何显式的递归调用。特别地，避免在实现中声明调用“myMap2”；</li><li>不要在实现中使用任何显式的for/while循环。为此你需要探究下“myReduceRight”的巧妙用法；</li><li>不要修改原始链表。</li></ol><p>以下是你可以遵循的几个方向：</p><ul><li>列表翻转；</li><li>在reducer方法中修改链表；</li><li>巧妙地使用闭包和lambda函数来调整代码执行顺序。特别地，考虑考虑延时执行，如<code>(() -&gt; doSomething)()。</code></li></ul><p>要检查你的实现的正确性，可以验证：</p><ul><li>“<code>listToString(myMap2(plusOne, exampleList))</code>”应该得到“2 3 4 5”；</li><li>“<code>myMap2(printAndReturn, exampleList)</code>”应该按照正确的次序打印链表内容（“1 2 3 4”分别各占据一行而不是“4 3 2 1”）。</li></ul><hr><h4 id="JavaScript代码模板："><a href="#JavaScript代码模板：" class="headerlink" title="JavaScript代码模板："></a>JavaScript代码模板：</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Refer to README for detailed instructions.</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">cons</span>(<span class="params">head, tail</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    head: head,</span><br><span class="line">    tail: tail,</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">listToString</span>(<span class="params">list</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (!list) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">''</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (!list.tail) &#123;</span><br><span class="line">    <span class="keyword">return</span> list.head.toString();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> list.head.toString() + <span class="string">' '</span> + listToString(list.tail);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">myMap</span>(<span class="params">fn, list</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (!list) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">undefined</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> cons(fn(list.head), myMap(fn, list.tail));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">myReduce</span>(<span class="params">fn, accm, list</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (!list) &#123;</span><br><span class="line">    <span class="keyword">return</span> accm;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> myReduce(fn, fn(accm, list.head), list.tail);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">myReduceRight</span>(<span class="params">fn, accm, list</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// [BEGIN] YOUR CODE HERE</span></span><br><span class="line">  <span class="keyword">return</span> <span class="literal">undefined</span>;</span><br><span class="line">  <span class="comment">// [END] YOUR CODE HERE</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">myMap2</span>(<span class="params">fn, list</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// [BEGIN] YOUR CODE HERE</span></span><br><span class="line">  <span class="keyword">return</span> <span class="literal">undefined</span>;</span><br><span class="line">  <span class="comment">// [END] YOUR CODE HERE</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">main</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> exampleList = cons(<span class="number">1</span>, cons(<span class="number">2</span>, cons(<span class="number">3</span>, cons(<span class="number">4</span>))));</span><br><span class="line">  <span class="keyword">let</span> plusOne = <span class="function">(<span class="params">x</span>) =&gt;</span> x + <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">let</span> xTimesTwoPlusY = <span class="function">(<span class="params">x, y</span>) =&gt;</span> x * <span class="number">2</span> + y;</span><br><span class="line">  <span class="keyword">let</span> printXAndReturnY = <span class="function">(<span class="params">x, y</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(x);</span><br><span class="line">    <span class="keyword">return</span> y;</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="keyword">let</span> unfoldCalculation = <span class="function">(<span class="params">x, y</span>) =&gt;</span> <span class="string">'fn('</span> + x + <span class="string">', '</span> + y + <span class="string">')'</span>;</span><br><span class="line">  <span class="keyword">let</span> printAndReturn = <span class="built_in">console</span>.log;</span><br><span class="line">  <span class="built_in">console</span>.log(listToString(exampleList), <span class="string">'should be 1 2 3 4'</span>);</span><br><span class="line">  <span class="built_in">console</span>.log(listToString(myMap(plusOne, exampleList)), <span class="string">'should be 2 3 4 5'</span>);</span><br><span class="line">  <span class="built_in">console</span>.log(myReduce(xTimesTwoPlusY, <span class="number">0</span>, exampleList), <span class="string">'should be 26'</span>);</span><br><span class="line">  <span class="built_in">console</span>.log(</span><br><span class="line">    myReduce(unfoldCalculation, <span class="string">'accm'</span>, exampleList),</span><br><span class="line">    <span class="string">'should be fn(fn(fn(fn(accm, 1), 2), 3), 4)'</span></span><br><span class="line">  );</span><br><span class="line">  <span class="built_in">console</span>.log(myReduceRight(xTimesTwoPlusY, <span class="number">0</span>, exampleList), <span class="string">'should be 20'</span>);</span><br><span class="line">  <span class="built_in">console</span>.log(</span><br><span class="line">    myReduceRight(unfoldCalculation, <span class="string">'accm'</span>, exampleList),</span><br><span class="line">    <span class="string">'should be fn(1, fn(2, fn(3, fn(4, accm))))'</span></span><br><span class="line">  );</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'Below should output 4 3 2 1 each on a separate line:'</span>);</span><br><span class="line">  myReduceRight(printXAndReturnY, <span class="number">0</span>, exampleList);</span><br><span class="line">  <span class="built_in">console</span>.log(listToString(myMap2(plusOne, exampleList)), <span class="string">'should be 2 3 4 5'</span>);</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'The two outputs below should be equal:'</span>);</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'First output:'</span>);</span><br><span class="line">  myMap(printAndReturn, exampleList);</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'Second output:'</span>);</span><br><span class="line">  myMap2(printAndReturn, exampleList);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">main();</span><br></pre></td></tr></table></figure><h4 id="Python代码模板："><a href="#Python代码模板：" class="headerlink" title="Python代码模板："></a>Python代码模板：</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Refer to README for detailed instructions.</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> print_function</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LinkedList</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, head, tail)</span>:</span></span><br><span class="line">        self.head = head</span><br><span class="line">        self.tail = tail</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">cons</span><span class="params">(head, tail=None)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> LinkedList(head, tail)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">listToString</span><span class="params">(list)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> list <span class="keyword">is</span> <span class="keyword">None</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">""</span></span><br><span class="line">    <span class="keyword">if</span> list.tail <span class="keyword">is</span> <span class="keyword">None</span>:</span><br><span class="line">        <span class="keyword">return</span> str(list.head)</span><br><span class="line">    <span class="keyword">return</span> str(list.head) + <span class="string">" "</span> + listToString(list.tail)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">myMap</span><span class="params">(fn, list)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> list <span class="keyword">is</span> <span class="keyword">None</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">None</span></span><br><span class="line">    <span class="keyword">return</span> cons(fn(list.head), myMap(fn, list.tail))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">myReduce</span><span class="params">(fn, accm, list)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> list <span class="keyword">is</span> <span class="keyword">None</span>:</span><br><span class="line">        <span class="keyword">return</span> accm</span><br><span class="line">    <span class="keyword">return</span> myReduce(fn, fn(accm, list.head), list.tail)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">myReduceRight</span><span class="params">(fn, accm, list)</span>:</span></span><br><span class="line">    <span class="comment"># [BEGIN] YOUR CODE HERE</span></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">None</span></span><br><span class="line">    <span class="comment"># [END] YOUR CODE HERE</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">myMap2</span><span class="params">(fn, list)</span>:</span></span><br><span class="line">    <span class="comment"># [BEGIN] YOUR CODE HERE</span></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">None</span></span><br><span class="line">    <span class="comment"># [END] YOUR CODE HERE</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    exampleList = cons(<span class="number">1</span>, cons(<span class="number">2</span>, cons(<span class="number">3</span>, cons(<span class="number">4</span>))))</span><br><span class="line">    plusOne = <span class="keyword">lambda</span> x: x + <span class="number">1</span></span><br><span class="line">    xTimesTwoPlusY = <span class="keyword">lambda</span> x, y: x * <span class="number">2</span> + y</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">printXAndReturnY</span><span class="params">(x, y)</span>:</span></span><br><span class="line">        print(x)</span><br><span class="line">        <span class="keyword">return</span> y</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">unfoldCalculation</span><span class="params">(x, y)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">"fn(%s, %s)"</span> % (str(x), str(y))</span><br><span class="line">    printAndReturn = <span class="keyword">print</span></span><br><span class="line">    print(listToString(exampleList), <span class="string">"should be 1 2 3 4"</span>)</span><br><span class="line">    print(listToString(myMap(plusOne, exampleList)), <span class="string">"should be 2 3 4 5"</span>)</span><br><span class="line">    print(myReduce(xTimesTwoPlusY, <span class="number">0</span>, exampleList), <span class="string">"should be 26"</span>)</span><br><span class="line">    print(myReduce(unfoldCalculation, <span class="string">"accm"</span>, exampleList), <span class="string">"should be fn(fn(fn(fn(accm, 1), 2), 3), 4)"</span>)</span><br><span class="line">    print(myReduceRight(xTimesTwoPlusY, <span class="number">0</span>, exampleList), <span class="string">"should be 20"</span>)</span><br><span class="line">    print(myReduceRight(unfoldCalculation, <span class="string">"accm"</span>, exampleList), <span class="string">"should be fn(1, fn(2, fn(3, fn(4, accm))))"</span>)</span><br><span class="line">    print(<span class="string">"Below should output 4 3 2 1 each on a separate line:"</span>);</span><br><span class="line">    myReduceRight(printXAndReturnY, <span class="number">0</span>, exampleList)</span><br><span class="line">    print(listToString(myMap2(plusOne, exampleList)), <span class="string">"should be 2 3 4 5"</span>)</span><br><span class="line">    print(<span class="string">"The two outputs below should be equal:"</span>)</span><br><span class="line">    print(<span class="string">"First output:"</span>)</span><br><span class="line">    myMap(printAndReturn, exampleList)</span><br><span class="line">    print(<span class="string">"Second output:"</span>)</span><br><span class="line">    myMap2(printAndReturn, exampleList)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><hr><h3 id="最终实现："><a href="#最终实现：" class="headerlink" title="最终实现："></a>最终实现：</h3><h4 id="JavaScript实现："><a href="#JavaScript实现：" class="headerlink" title="JavaScript实现："></a>JavaScript实现：</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Refer to README for detailed instructions.</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">cons</span>(<span class="params">head, tail</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    head: head,</span><br><span class="line">    tail: tail,</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">listToString</span>(<span class="params">list</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (!list) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">''</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (!list.tail) &#123;</span><br><span class="line">    <span class="keyword">return</span> list.head.toString();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> list.head.toString() + <span class="string">' '</span> + listToString(list.tail);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">myMap</span>(<span class="params">fn, list</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (!list) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">undefined</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> cons(fn(list.head), myMap(fn, list.tail));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">myReduce</span>(<span class="params">fn, accm, list</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (!list) &#123;</span><br><span class="line">    <span class="keyword">return</span> accm;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> myReduce(fn, fn(accm, list.head), list.tail);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">myReduceRight</span>(<span class="params">fn, accm, list</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// [BEGIN] YOUR CODE HERE</span></span><br><span class="line">  <span class="keyword">if</span> (!list) &#123;</span><br><span class="line">    <span class="keyword">return</span> accm;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// State-of-the-art trampoline trick to prevent recursion stack overflow</span></span><br><span class="line">  <span class="keyword">const</span> trampoline = <span class="function">(<span class="params">fun</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> <span class="title">trampolined</span>(<span class="params">...args</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">var</span> result = fun(...args);</span><br><span class="line"></span><br><span class="line">      <span class="keyword">while</span> (<span class="keyword">typeof</span> result == <span class="string">'function'</span>) &#123;</span><br><span class="line">        result = result();</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">return</span> result;</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> reverseOperation = <span class="function">(<span class="params">origList</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> reverseCons = <span class="function">(<span class="params">cons, acc = []</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (!cons) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">undefined</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      acc.push(cons.head);</span><br><span class="line">      <span class="keyword">if</span> (cons.tail <span class="keyword">instanceof</span> <span class="built_in">Object</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> reverseCons(cons.tail, acc);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> acc.reverse();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> recursCons = <span class="function">(<span class="params">jsList = []</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (jsList.length &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">undefined</span>;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">          head: jsList[<span class="number">0</span>],</span><br><span class="line">          tail: recursCons(jsList.slice(<span class="number">1</span>)),</span><br><span class="line">        &#125;;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// IMMUTABLE</span></span><br><span class="line">    <span class="keyword">const</span> newList = <span class="built_in">Object</span>.assign(&#123;&#125;, origList);</span><br><span class="line">    <span class="comment">//   Get the reversed version of Linklist in another plain representation</span></span><br><span class="line">    <span class="keyword">const</span> reversedJSList = trampoline(reverseCons)(newList, []);</span><br><span class="line">    <span class="comment">// Back assign the reversed plain representation to Linklist</span></span><br><span class="line">    <span class="keyword">const</span> reversedLinkList = trampoline(recursCons)(reversedJSList);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> reversedLinkList;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> innerReducer = <span class="function">(<span class="params">fn_, accm_, list_</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (!list_) &#123;</span><br><span class="line">      <span class="keyword">return</span> accm_;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> innerReducer(fn_, fn_(list_.head, accm_), list_.tail);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> trampoline(innerReducer)(fn, accm, reverseOperation(list));</span><br><span class="line">  <span class="comment">// [END] YOUR CODE HERE</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">myMap2</span>(<span class="params">fn, list</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// [BEGIN] YOUR CODE HERE</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// State-of-the-art trampoline trick to prevent recursion stack overflow</span></span><br><span class="line">  <span class="keyword">const</span> trampoline = <span class="function">(<span class="params">fun</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> <span class="title">trampolined</span>(<span class="params">...args</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">var</span> result = fun(...args);</span><br><span class="line"></span><br><span class="line">      <span class="keyword">while</span> (<span class="keyword">typeof</span> result == <span class="string">'function'</span>) &#123;</span><br><span class="line">        result = result();</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">return</span> result;</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> polishedFn = <span class="function">(<span class="params">cur, acc</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> newAcc = &#123;&#125;;</span><br><span class="line">    newAcc.tail = <span class="built_in">Object</span>.keys(acc).length &gt; <span class="number">0</span> ? acc : <span class="literal">undefined</span>;</span><br><span class="line">    newAcc.head = <span class="function"><span class="params">()</span> =&gt;</span> fn(cur); <span class="comment">// delay to keep the map order</span></span><br><span class="line">    <span class="keyword">return</span> newAcc;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> newList = <span class="built_in">Object</span>.assign(list);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> storeList = myReduceRight(polishedFn, &#123;&#125;, newList);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> activateStore = <span class="function">(<span class="params">store</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (!store) <span class="keyword">return</span> <span class="literal">undefined</span>;</span><br><span class="line">    store.head = store.head <span class="keyword">instanceof</span> <span class="built_in">Function</span> ? store.head() : store.head;</span><br><span class="line">    store.tail = activateStore(store.tail);</span><br><span class="line">    <span class="keyword">return</span> store;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> trampoline(activateStore)(storeList);</span><br><span class="line">  <span class="comment">// [END] YOUR CODE HERE</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">main</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> exampleList = cons(<span class="number">1</span>, cons(<span class="number">2</span>, cons(<span class="number">3</span>, cons(<span class="number">4</span>))));</span><br><span class="line">  <span class="keyword">let</span> plusOne = <span class="function">(<span class="params">x</span>) =&gt;</span> x + <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">let</span> xTimesTwoPlusY = <span class="function">(<span class="params">x, y</span>) =&gt;</span> x * <span class="number">2</span> + y;</span><br><span class="line">  <span class="keyword">let</span> printXAndReturnY = <span class="function">(<span class="params">x, y</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(x);</span><br><span class="line">    <span class="keyword">return</span> y;</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="keyword">let</span> unfoldCalculation = <span class="function">(<span class="params">x, y</span>) =&gt;</span> <span class="string">'fn('</span> + x + <span class="string">', '</span> + y + <span class="string">')'</span>;</span><br><span class="line">  <span class="keyword">let</span> printAndReturn = <span class="built_in">console</span>.log;</span><br><span class="line">  <span class="built_in">console</span>.log(listToString(exampleList), <span class="string">'should be 1 2 3 4'</span>);</span><br><span class="line">  <span class="built_in">console</span>.log(listToString(myMap(plusOne, exampleList)), <span class="string">'should be 2 3 4 5'</span>);</span><br><span class="line">  <span class="built_in">console</span>.log(myReduce(xTimesTwoPlusY, <span class="number">0</span>, exampleList), <span class="string">'should be 26'</span>);</span><br><span class="line">  <span class="built_in">console</span>.log(</span><br><span class="line">    myReduce(unfoldCalculation, <span class="string">'accm'</span>, exampleList),</span><br><span class="line">    <span class="string">'should be fn(fn(fn(fn(accm, 1), 2), 3), 4)'</span></span><br><span class="line">  );</span><br><span class="line">  <span class="built_in">console</span>.log(myReduceRight(xTimesTwoPlusY, <span class="number">0</span>, exampleList), <span class="string">'should be 20'</span>);</span><br><span class="line">  <span class="built_in">console</span>.log(</span><br><span class="line">    myReduceRight(unfoldCalculation, <span class="string">'accm'</span>, exampleList),</span><br><span class="line">    <span class="string">'should be fn(1, fn(2, fn(3, fn(4, accm))))'</span></span><br><span class="line">  );</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'Below should output 4 3 2 1 each on a separate line:'</span>);</span><br><span class="line">  myReduceRight(printXAndReturnY, <span class="number">0</span>, exampleList);</span><br><span class="line">  <span class="built_in">console</span>.log(listToString(myMap2(plusOne, exampleList)), <span class="string">'should be 2 3 4 5'</span>);</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'The two outputs below should be equal:'</span>);</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'First output:'</span>);</span><br><span class="line">  myMap(printAndReturn, exampleList);</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'Second output:'</span>);</span><br><span class="line">  myMap2(printAndReturn, exampleList);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">main();</span><br></pre></td></tr></table></figure><blockquote><p>诀窍：使用蹦床函数trampoline优化递归调用。</p></blockquote><h4 id="打印结果："><a href="#打印结果：" class="headerlink" title="打印结果："></a>打印结果：</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">'1 2 3 4' 'should be 1 2 3 4'</span><br><span class="line">'2 3 4 5' 'should be 2 3 4 5'</span><br><span class="line">26 'should be 26'</span><br><span class="line">'fn(fn(fn(fn(accm, 1), 2), 3), 4)' 'should be fn(fn(fn(fn(accm, 1), 2), 3), 4)'</span><br><span class="line">20 'should be 20'</span><br><span class="line">'fn(1, fn(2, fn(3, fn(4, accm))))' 'should be fn(1, fn(2, fn(3, fn(4, accm))))'</span><br><span class="line">'Below should output 4 3 2 1 each on a separate line:'</span><br><span class="line">4</span><br><span class="line">3</span><br><span class="line">2</span><br><span class="line">1</span><br><span class="line">'2 3 4 5' 'should be 2 3 4 5'</span><br><span class="line">'The two outputs below should be equal:'</span><br><span class="line">'First output:'</span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">'Second output:'</span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td></tr></table></figure><hr><h4 id="Python实现："><a href="#Python实现：" class="headerlink" title="Python实现："></a>Python实现：</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Refer to README for detailed instructions.</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> print_function</span><br><span class="line"><span class="keyword">import</span> copy</span><br><span class="line"><span class="keyword">import</span> types</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LinkedList</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, head, tail)</span>:</span></span><br><span class="line">        self.head = head</span><br><span class="line">        self.tail = tail</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">cons</span><span class="params">(head, tail=None)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> LinkedList(head, tail)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">listToString</span><span class="params">(list)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> list <span class="keyword">is</span> <span class="keyword">None</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">""</span></span><br><span class="line">    <span class="keyword">if</span> list.tail <span class="keyword">is</span> <span class="keyword">None</span>:</span><br><span class="line">        <span class="keyword">return</span> str(list.head)</span><br><span class="line">    <span class="keyword">return</span> str(list.head) + <span class="string">" "</span> + listToString(list.tail)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">myMap</span><span class="params">(fn, list)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> list <span class="keyword">is</span> <span class="keyword">None</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">None</span></span><br><span class="line">    <span class="keyword">return</span> cons(fn(list.head), myMap(fn, list.tail))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">myReduce</span><span class="params">(fn, accm, list)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> list <span class="keyword">is</span> <span class="keyword">None</span>:</span><br><span class="line">        <span class="keyword">return</span> accm</span><br><span class="line">    <span class="keyword">return</span> myReduce(fn, fn(accm, list.head), list.tail)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">myReduceRight</span><span class="params">(fn, accm, list)</span>:</span></span><br><span class="line">    <span class="comment"># [BEGIN] YOUR CODE HERE</span></span><br><span class="line">    <span class="keyword">if</span> list <span class="keyword">is</span> <span class="keyword">None</span>:</span><br><span class="line">        <span class="keyword">return</span> accm</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">reverseOperation</span><span class="params">(origList)</span>:</span></span><br><span class="line">        <span class="comment"># Get the reversed version of Linklist in another plain representation</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">reverseCons</span><span class="params">(cons, acc = [])</span>:</span></span><br><span class="line">            <span class="keyword">if</span> cons <span class="keyword">is</span> <span class="keyword">None</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">None</span></span><br><span class="line">            acc.append(cons.head)</span><br><span class="line">            <span class="keyword">if</span> cons.tail != <span class="keyword">None</span>:</span><br><span class="line">                <span class="keyword">return</span> reverseCons(cons.tail, acc)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">return</span> acc[::<span class="number">-1</span>]</span><br><span class="line">        <span class="comment"># Back assign the reversed plain representation to Linklist</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">recursCons</span><span class="params">(pyList = [])</span>:</span></span><br><span class="line">            <span class="keyword">if</span> len(pyList) &lt;= <span class="number">0</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">None</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">return</span> cons(pyList[<span class="number">0</span>], recursCons(pyList[<span class="number">1</span>:]))</span><br><span class="line"></span><br><span class="line">        newList = copy.deepcopy(origList)</span><br><span class="line">        reversedPyList = reverseCons(newList, []);</span><br><span class="line">        reversedLinkList = recursCons(reversedPyList);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> reversedLinkList</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">innerReducer</span><span class="params">(fn_, accm_, list_)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> list_ <span class="keyword">is</span> <span class="keyword">None</span>:</span><br><span class="line">            <span class="keyword">return</span> accm_</span><br><span class="line">        <span class="keyword">return</span> innerReducer(fn_, fn_(list_.head, accm_), list_.tail)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> innerReducer(fn, accm, reverseOperation(list));</span><br><span class="line">    <span class="comment"># [END] YOUR CODE HERE</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">myMap2</span><span class="params">(fn, list)</span>:</span></span><br><span class="line">    <span class="comment"># [BEGIN] YOUR CODE HERE</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">polishedFn</span><span class="params">(cur, acc)</span>:</span></span><br><span class="line">        newAcc = cons(<span class="keyword">None</span>)</span><br><span class="line">        newAcc.tail = acc <span class="keyword">if</span> isinstance(acc, LinkedList) <span class="keyword">else</span> <span class="keyword">None</span></span><br><span class="line">        newAcc.head = <span class="keyword">lambda</span>: fn(cur) <span class="comment"># delay to keep the map order</span></span><br><span class="line">        <span class="keyword">return</span> newAcc</span><br><span class="line"></span><br><span class="line">    newList = copy.deepcopy(list)</span><br><span class="line"></span><br><span class="line">    storeList = myReduceRight(polishedFn, &#123;&#125;, newList);</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">activateStore</span><span class="params">(store)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> store <span class="keyword">is</span> <span class="keyword">None</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">None</span></span><br><span class="line">        store.head = store.head() <span class="keyword">if</span> isinstance(store.head, types.FunctionType) <span class="keyword">else</span> store.head</span><br><span class="line">        store.tail = activateStore(store.tail)</span><br><span class="line">        <span class="keyword">return</span> store</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> activateStore(storeList)</span><br><span class="line">    <span class="comment"># [END] YOUR CODE HERE</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    exampleList = cons(<span class="number">1</span>, cons(<span class="number">2</span>, cons(<span class="number">3</span>, cons(<span class="number">4</span>))))</span><br><span class="line">    plusOne = <span class="keyword">lambda</span> x: x + <span class="number">1</span></span><br><span class="line">    xTimesTwoPlusY = <span class="keyword">lambda</span> x, y: x * <span class="number">2</span> + y</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">printXAndReturnY</span><span class="params">(x, y)</span>:</span></span><br><span class="line">        print(x)</span><br><span class="line">        <span class="keyword">return</span> y</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">unfoldCalculation</span><span class="params">(x, y)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">"fn(%s, %s)"</span> % (str(x), str(y))</span><br><span class="line">    printAndReturn = <span class="keyword">print</span></span><br><span class="line">    print(listToString(exampleList), <span class="string">"should be 1 2 3 4"</span>)</span><br><span class="line">    print(listToString(myMap(plusOne, exampleList)), <span class="string">"should be 2 3 4 5"</span>)</span><br><span class="line">    print(myReduce(xTimesTwoPlusY, <span class="number">0</span>, exampleList), <span class="string">"should be 26"</span>)</span><br><span class="line">    print(myReduce(unfoldCalculation, <span class="string">"accm"</span>, exampleList), <span class="string">"should be fn(fn(fn(fn(accm, 1), 2), 3), 4)"</span>)</span><br><span class="line">    print(myReduceRight(xTimesTwoPlusY, <span class="number">0</span>, exampleList), <span class="string">"should be 20"</span>)</span><br><span class="line">    print(myReduceRight(unfoldCalculation, <span class="string">"accm"</span>, exampleList), <span class="string">"should be fn(1, fn(2, fn(3, fn(4, accm))))"</span>)</span><br><span class="line">    print(<span class="string">"Below should output 4 3 2 1 each on a separate line:"</span>);</span><br><span class="line">    myReduceRight(printXAndReturnY, <span class="number">0</span>, exampleList)</span><br><span class="line">    print(listToString(myMap2(plusOne, exampleList)), <span class="string">"should be 2 3 4 5"</span>)</span><br><span class="line">    print(<span class="string">"The two outputs below should be equal:"</span>)</span><br><span class="line">    print(<span class="string">"First output:"</span>)</span><br><span class="line">    myMap(printAndReturn, exampleList)</span><br><span class="line">    print(<span class="string">"Second output:"</span>)</span><br><span class="line">    myMap2(printAndReturn, exampleList)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><blockquote><p>备注：Python的trampoline蹦床函数实现有些复杂，直接递归处理了。可参考文章<a href="[Tail recursion in Python, part 1: trampolines - Andrzej Pragacz](http://andrzej.pragacz.pl/blog/2018/09/python-tail-recursion-part-1-trampolines/">Tail recursion in Python, part 1: trampolines</a>)。</p></blockquote><h4 id="打印结果：-1"><a href="#打印结果：-1" class="headerlink" title="打印结果："></a>打印结果：</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">1 2 3 4 should be 1 2 3 4</span><br><span class="line">2 3 4 5 should be 2 3 4 5</span><br><span class="line">26 should be 26</span><br><span class="line">fn(fn(fn(fn(accm, 1), 2), 3), 4) should be fn(fn(fn(fn(accm, 1), 2), 3), 4)</span><br><span class="line">20 should be 20</span><br><span class="line">fn(1, fn(2, fn(3, fn(4, accm)))) should be fn(1, fn(2, fn(3, fn(4, accm))))</span><br><span class="line">Below should output 4 3 2 1 each on a separate line:</span><br><span class="line">4</span><br><span class="line">3</span><br><span class="line">2</span><br><span class="line">1</span><br><span class="line">2 3 4 5 should be 2 3 4 5</span><br><span class="line">The two outputs below should be equal:</span><br><span class="line">First output:</span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">Second output:</span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td></tr></table></figure><p><img src="https://image-static.segmentfault.com/293/538/2935380546-63f8eed3960bf_fix732" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h3&gt;&lt;p&gt;我们从一个链表的构造函数开始，“cons”，它接收一个必要参数“head”及一个可选参数“tail”（相对于支持这样的实现的语言来说）。该构造函数返回一个链表的表示结构体，其中第一个元素为“head”，其余的元素被包裹在“tail“链表中。空链表的话用JavaScript中的undefined或Python中的None来表示。&lt;/p&gt;
    
    </summary>
    
    
      <category term="JavaScript" scheme="http://lesliewong.cn/categories/JavaScript/"/>
    
      <category term="Python" scheme="http://lesliewong.cn/categories/JavaScript/Python/"/>
    
      <category term="算法" scheme="http://lesliewong.cn/categories/JavaScript/Python/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="JavaScript" scheme="http://lesliewong.cn/tags/JavaScript/"/>
    
      <category term="算法" scheme="http://lesliewong.cn/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="Python" scheme="http://lesliewong.cn/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript专项算法题（7）：Iterators迭代器</title>
    <link href="http://lesliewong.cn/2022/05/07/JavaScript-functional-algorithms-iterators/"/>
    <id>http://lesliewong.cn/2022/05/07/JavaScript-functional-algorithms-iterators/</id>
    <published>2022-05-07T15:07:30.000Z</published>
    <updated>2024-01-18T05:04:26.006Z</updated>
    
    <content type="html"><![CDATA[<p>＠冒泡的马树</p><p>题库原地址：<a href="http://csbin.io/iterators" target="_blank" rel="noopener">http://csbin.io/iterators</a></p><h2 id="Iterators迭代器"><a href="#Iterators迭代器" class="headerlink" title="Iterators迭代器"></a>Iterators迭代器</h2><a id="more"></a><h3 id="挑战1"><a href="#挑战1" class="headerlink" title="挑战1"></a>挑战1</h3><p><strong>问题：</strong></p><p>A) 创建一个for循环，用于遍历数组，返回数组的所有元素的总和。</p><p>B) 创建一个函数式迭代器，调用时遍历传入的数组的每一个元素，每次一个元素。</p><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// CHALLENGE 1</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sumFunc</span>(<span class="params">arr</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// YOUR CODE HERE</span></span><br><span class="line">  <span class="keyword">let</span> sum = <span class="number">0</span></span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">    sum += arr[i]</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> sum</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Uncomment the lines below to test your work</span></span><br><span class="line"><span class="keyword">const</span> array = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>];</span><br><span class="line"><span class="built_in">console</span>.log(sumFunc(array)); <span class="comment">// -&gt; should log 10</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">returnIterator</span>(<span class="params">arr</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// YOUR CODE HERE</span></span><br><span class="line">  <span class="keyword">let</span> i = <span class="number">0</span></span><br><span class="line">  <span class="keyword">const</span> inner = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> element = arr[i]</span><br><span class="line">    i++</span><br><span class="line">    <span class="keyword">return</span> element</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> inner</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Uncomment the lines below to test your work</span></span><br><span class="line"><span class="keyword">const</span> array2 = [<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>];</span><br><span class="line"><span class="keyword">const</span> myIterator = returnIterator(array2);</span><br><span class="line"><span class="built_in">console</span>.log(myIterator()); <span class="comment">// -&gt; should log 'a'</span></span><br><span class="line"><span class="built_in">console</span>.log(myIterator()); <span class="comment">// -&gt; should log 'b'</span></span><br><span class="line"><span class="built_in">console</span>.log(myIterator()); <span class="comment">// -&gt; should log 'c'</span></span><br><span class="line"><span class="built_in">console</span>.log(myIterator()); <span class="comment">// -&gt; should log 'd'</span></span><br></pre></td></tr></table></figure><h3 id="挑战2"><a href="#挑战2" class="headerlink" title="挑战2"></a>挑战2</h3><p><strong>问题：</strong></p><p>创建一个附有next方法的迭代器。当.next被调用时，此迭代器会逐个返回数组内的元素。</p><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// CHALLENGE 2</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">nextIterator</span>(<span class="params">arr</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// YOUR CODE HERE</span></span><br><span class="line">  <span class="keyword">let</span> i = <span class="number">0</span></span><br><span class="line">  <span class="keyword">const</span> inner = &#123;</span><br><span class="line">    next: <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> element = arr[i]</span><br><span class="line">      i++</span><br><span class="line">      <span class="keyword">return</span> element</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> inner</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Uncomment the lines below to test your work</span></span><br><span class="line"><span class="keyword">const</span> array3 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br><span class="line"><span class="keyword">const</span> iteratorWithNext = nextIterator(array3);</span><br><span class="line"><span class="built_in">console</span>.log(iteratorWithNext.next()); <span class="comment">// -&gt; should log 1</span></span><br><span class="line"><span class="built_in">console</span>.log(iteratorWithNext.next()); <span class="comment">// -&gt; should log 2</span></span><br><span class="line"><span class="built_in">console</span>.log(iteratorWithNext.next()); <span class="comment">// -&gt; should log 3</span></span><br></pre></td></tr></table></figure><h3 id="挑战3"><a href="#挑战3" class="headerlink" title="挑战3"></a>挑战3</h3><p><strong>问题：</strong></p><p>编写代码，使用上方的nextIterator函数遍历一整个数组，然后求和。</p><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// CHALLENGE 3</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sumArray</span>(<span class="params">arr</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// YOUR CODE HERE</span></span><br><span class="line">  <span class="comment">// use your nextIterator function</span></span><br><span class="line">  <span class="keyword">const</span> iteratorWithNext = nextIterator(arr)</span><br><span class="line">  <span class="keyword">let</span> sum = <span class="number">0</span></span><br><span class="line">  <span class="keyword">let</span> item </span><br><span class="line">  <span class="keyword">while</span>(item = iteratorWithNext.next()) &#123;</span><br><span class="line">    sum += item</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> sum</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Uncomment the lines below to test your work</span></span><br><span class="line"><span class="keyword">const</span> array4 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>];</span><br><span class="line"><span class="built_in">console</span>.log(sumArray(array4)); <span class="comment">// -&gt; should log 10</span></span><br></pre></td></tr></table></figure><h3 id="挑战4"><a href="#挑战4" class="headerlink" title="挑战4"></a>挑战4</h3><p><strong>问题：</strong></p><p>创建一个附有next方法的迭代器。当调用.next时，它会返回传入的set集合的每一个元素。</p><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// CHALLENGE 4</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">setIterator</span>(<span class="params">set</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// YOUR CODE HERE</span></span><br><span class="line">  <span class="comment">// Solution One:</span></span><br><span class="line">  <span class="comment">// let i = 0</span></span><br><span class="line">  <span class="comment">// const arr = [...set]</span></span><br><span class="line">  <span class="comment">// return &#123;</span></span><br><span class="line">  <span class="comment">//   next: () =&gt; arr[i++]</span></span><br><span class="line">  <span class="comment">// &#125;</span></span><br><span class="line">  <span class="comment">// Solution Two:</span></span><br><span class="line">  <span class="keyword">const</span> newSet = set[<span class="built_in">Symbol</span>.iterator]()</span><br><span class="line">  <span class="keyword">return</span> &#123;<span class="attr">next</span>: <span class="function"><span class="params">()</span> =&gt;</span> newSet.next().value&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Uncomment the lines below to test your work</span></span><br><span class="line"><span class="keyword">const</span> mySet = <span class="keyword">new</span> <span class="built_in">Set</span>(<span class="string">'hey'</span>);</span><br><span class="line"><span class="keyword">const</span> iterateSet = setIterator(mySet);</span><br><span class="line"><span class="built_in">console</span>.log(iterateSet.next()); <span class="comment">// -&gt; should log 'h'</span></span><br><span class="line"><span class="built_in">console</span>.log(iterateSet.next()); <span class="comment">// -&gt; should log 'e'</span></span><br><span class="line"><span class="built_in">console</span>.log(iterateSet.next()); <span class="comment">// -&gt; should log 'y'</span></span><br></pre></td></tr></table></figure><h3 id="挑战5"><a href="#挑战5" class="headerlink" title="挑战5"></a>挑战5</h3><p><strong>问题：</strong></p><p>创建一个附有next方法的迭代器。当调用.next时，它会返回带有两个元素的数组（第一个为下标，第二个为下标对应的数组元素）。</p><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// CHALLENGE 5</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">indexIterator</span>(<span class="params">arr</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// YOUR CODE HERE</span></span><br><span class="line">  <span class="keyword">let</span> i = <span class="number">0</span></span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    next: <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> element = arr[i]</span><br><span class="line">      <span class="keyword">const</span> index = i</span><br><span class="line">      i++</span><br><span class="line">      <span class="keyword">return</span> [index, element]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Uncomment the lines below to test your work</span></span><br><span class="line"><span class="keyword">const</span> array5 = [<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>];</span><br><span class="line"><span class="keyword">const</span> iteratorWithIndex = indexIterator(array5);</span><br><span class="line"><span class="built_in">console</span>.log(iteratorWithIndex.next()); <span class="comment">// -&gt; should log [0, 'a']</span></span><br><span class="line"><span class="built_in">console</span>.log(iteratorWithIndex.next()); <span class="comment">// -&gt; should log [1, 'b']</span></span><br><span class="line"><span class="built_in">console</span>.log(iteratorWithIndex.next()); <span class="comment">// -&gt; should log [2, 'c']</span></span><br></pre></td></tr></table></figure><h3 id="挑战6"><a href="#挑战6" class="headerlink" title="挑战6"></a>挑战6</h3><p><strong>问题：</strong></p><p>创建一个迭代器。在它的.next方法被调用时，它会返回一个句子型字符串中的每一个单词。</p><p>（提示：使用正则表达式！）</p><p>然后将此操作当成一个方法挂载到构建函数Words的原型链上。</p><p>（提示：研究Symbol.iterator！）</p><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// CHALLENGE 6</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Words</span>(<span class="params">string</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">this</span>.str = string;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Words.prototype[<span class="built_in">Symbol</span>.iterator] = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="comment">// YOUR CODE HERE</span></span><br><span class="line">  <span class="keyword">const</span> reg = <span class="regexp">/\w+/g</span></span><br><span class="line">  <span class="keyword">const</span> strArr = <span class="keyword">this</span>.str.match(reg)</span><br><span class="line">  <span class="keyword">let</span> index = <span class="number">0</span></span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    next: <span class="function"><span class="params">()</span> =&gt;</span> </span><br><span class="line">      (index &lt; strArr.length) ? </span><br><span class="line">        &#123; <span class="attr">done</span>: <span class="literal">false</span>, <span class="attr">value</span>: strArr[index++] &#125; :</span><br><span class="line">        &#123; <span class="attr">done</span>: <span class="literal">true</span>, <span class="attr">value</span>: <span class="literal">undefined</span> &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Uncomment the lines below to test your work</span></span><br><span class="line"><span class="keyword">const</span> helloWorld = <span class="keyword">new</span> Words(<span class="string">'Hello World'</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> word <span class="keyword">of</span> helloWorld) &#123; <span class="built_in">console</span>.log(word); &#125; <span class="comment">// -&gt; should log 'Hello' and 'World'</span></span><br></pre></td></tr></table></figure><h3 id="挑战7"><a href="#挑战7" class="headerlink" title="挑战7"></a>挑战7</h3><p><strong>问题：</strong></p><p>创建一个函数。此函数会遍历传入的数组，返回对应的遍历元素和字符串“was found after index x”拼接而成的字符串结果，其中的x是前一个下标。</p><p>注意：对于第一个元素，它应该返回“It is the first”。</p><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// CHALLENGE 7</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">valueAndPrevIndex</span>(<span class="params">array</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">const</span> iteratedArray = array[<span class="built_in">Symbol</span>.iterator]()</span><br><span class="line">  <span class="keyword">let</span> index = <span class="number">0</span></span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    sentence: <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (index == <span class="number">0</span>) &#123;</span><br><span class="line">        iteratedArray.next()</span><br><span class="line">        index++</span><br><span class="line">        <span class="keyword">return</span> <span class="string">`It is the first`</span></span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> result = <span class="string">`<span class="subst">$&#123;iteratedArray.next().value&#125;</span> was found after index <span class="subst">$&#123;index - <span class="number">1</span>&#125;</span>`</span></span><br><span class="line">        index++</span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> returnedSentence = valueAndPrevIndex([<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>])</span><br><span class="line"><span class="built_in">console</span>.log(returnedSentence.sentence());</span><br><span class="line"><span class="built_in">console</span>.log(returnedSentence.sentence());</span><br><span class="line"><span class="built_in">console</span>.log(returnedSentence.sentence());</span><br></pre></td></tr></table></figure><h3 id="挑战8"><a href="#挑战8" class="headerlink" title="挑战8"></a>挑战8</h3><p><strong>问题：</strong></p><p>编写一个函数。它会每三秒钟console.log打印“hello there”或“gibberish”，取决于传入函数的值是否为“english”。</p><p>请勿使用任何形式的循环且请仅调用createConversation一次。</p><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//CHALLENGE 8</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span>* <span class="title">createConversation</span>(<span class="params">string</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> output = <span class="string">''</span></span><br><span class="line">  <span class="keyword">if</span> (string === <span class="string">'english'</span>) &#123;</span><br><span class="line">    output = <span class="string">'hello there'</span></span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    output = <span class="string">'gibberish'</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">yield</span> setInterval(<span class="function"><span class="params">()</span> =&gt;</span> &#123;<span class="built_in">console</span>.log(output)&#125;, <span class="number">3000</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">createConversation(<span class="string">'english'</span>).next();</span><br></pre></td></tr></table></figure><h3 id="挑战9"><a href="#挑战9" class="headerlink" title="挑战9"></a>挑战9</h3><p><strong>问题：</strong></p><p>使用async/await来console.log打印一个由名词noun和动词verb构成的句子，其中非异步函数会接收一个名词noun，与一个硬编码的动词verb拼接，在三秒后返回给异步函数。异步函数接收到数据后，会console.log打印相应数据。异步函数仅能调用一次，传入一个名词noun见证它的执行吧！</p><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//CHALLENGE 9</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">waitForVerb</span>(<span class="params">noun</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="params">resolve</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> verb = <span class="string">'barks'</span></span><br><span class="line">    setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> resolve(<span class="string">`<span class="subst">$&#123;noun&#125;</span> <span class="subst">$&#123;verb&#125;</span>`</span>), <span class="number">3000</span>)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">f</span>(<span class="params">noun</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> sentence = <span class="keyword">await</span> waitForVerb(noun)</span><br><span class="line">  <span class="built_in">console</span>.log(sentence)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">f(<span class="string">"dog"</span>)</span><br></pre></td></tr></table></figure><hr><p><img src="https://image-static.segmentfault.com/334/749/3347494114-6ef1cdb20ecb25b7_fix732" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;＠冒泡的马树&lt;/p&gt;
&lt;p&gt;题库原地址：&lt;a href=&quot;http://csbin.io/iterators&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://csbin.io/iterators&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;Iterators迭代器&quot;&gt;&lt;a href=&quot;#Iterators迭代器&quot; class=&quot;headerlink&quot; title=&quot;Iterators迭代器&quot;&gt;&lt;/a&gt;Iterators迭代器&lt;/h2&gt;
    
    </summary>
    
    
      <category term="JavaScript" scheme="http://lesliewong.cn/categories/JavaScript/"/>
    
      <category term="算法" scheme="http://lesliewong.cn/categories/JavaScript/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="JavaScript" scheme="http://lesliewong.cn/tags/JavaScript/"/>
    
      <category term="算法" scheme="http://lesliewong.cn/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript专项算法题（6）：Promises</title>
    <link href="http://lesliewong.cn/2022/05/06/JavaScript-functional-algorithms-promises/"/>
    <id>http://lesliewong.cn/2022/05/06/JavaScript-functional-algorithms-promises/</id>
    <published>2022-05-06T10:07:30.000Z</published>
    <updated>2024-01-18T05:03:33.353Z</updated>
    
    <content type="html"><![CDATA[<p>＠冒泡的马树</p><p>题库原地址：<a href="http://csbin.io/promises" target="_blank" rel="noopener">http://csbin.io/promises</a></p><h2 id="Promises期约"><a href="#Promises期约" class="headerlink" title="Promises期约"></a>Promises期约</h2><a id="more"></a><h3 id="挑战1"><a href="#挑战1" class="headerlink" title="挑战1"></a>挑战1</h3><p><strong>问题：</strong></p><p>让我们从复习异步函数开始吧！使用setTimeout，在1000ms后打印字符串“Hello!”。</p><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Challenge 1</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sayHello</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="comment">// ADD CODE HERE</span></span><br><span class="line">  setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> <span class="built_in">console</span>.log(<span class="string">'Hello!'</span>), <span class="number">1000</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Uncomment the line below when ready</span></span><br><span class="line">sayHello(); <span class="comment">// should log "Hello" after 1000ms</span></span><br></pre></td></tr></table></figure><h3 id="挑战2"><a href="#挑战2" class="headerlink" title="挑战2"></a>挑战2</h3><p><strong>问题：</strong></p><p>创建一个promise。延迟1000ms后在resolve里面传入值“Resolved!”，使用setTimeout。在promise被调用resolve后，打印它的内容，借助传入console.log到.then中来实现。</p><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Challenge 2</span></span><br><span class="line"><span class="keyword">var</span> promise = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span> (<span class="params">resolve, reject</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// ADD CODE HERE</span></span><br><span class="line">  setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> resolve(<span class="string">'Resolved'</span>), <span class="number">1000</span>)</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Should print out "Resolved!"</span></span><br><span class="line"><span class="comment">// ADD CODE HERE</span></span><br><span class="line">promise.then(<span class="function"><span class="params">res</span> =&gt;</span> <span class="built_in">console</span>.log(res))</span><br></pre></td></tr></table></figure><h3 id="挑战3"><a href="#挑战3" class="headerlink" title="挑战3"></a>挑战3</h3><p><strong>问题：</strong></p><p>创建另外一个promise。这次不使用setTimeout，在reject里面传入值“Rejected!”。在promise被调用reject之后，打印它的内容，借助传入console.log到.catch来实现。</p><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Challenge 3</span></span><br><span class="line"></span><br><span class="line">promise = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span>(<span class="params">resolve, reject</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// ADD CODE HERE</span></span><br><span class="line">  reject(<span class="string">'Rejected'</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Should print out "Reject!"</span></span><br><span class="line"><span class="comment">// ADD CODE HERE</span></span><br><span class="line">promise.catch(<span class="function"><span class="params">res</span> =&gt;</span> <span class="built_in">console</span>.log(res))</span><br></pre></td></tr></table></figure><h3 id="挑战4"><a href="#挑战4" class="headerlink" title="挑战4"></a>挑战4</h3><p><strong>问题：</strong></p><p>Promises期约是异步的。现在让我们来证明它们确实如此！创建一个promise，在resolve里面传入值“Promise has been resolved!”，然后去掉挑战4底部的注释。运行后我们看到的打印顺序是怎样的？“Promise has been resolved!”先还是”I’m not the promise!”先？为什么？</p><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Challenge 4</span></span><br><span class="line"></span><br><span class="line">promise = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span> (<span class="params">resolve, reject</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// ADD CODE HERE</span></span><br><span class="line">  resolve()</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Uncomment the lines below when ready</span></span><br><span class="line">promise.then(<span class="function"><span class="params">()</span> =&gt;</span> <span class="built_in">console</span>.log(<span class="string">'Promise has been resolved!'</span>));</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"I'm not the promise!"</span>);</span><br></pre></td></tr></table></figure><h3 id="挑战5"><a href="#挑战5" class="headerlink" title="挑战5"></a>挑战5</h3><p><strong>问题：</strong></p><p>编写delay函数，用于返回一个promise。此返回promise应该返回一个在1000ms后调用resolve的setTimeout。</p><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Challenge 5</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">delay</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span> (<span class="params">resolve, reject</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> setTimeout(resolve, <span class="number">1000</span>)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Uncomment the code below to test</span></span><br><span class="line"><span class="comment">// This code should log "Hello" after 1000ms</span></span><br><span class="line">delay().then(sayHello);</span><br></pre></td></tr></table></figure><h3 id="挑战6"><a href="#挑战6" class="headerlink" title="挑战6"></a>挑战6</h3><p><strong>问题：</strong></p><p>在这个挑战中我们会使用.then链式调用promises期约。创建两个变量：firstPromise和secondPromise，让secondPromise成为一个在resolve中传值“Second!”的promise，firstPromise则在resolve中传入secondPromise。用.then的方式调用firstPromise，这会返回secondPromise，然后在它的resolve执行之后，打印对应promise的内容，借助传入console.log到.then来实现。</p><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Challenge 6</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// ADD CODE BELOW</span></span><br><span class="line"><span class="keyword">var</span> secondPromise = <span class="built_in">Promise</span>.resolve(<span class="string">'Second!'</span>)</span><br><span class="line"><span class="keyword">var</span> firstPromise = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span> (<span class="params">resolve, reject</span>) </span>&#123;</span><br><span class="line">  resolve(secondPromise)</span><br><span class="line">&#125;)</span><br><span class="line">firstPromise.then().then(<span class="function"><span class="params">res</span> =&gt;</span> <span class="built_in">console</span>.log(res))</span><br></pre></td></tr></table></figure><h3 id="挑战7"><a href="#挑战7" class="headerlink" title="挑战7"></a>挑战7</h3><p><strong>问题：</strong></p><p>我们有一个会从数据库拉取数据的API，它接收一个下标参数然后返回一个promise。你的挑战是使用promise.all发起3次API调用，然后在调用都结束后返回对应的数据。</p><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// Challenge 7</span></span><br><span class="line"><span class="keyword">const</span> fakePeople = [</span><br><span class="line">  &#123; <span class="attr">name</span>: <span class="string">'Rudolph'</span>, <span class="attr">hasPets</span>: <span class="literal">false</span>, <span class="attr">currentTemp</span>: <span class="number">98.6</span> &#125;,</span><br><span class="line">  &#123; <span class="attr">name</span>: <span class="string">'Zebulon'</span>, <span class="attr">hasPets</span>: <span class="literal">true</span>, <span class="attr">currentTemp</span>: <span class="number">22.6</span> &#125;,</span><br><span class="line">  &#123; <span class="attr">name</span>: <span class="string">'Harold'</span>, <span class="attr">hasPets</span>: <span class="literal">true</span>, <span class="attr">currentTemp</span>: <span class="number">98.3</span> &#125;,</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> fakeAPICall = <span class="function">(<span class="params">i</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> returnTime = <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * <span class="number">1000</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (i &gt;= <span class="number">0</span> &amp;&amp; i &lt; fakePeople.length) &#123;</span><br><span class="line">      setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> resolve(fakePeople[i]), returnTime);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      reject(&#123; <span class="attr">message</span>: <span class="string">"index out of range"</span> &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getAllData</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="comment">// CODE GOES HERE</span></span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">Promise</span>.all([fakeAPICall(<span class="number">0</span>), fakeAPICall(<span class="number">1</span>), fakeAPICall(<span class="number">2</span>)])</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">getAllData().then(<span class="function"><span class="params">res</span> =&gt;</span> <span class="built_in">console</span>.log(res))</span><br></pre></td></tr></table></figure><hr><p><img src="https://image-static.segmentfault.com/380/520/380520036-b9807778b481c012_fix732" alt="35kingCrab"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;＠冒泡的马树&lt;/p&gt;
&lt;p&gt;题库原地址：&lt;a href=&quot;http://csbin.io/promises&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://csbin.io/promises&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;Promises期约&quot;&gt;&lt;a href=&quot;#Promises期约&quot; class=&quot;headerlink&quot; title=&quot;Promises期约&quot;&gt;&lt;/a&gt;Promises期约&lt;/h2&gt;
    
    </summary>
    
    
      <category term="JavaScript" scheme="http://lesliewong.cn/categories/JavaScript/"/>
    
      <category term="算法" scheme="http://lesliewong.cn/categories/JavaScript/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="JavaScript" scheme="http://lesliewong.cn/tags/JavaScript/"/>
    
      <category term="算法" scheme="http://lesliewong.cn/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>谷歌高速公路招聘广告：{ 无理数e中前十位连续的素数 }.com</title>
    <link href="http://lesliewong.cn/2022/01/15/google-highway-advertisement-first-10-digit-prime-found-in-consecutive-digits-of-e/"/>
    <id>http://lesliewong.cn/2022/01/15/google-highway-advertisement-first-10-digit-prime-found-in-consecutive-digits-of-e/</id>
    <published>2022-01-15T15:45:30.000Z</published>
    <updated>2024-01-18T05:01:59.269Z</updated>
    
    <content type="html"><![CDATA[<p>偶然间，看到吴军老师的《浪潮之巅（第四版）》里有讲到这么一个故事。</p><blockquote><p>Google曾经在加州的101高速公路上用大广告牌登了这样的广告：</p><p><strong>{ 无理数e中前十位连续的素数 }.com</strong></p><p>你如果知道这个答案（7427466391.com），就可以通过上述网址进入到Google的招聘网站。而能够计算出这道题，要很聪明。</p></blockquote><p>“很聪明”？吴军老师的这句话倒是让人来兴趣了，自己也凑性借助计算机的力量琢磨琢磨下这个证明题。</p><a id="more"></a> <p><img src="https://image-static.segmentfault.com/201/978/2019783571-ba14000c750f6f46_fix732" alt="What Google&#39;s Genius Billboard From 2004 Can Teach Us About Solving Problems"></p><hr><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>大家都知道，ｅ是无理数，换言之，无限不循环小数。世间总有些数学爱好人士乐此不疲地用计算机来推算这些无理数的小数位，π如此，ｅ更不例外。所以，</p><h5 id="第一步，在一些权威的数学网站上找到e的小数位数据；"><a href="#第一步，在一些权威的数学网站上找到e的小数位数据；" class="headerlink" title="第一步，在一些权威的数学网站上找到ｅ的小数位数据；"></a><strong><em>第一步，在一些权威的数学网站上找到ｅ的小数位数据；</em></strong></h5><p>这时候，就是谷歌大法好了，来到了ｅ的<a href="https://en.wikipedia.org/wiki/E_(mathematical_constant" target="_blank" rel="noopener">维基英文百科</a>页面，留意到了下面ｅ的小数表达形式后面的“A001113”超链接，有蹊跷，便点进去看下。</p><p><img src="https://image-static.segmentfault.com/282/534/282534849-4585de2db7e5bba4_fix732" alt="image-20220111002852190"></p><p>接着便是这个OEIS站点的<a href="https://oeis.org/A001113" target="_blank" rel="noopener">A001113页面</a>了，原来是数论方面的一个很权威的数据库网站。</p><p><img src="https://image-static.segmentfault.com/153/736/1537361166-ffd45c63194322da_fix732" alt="image-20220111003231427"></p><p>带着探宝的眼光在这个网页上下左右扫视，总算发现了目标。LINKS（链接）的第一个条目便是了。</p><p>N. J. A. Sloane, Table of 50000 digits of e labeled from 1 to 50000 [based on the ICON Project link below]</p><p>作者也是创办了这个OEIS组织的N.J.A Sloane，看来是个此领域的大人物了，抱歉有眼不识泰山。</p><p><img src="https://image-static.segmentfault.com/197/894/1978947173-a29e2c3fa3e8800e_fix732" alt="image-20220111004139733"></p><p>点进去这个<a href="https://oeis.org/A001113/b001113.txt" target="_blank" rel="noopener">Table of 50000 digits of e labeled from 1 to 50000</a>，页面结果让人很愉悦。直接的纯文本数据，左列为小数位数，右列为对应数值。到时候拿到数据时简单处理下即可展开后续工作，希望这道证明题的答案就在这50000个数中，不然得扩大范围了。</p><p><img src="https://image-static.segmentfault.com/396/101/3961014588-a185fc56f73cef75_fix732" alt="image-20220111004824130"></p><p>到此，e无理数的小数位数据有了，便可以展开下一步工作了。</p><h5 id="第二步，如何判断一个数是素数？"><a href="#第二步，如何判断一个数是素数？" class="headerlink" title="第二步，如何判断一个数是素数？"></a><strong><em>第二步，如何判断一个数是素数？</em></strong></h5><p>上小学的时候开始，数学老师就教导我们，素数的定义是指一个除了1和该数自身外，无法被其他自然数整除的大于1的自然数。所以自然，判断思路便是对一个大于1的自然数n，依次判断2 → n能否整除n，如果发现一个数能整除n，那么n不是素数，否则是。另外，考虑到对称性，我们也不必一直递增到n，如对于2*3和3*2，6/2和6/3皆判定6为合数，但是递增到2时就已经是充分了， 故不必再考虑3。</p><p>Python代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">isPrime</span><span class="params">(n: int)</span> -&gt; bool:</span></span><br><span class="line">  <span class="keyword">if</span> n &lt;= <span class="number">1</span>:</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line">  i = <span class="number">2</span></span><br><span class="line">  <span class="comment"># Make use of symmetry. For example, 2*3=6, 3*2=6</span></span><br><span class="line">  <span class="keyword">while</span> i * i &lt; n:</span><br><span class="line">    <span class="keyword">if</span> n % i == <span class="number">0</span>:</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line">    i += <span class="number">1</span></span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">True</span></span><br></pre></td></tr></table></figure><p>在网上查阅素数相关的资料的时候，发现数论里有个素数分布规律也可以拿来判断素数。来源——<a href="https://blog.csdn.net/Frost_Bite/article/details/88878063" target="_blank" rel="noopener">素数判定算法</a></p><blockquote><p><strong>素数分布规律:</strong></p><p>当 n &gt;= 5 时，如果n为素数，那么 n % 6 = 1 || n % 6 = 5, 即 n 一定出现在 6x（x ≥ 1）两侧。换句话说，任意一个素数都可以被表示为 6x ± 1， x ∈ N 的形式。</p><p><strong>证明：</strong></p><p>把6x附近的数用以下方式表示：</p><p>……(6x - 1), 6x, 6x + 1, 2(3x + 1), 3(2x + 1), 2(3x + 2), 6x + 5, 6(x+1)……</p><p>不在6x两侧的数为：2(3x + 1), 3(2x + 1), 2(3x + 2), 它们不是素数，所以素数出现在6x的两侧。</p></blockquote><p>用Python代码实现如下，时间复杂度上比前一种相差无几，不过对于我们的证明来说，是够用了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">isPrime</span><span class="params">(n: int)</span> -&gt; bool:</span></span><br><span class="line">  <span class="keyword">if</span> n &lt;= <span class="number">1</span>:</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line">  <span class="keyword">if</span> n &lt;= <span class="number">3</span>:</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">True</span></span><br><span class="line">  <span class="comment"># For case of 2(3x + 1), 3(2x + 1), 2(3x + 2)</span></span><br><span class="line">  <span class="keyword">if</span> n % <span class="number">2</span> == <span class="number">0</span> <span class="keyword">or</span> n % <span class="number">3</span> == <span class="number">0</span>:</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line">  <span class="comment"># For case of the multiplication of prime numbers</span></span><br><span class="line">  i = <span class="number">5</span></span><br><span class="line">  <span class="keyword">while</span> i * i &lt; n:</span><br><span class="line">    <span class="keyword">if</span> n % i == <span class="number">0</span> <span class="keyword">or</span> n % (i + <span class="number">2</span>) == <span class="number">0</span>:</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line">    i += <span class="number">6</span></span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">True</span></span><br></pre></td></tr></table></figure><p>此外，了解到密码学里面判定素数有很大的用处，比如著名的RSA算法。在判断素数算法方面，并没有采用上面的时间复杂度较高的简单取余算法，而是Fermat小定理、Miller-Rabin算法及Solovay-Strassen算法等，理解起来较为吃力，具体可参考下这篇文章——<a href="https://blog.csdn.net/O_1CxH/article/details/81627751" target="_blank" rel="noopener">PyCrypto密码学库源码解析（一）随机数和大素数生成</a>, 以及上面那篇。</p><p>至此，必要的材料都准备好了，可以进行最后一步了。</p><h5 id="第三步，for循环e的小数位数据判断第一个10位长的素数。"><a href="#第三步，for循环e的小数位数据判断第一个10位长的素数。" class="headerlink" title="第三步，for循环e的小数位数据判断第一个10位长的素数。"></a><em>第三步，for循环e的小数位数据判断第一个10位长的素数。</em></h5><p>开门见山，直接源码抛出来先。</p><p>具体思路：先使用requests库获取e小数位数据，然后转存为文件便于逐行读取，for循环逐行读取每一小数位数据，进行切片操作，整理成证明所需的10位整数，得到总数量为49991的有序列表，再借助素数判定函数逐个判定这些10位整数，最后得到答案——7427466391。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">response = requests.get(<span class="string">'https://oeis.org/A001113/b001113.txt'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Save sequence to a file for later use</span></span><br><span class="line">out_file = open(<span class="string">'digits_of_e.txt'</span>, <span class="string">'w'</span>)</span><br><span class="line">print(response.text, file=out_file)</span><br><span class="line"></span><br><span class="line">queue = []</span><br><span class="line"></span><br><span class="line">container = <span class="string">''</span></span><br><span class="line">counter = <span class="number">0</span>  </span><br><span class="line">in_file = open(<span class="string">'digits_of_e.txt'</span>, <span class="string">'r'</span>)</span><br><span class="line">list_in_file = list(in_file)</span><br><span class="line"><span class="keyword">for</span> index, line <span class="keyword">in</span> enumerate(list_in_file):</span><br><span class="line">  segments = list_in_file[index:index+<span class="number">10</span>]</span><br><span class="line">  <span class="comment"># get lines at a batch of 10 lines</span></span><br><span class="line">  <span class="keyword">for</span> segment <span class="keyword">in</span> segments:</span><br><span class="line">    matchObj = re.match(<span class="string">r'([\d]*) (\d).*'</span>, segment, re.I)</span><br><span class="line">    counter += <span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> counter &lt;= <span class="number">10</span>:</span><br><span class="line">      container += matchObj.group(<span class="number">2</span>) <span class="keyword">if</span> matchObj != <span class="keyword">None</span> <span class="keyword">else</span> <span class="string">''</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">      counter = <span class="number">1</span></span><br><span class="line">      <span class="keyword">if</span> len(container) == <span class="number">10</span>:</span><br><span class="line">        queue.append(container)</span><br><span class="line">      container = matchObj.group(<span class="number">2</span>) <span class="keyword">if</span> matchObj != <span class="keyword">None</span> <span class="keyword">else</span> <span class="string">''</span></span><br><span class="line">in_file.close()</span><br><span class="line"></span><br><span class="line">print(len(queue)) <span class="comment"># 49991 indeed</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">isPrime</span><span class="params">(n: int)</span> -&gt; bool:</span></span><br><span class="line">  <span class="comment"># Prime number definition version:</span></span><br><span class="line">  <span class="string">'''</span></span><br><span class="line"><span class="string">  if n &lt;= 1:</span></span><br><span class="line"><span class="string">    return False</span></span><br><span class="line"><span class="string">  i = 2</span></span><br><span class="line"><span class="string">  # Make use of symmetry. For example, 2*3=6, 3*2=6</span></span><br><span class="line"><span class="string">  while i * i &lt; n:</span></span><br><span class="line"><span class="string">    if n % i == 0:</span></span><br><span class="line"><span class="string">      return False</span></span><br><span class="line"><span class="string">    i += 1</span></span><br><span class="line"><span class="string">  return True</span></span><br><span class="line"><span class="string">  '''</span></span><br><span class="line">  <span class="comment"># Distribution pattern of prime number version:</span></span><br><span class="line">  <span class="keyword">if</span> n &lt;= <span class="number">1</span>:</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line">  <span class="keyword">if</span> n &lt;= <span class="number">3</span>:</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">True</span></span><br><span class="line">  <span class="comment"># For case of 2(3x + 1), 3(2x + 1), 2(3x + 2)</span></span><br><span class="line">  <span class="keyword">if</span> n % <span class="number">2</span> == <span class="number">0</span> <span class="keyword">or</span> n % <span class="number">3</span> == <span class="number">0</span>:</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line">  <span class="comment"># For case of the multiplication of prime numbers</span></span><br><span class="line">  i = <span class="number">5</span></span><br><span class="line">  <span class="keyword">while</span> i * i &lt; n:</span><br><span class="line">    <span class="keyword">if</span> n % i == <span class="number">0</span> <span class="keyword">or</span> n % (i + <span class="number">2</span>) == <span class="number">0</span>:</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line">    i += <span class="number">6</span></span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">True</span></span><br><span class="line"></span><br><span class="line">result = <span class="keyword">None</span></span><br><span class="line"><span class="keyword">for</span> num <span class="keyword">in</span> queue:</span><br><span class="line">  <span class="keyword">if</span> isPrime(int(num)):</span><br><span class="line">    print(num)</span><br><span class="line">    result = num</span><br><span class="line">    <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">print(result == <span class="string">'7427466391'</span>)</span><br><span class="line">print(isPrime(<span class="number">7427466391</span>))</span><br></pre></td></tr></table></figure><p>运行结果：</p><p>宾果！</p><p><img src="https://image-static.segmentfault.com/361/985/3619857022-1bf6f31eb73f694c_fix732" alt="image-20220115031650305"></p><h3 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h3><p>证明题解答完毕，咱得走个仪式感，访问访问这个网站——7427466391.com。</p><p>结果是502错误……</p><p><img src="https://image-static.segmentfault.com/873/695/873695543-991118b6aeb73177_fix732" alt="image-20220115162556092"></p><p>行吧，看来这个站点早被人家抛弃了，毕竟这个高速公路广告也是谷歌在2004年搞的恶作剧。</p><hr><p>最后，把源码整理了个Kaggle Notebook版本。欢迎查阅！</p><p><a href="https://www.kaggle.com/leslie2wong/first10digitprimefoundinconsecutivedigitsofe" target="_blank" rel="noopener">First10DigitPrimeFoundInConsecutiveDigitsOfE | Kaggle</a></p><h3 id="参考资料汇总"><a href="#参考资料汇总" class="headerlink" title="参考资料汇总"></a>参考资料汇总</h3><ol><li>吴军老师的《浪潮之巅（第四版）》P44</li><li>无理数ｅ的<a href="https://en.wikipedia.org/wiki/E_(mathematical_constant" target="_blank" rel="noopener">维基英文百科</a></li><li>OEIS站点的<a href="https://oeis.org/A001113" target="_blank" rel="noopener">A001113页面</a></li><li><a href="https://oeis.org/A001113/b001113.txt" target="_blank" rel="noopener">Table of 50000 digits of e labeled from 1 to 50000</a></li><li><a href="https://blog.csdn.net/Frost_Bite/article/details/88878063" target="_blank" rel="noopener">素数判定算法</a></li><li><a href="https://blog.csdn.net/O_1CxH/article/details/81627751" target="_blank" rel="noopener">PyCrypto密码学库源码解析（一）随机数和大素数生成</a></li><li><a href="https://www.businessinsider.com.au/what-google-can-teach-us-about-solving-problems-2011-7" target="_blank" rel="noopener">What Google’s Genius Billboard From 2004 Can Teach Us About Solving Problems</a></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;偶然间，看到吴军老师的《浪潮之巅（第四版）》里有讲到这么一个故事。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Google曾经在加州的101高速公路上用大广告牌登了这样的广告：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;{ 无理数e中前十位连续的素数 }.com&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;你如果知道这个答案（7427466391.com），就可以通过上述网址进入到Google的招聘网站。而能够计算出这道题，要很聪明。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;“很聪明”？吴军老师的这句话倒是让人来兴趣了，自己也凑性借助计算机的力量琢磨琢磨下这个证明题。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Python" scheme="http://lesliewong.cn/categories/Python/"/>
    
      <category term="科学计算" scheme="http://lesliewong.cn/categories/Python/%E7%A7%91%E5%AD%A6%E8%AE%A1%E7%AE%97/"/>
    
      <category term="Scientific Computing" scheme="http://lesliewong.cn/categories/Python/%E7%A7%91%E5%AD%A6%E8%AE%A1%E7%AE%97/Scientific-Computing/"/>
    
    
      <category term="Python" scheme="http://lesliewong.cn/tags/Python/"/>
    
      <category term="科学计算" scheme="http://lesliewong.cn/tags/%E7%A7%91%E5%AD%A6%E8%AE%A1%E7%AE%97/"/>
    
      <category term="Scientific Computing" scheme="http://lesliewong.cn/tags/Scientific-Computing/"/>
    
  </entry>
  
  <entry>
    <title>科学计算编程涉及到的技术栈简介</title>
    <link href="http://lesliewong.cn/2020/11/15/common-tech-stack-for-scientific-computing-programming/"/>
    <id>http://lesliewong.cn/2020/11/15/common-tech-stack-for-scientific-computing-programming/</id>
    <published>2020-11-15T12:45:30.000Z</published>
    <updated>2025-05-09T00:20:42.214Z</updated>
    
    <content type="html"><![CDATA[<h3 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h3><p>先前自己在弄毕业设计时负责的是一个与Python数据分析相关的课题，最终取得了个不错的成绩，觉得其中的技术方案选型部分很有分享出来的价值，对在科学计算（现在流行的说法是数据科学）方面还是一知半解的人起到一个入门科普的作用，故撰写此文。</p><a id="more"></a> <hr><h3 id="2-1-1-科学计算编程语言的比较"><a href="#2-1-1-科学计算编程语言的比较" class="headerlink" title="2.1.1 科学计算编程语言的比较"></a>2.1.1 科学计算编程语言的比较</h3><h5 id="MATLAB语言介绍："><a href="#MATLAB语言介绍：" class="headerlink" title="MATLAB语言介绍："></a>MATLAB语言介绍：</h5><p>Matlab是MathWorks公司开发的科学计算软件，软件模式为本体加扩展工具箱。它具有强大的矩阵计算和数据可视化能力，一方面可以实现数值分析、优化、统计偏微分方程数值求解、自动控制、信号处理等多个领域的数学计算，另一方面可以实现二维、三维绘图、三维场景生成和渲染、科学计算可视化、图像处理、虚拟现实与地图制作等功能[13]。不过，值得注意的是MATLAB是商业性软件，软件售价不菲，而且就软件社区生态来看，目前在数据科学领域越来越不受待见。以“MATLAB Machine Learning”和“python machine learning”作为关键词在谷歌分析中比较[14]，如图2.1所示，会发现MATLAB的数据科学社区活跃度远不及Python数据科学社区。从拥抱活跃的数据科学社区从而方便自己遇到问题时可以寻求解决方案的角度考虑，使用Python显然更有利于课题的后续研究发展。</p><p><img src="https://image-static.segmentfault.com/197/222/197222751-128f4b0a25717554_fix732" alt="img"></p><p><em>图2.1“MATLAB Machine Learning”和“python machine learning”谷歌分析结果比较</em></p><h5 id="R语言介绍："><a href="#R语言介绍：" class="headerlink" title="R语言介绍："></a>R语言介绍：</h5><p>与MATLAB相似，R语言用于数据处理和统计分析，为大多数统计学家所钟爱。R语言脱胎于AT&amp;T实验室开发的统计语言S语言，且与s语言基本兼容[15]。R语言是开源免费的，由一个庞大活跃的全球性研究型社区维护，深受众多统计学家的欢迎。</p><h5 id="Julia语言介绍："><a href="#Julia语言介绍：" class="headerlink" title="Julia语言介绍："></a>Julia语言介绍：</h5><p>Julia是专门为高性能数值计算而设计的高级动态程序设计语言，它在分布式并行化、精确数值计算等方面提供了独特的支持，并包含了大量可扩展的数学函数库。特别是在线性代数、随机数生成、信号处理和字符串处理等领域，Julia集成了许多成熟的、优秀的基于C和FORTRAN的开源库，具有很高的性能和效率[16]。不过，Julia面世于2012年，目前还处于蓬勃发展之中，尽管前景可观，但目前在科学计算领域的普及度还远不如Python。</p><h5 id="Python语言介绍："><a href="#Python语言介绍：" class="headerlink" title="Python语言介绍："></a>Python语言介绍：</h5><p>Python语言诞生于1989年，创始人为Guido Van Rossum。其为一种弱类型的高级动态语言。目前最新版本为3.9。Python开源免费，有着十分活跃的科学计算社区生态，社区活跃度远超R语言社区。由Tiobe公司发布的编程语言排行榜显示，Python排行位置已跃居第三位，而R语言处于第九位，如图2.2。不同于MATLAB、R和Julia等专注于科学计算领域，Python在Web应用开发领域也备受追捧。基于Python编写的Django、Flask等web框架在软件开发领域得到了大规模的应用。从易于将本课题的研究成果最终转化为特定的数据分析解决方案的角度出发，选择Python作为本课题的编程语言显然较其他几种语言更有优势。一致的语言特性，可以显著减少未来成果转化时的学习成本，所以本课题选用Python3.8.2作为统计模型构建分析的编程语言。</p><p><img src="https://image-static.segmentfault.com/410/246/4102461780-6fe1de0d8df42176_fix732" alt="img"></p><p><em>图2.2 Tiobe编程语言排行榜历史数据</em></p><h3 id="2-1-2-开发平台的比较"><a href="#2-1-2-开发平台的比较" class="headerlink" title="2.1.2 开发平台的比较"></a>2.1.2 开发平台的比较</h3><h5 id="PyCharm-17-介绍："><a href="#PyCharm-17-介绍：" class="headerlink" title="PyCharm[17]介绍："></a>PyCharm[17]介绍：</h5><p>Pycharm是由JetBrains打造的Python集成开发环境，具有调试、语法高亮、项目管理、代码跳转、智能提示、自动补全、单元测试、版本控制等强大功能。PyCharm分为社区开源版和专业版，其中专业版提供了支持Django、Flask等框架的Web开发、数据库连接等功能。</p><h5 id="Visual-Studio-Code-18-介绍："><a href="#Visual-Studio-Code-18-介绍：" class="headerlink" title="Visual Studio Code[18]介绍："></a>Visual Studio Code[18]介绍：</h5><p>Visual Studio Code是由微软公司推出的一款轻量级编辑器，其软件架构为平台加插件模式。加载Python插件后，Visual Studio Code可以视为一款十分出色的小型Python IDE，但功能完备性方面相较PyCharm还有不少距离。不过，鉴于其完全开源免费的特性，拥簇者甚众，社区参与度十分活跃。</p><h5 id="Spyder-19-介绍："><a href="#Spyder-19-介绍：" class="headerlink" title="Spyder[19]介绍："></a>Spyder[19]介绍：</h5><p>一款面向Python语言的开源科学计算IDE（Integrated Development Environment），其设计思想类似于MATLAB，模仿了MATLAB的“工作空间”功能，方便观察和修改数组值。 其集成了Numpy、SciPy、Matplotlib等科学计算软件包，内置交互式环境以处理数据，对于数据科学家来说十分友好，且被Python的科学计算发行版Anaconda所收录。项目目标是促进Python在科学和工程领域的软件开发的使用。</p><h5 id="Jupyter-Notebook介绍："><a href="#Jupyter-Notebook介绍：" class="headerlink" title="Jupyter Notebook介绍："></a>Jupyter Notebook介绍：</h5><p>一个基于Web的交互式计算环境，用于创建Jupyter Notebook文档。不同于Spyder的整个Python文件运行后生成交互页面式的交互风格，Jupyter Notebook的交互是基于Python代码块进行的，这意味着用户可以依照自己的意愿有选择性地运行某些代码块并得出结果，相较于Spyder具有更强大的灵活性。和Spyder一样，Jupyter Notebook也被Python的科学计算发行版Anaconda所收录。</p><h3 id="2-1-3-数据库技术的比较"><a href="#2-1-3-数据库技术的比较" class="headerlink" title="2.1.3 数据库技术的比较"></a>2.1.3 数据库技术的比较</h3><h5 id="MySQL-20-数据库介绍："><a href="#MySQL-20-数据库介绍：" class="headerlink" title="MySQL[20]数据库介绍："></a>MySQL[20]数据库介绍：</h5><p>一款高性能、低成本、可靠性好且十分流行的开源数据库，有着二十多年的历史，是目前最好的关系型数据库管理系统之一，广泛应用在互联网上的中小型网站上。随着MySQL的不断成熟，它也逐渐被用于更多大规模的网站和应用。MySQL目前归于Oracle旗下，其数据库查询语言为SQL。</p><h5 id="MongoDB-21-数据库介绍："><a href="#MongoDB-21-数据库介绍：" class="headerlink" title="MongoDB[21]数据库介绍："></a>MongoDB[21]数据库介绍：</h5><p>一种面向文档的数据库管理系统，被定义为非关系型数据库，致力于为Web应用提供可扩展的高性能数据存储解决方案。与MYSQL中的表不同，它支持的查询文档的数据结构非常松散，为类似于JSON的BSON格式，因此可以存储更为复杂的数据类型。MongoDB的特点是强大的查询语言。它的语法遵循面向对象的思想，可以实现类似关系数据库中单表查询的大部分功能，也可以对数据进行索引。</p><h3 id="尾声"><a href="#尾声" class="headerlink" title="尾声"></a>尾声</h3><p>以上内容涉及到的技术栈仅仅针对数据集大小为中小规模时的情况，对于大规模或者超大规模的数据集，则需要额外借助一些大数据方面的技术栈，如Apache Hadoop、Apache Hive和Apache Spark等，还请具体情况具体分析。</p><h3 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h3><p>[5] MATLAB[EB/OL]. <a href="https://www.mathworks.com/products/matlab.html" target="_blank" rel="noopener">https://www.mathworks.com/products/matlab.html</a>, 2020.05.11.</p><p>[6] R[EB/OL]. <a href="https://www.r-project.org/about.html" target="_blank" rel="noopener">https://www.r-project.org/about.html</a>, 2020.05.11.</p><p>[7] Julia[EB/OL]. <a href="https://julialang.org/" target="_blank" rel="noopener">https://julialang.org/</a>, 2020.05.11.</p><p>[10] Anaconda[EB/OL]. <a href="https://www.anaconda.com/" target="_blank" rel="noopener">https://www.anaconda.com/</a>, 2020.05.11.</p><p>[11] Jupyter Notebook[EB/OL]. <a href="https://jupyter.org/" target="_blank" rel="noopener">https://jupyter.org/</a>, 2020.05.11.</p><p>[12] Christian Hill. Learning Scientific Programming with Python[M]. Cambridge University Press, 2015:160-317. </p><p>[13] (美)Holly Moore. MATLAB实用教程（第二版）[M]. 高会生, 对童娜, 李聪聪等译. 北京: 电子工业出版社, 2010:1-2.</p><p>[14] 王树义. 学Python，能提升你的竞争力吗？[EB/OL]. <a href="https://www.jianshu.com/p/4445fe0a7e16" target="_blank" rel="noopener">https://www.jianshu.com/p/4445fe0a7e16</a>, 2020.05.11.</p><p>[15] (美)麦特洛夫(Matloff, N.). R语言编程艺术[M]. 陈堰平, 邱怡轩, 潘岚锋等译, 北京: 机械工业出版社, 2013.6:1-2.</p><p>[16] 魏坤编著. Julia语言程序设计[M]. 北京: 机械工业出版社, 2018.10:1-2.</p><p>[17] PyCharm[EB/OL]. <a href="https://www.jetbrains.com/pycharm/" target="_blank" rel="noopener">https://www.jetbrains.com/pycharm/</a>, 2020.05.11.</p><p>[18] Visual Studio Code[EB/OL]. <a href="https://code.visualstudio.com/" target="_blank" rel="noopener">https://code.visualstudio.com/</a>, 2020.05.11.</p><p>[19] Spyder[EB/OL]. <a href="https://www.spyder-ide.org/" target="_blank" rel="noopener">https://www.spyder-ide.org/</a>, 2020.05.11.</p><p>[20] MySQL[EB/OL]. <a href="https://www.mysql.com" target="_blank" rel="noopener">https://www.mysql.com</a>, 2020.05.11.</p><p>[21] MongoDB[EB/OL]. <a href="https://www.mongodb.com/" target="_blank" rel="noopener">https://www.mongodb.com/</a>, 2020.05.11.</p><p>（学识浅薄，仅仅介绍， 抛砖引玉，如有讹误，欢迎指出~）</p><p><img src="https://image-static.segmentfault.com/313/445/313445908-1b2e02c13aad86b6_fix732" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h3&gt;&lt;p&gt;先前自己在弄毕业设计时负责的是一个与Python数据分析相关的课题，最终取得了个不错的成绩，觉得其中的技术方案选型部分很有分享出来的价值，对在科学计算（现在流行的说法是数据科学）方面还是一知半解的人起到一个入门科普的作用，故撰写此文。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Python" scheme="http://lesliewong.cn/categories/Python/"/>
    
      <category term="科学计算" scheme="http://lesliewong.cn/categories/Python/%E7%A7%91%E5%AD%A6%E8%AE%A1%E7%AE%97/"/>
    
      <category term="Scientific Computing" scheme="http://lesliewong.cn/categories/Python/%E7%A7%91%E5%AD%A6%E8%AE%A1%E7%AE%97/Scientific-Computing/"/>
    
    
      <category term="Python" scheme="http://lesliewong.cn/tags/Python/"/>
    
      <category term="科学计算" scheme="http://lesliewong.cn/tags/%E7%A7%91%E5%AD%A6%E8%AE%A1%E7%AE%97/"/>
    
      <category term="Scientific Computing" scheme="http://lesliewong.cn/tags/Scientific-Computing/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript专项算法题（5）：面向对象</title>
    <link href="http://lesliewong.cn/2020/09/26/JavaScript-functional-algorithms-OOP/"/>
    <id>http://lesliewong.cn/2020/09/26/JavaScript-functional-algorithms-OOP/</id>
    <published>2020-09-26T12:45:30.000Z</published>
    <updated>2024-01-18T04:53:20.872Z</updated>
    
    <content type="html"><![CDATA[<p>＠冒泡的马树</p><p>题库原地址：<a href="http://csbin.io/oop" target="_blank" rel="noopener">http://csbin.io/oop</a></p><h2 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象"></a>面向对象</h2><a id="more"></a> <h3 id="使用实义化的对象"><a href="#使用实义化的对象" class="headerlink" title="使用实义化的对象"></a>使用实义化的对象</h3><h4 id="挑战1-1-makePerson"><a href="#挑战1-1-makePerson" class="headerlink" title="挑战1/1 makePerson"></a>挑战1/1 makePerson</h4><p><strong>问题:</strong></p><p>构建一个称为<em>makePerson</em>的接受两个参数（name和age）的函数，返回一个对象。此函数会：</p><ol><li>创建一个空对象；</li><li>给空对象一个键名为<em>name</em>的属性，键值为输入函数的name参数的值；</li><li>给空对象一个键名为age的属性，键值为输入函数的age参数的值；</li><li>返回对象。</li></ol><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/****************************************************************</span></span><br><span class="line"><span class="comment">                  WORKING WITH OBJECT LITERALS</span></span><br><span class="line"><span class="comment">****************************************************************/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*** CHALLENGE 1 of 1 ***/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">makePerson</span>(<span class="params">name, age</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// add code here</span></span><br><span class="line">  <span class="keyword">const</span> innerObj = &#123;&#125;;</span><br><span class="line">  innerObj[<span class="string">"name"</span>] = name;</span><br><span class="line">  innerObj[<span class="string">"age"</span>] = age;</span><br><span class="line">  <span class="keyword">return</span> innerObj;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> vicky = makePerson(<span class="string">"Vicky"</span>, <span class="number">24</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/********* Uncomment these lines to test your work! *********/</span></span><br><span class="line"><span class="built_in">console</span>.log(vicky.name); <span class="comment">// -&gt; Logs 'Vicky'</span></span><br><span class="line"><span class="built_in">console</span>.log(vicky.age); <span class="comment">// -&gt; Logs 24</span></span><br></pre></td></tr></table></figure><h3 id="使用Object-create"><a href="#使用Object-create" class="headerlink" title="使用Object.create"></a>使用Object.create</h3><h4 id="挑战1-3-personStore"><a href="#挑战1-3-personStore" class="headerlink" title="挑战1/3 personStore"></a>挑战1/3 personStore</h4><p><strong>问题：</strong></p><p>在personStore对象内，创建greet属性，其值为一个打印“hello”的函数。</p><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/****************************************************************</span></span><br><span class="line"><span class="comment">                       USING OBJECT.CREATE</span></span><br><span class="line"><span class="comment">****************************************************************/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*** CHALLENGE 1 of 3 ***/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> personStore = &#123;</span><br><span class="line">  <span class="comment">// add code here</span></span><br><span class="line">  greet: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"hello"</span>);</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/********* Uncomment this line to test your work! *********/</span></span><br><span class="line">personStore.greet(); <span class="comment">// -&gt; Logs 'hello'</span></span><br></pre></td></tr></table></figure><h4 id="挑战2-3-personFromPersonStore"><a href="#挑战2-3-personFromPersonStore" class="headerlink" title="挑战2/3 personFromPersonStore"></a>挑战2/3 personFromPersonStore</h4><p><strong>问题：</strong></p><p>构建personFromPersonStore函数，接受的参数为name和age。当被调用时，此函数会被通过Object.create方法在personStore对象上创建person对象。</p><p><strong>题解：</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*** CHALLENGE 2 of 3 ***/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">personFromPersonStore</span>(<span class="params">name, age</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// add code here</span></span><br><span class="line">  <span class="keyword">const</span> innerObj = <span class="built_in">Object</span>.create(personStore);</span><br><span class="line">  innerObj[<span class="string">"name"</span>] = name;</span><br><span class="line">  innerObj[<span class="string">"age"</span>] = age;</span><br><span class="line">  <span class="keyword">return</span> innerObj;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> sandra = personFromPersonStore(<span class="string">"Sandra"</span>, <span class="number">26</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// /********* Uncomment these lines to test your work! *********/</span></span><br><span class="line"><span class="built_in">console</span>.log(sandra.name); <span class="comment">// -&gt; Logs 'Sandra'</span></span><br><span class="line"><span class="built_in">console</span>.log(sandra.age); <span class="comment">//-&gt; Logs 26</span></span><br><span class="line">sandra.greet(); <span class="comment">//-&gt; Logs 'hello'</span></span><br></pre></td></tr></table></figure><h4 id="挑战3-3-introduce"><a href="#挑战3-3-introduce" class="headerlink" title="挑战3/3 introduce"></a>挑战3/3 introduce</h4><p><strong>问题：</strong></p><p>在不改变上述已写代码的情况下，给personStore对象添加一个用于打印“Hi，my name is [name]”的introduce方法。</p><p><strong>题解：</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*** CHALLENGE 3 of 3 ***/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// add code here</span></span><br><span class="line">personStore[<span class="string">"introduce"</span>] = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">`Hi, my name is <span class="subst">$&#123;<span class="keyword">this</span>.name&#125;</span>`</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">sandra.introduce(); <span class="comment">// -&gt; Logs 'Hi, my name is Sandra'</span></span><br></pre></td></tr></table></figure><h3 id="使用”new“关键词"><a href="#使用”new“关键词" class="headerlink" title="使用”new“关键词"></a>使用”new“关键词</h3><h4 id="挑战1-3-PersonConstructor"><a href="#挑战1-3-PersonConstructor" class="headerlink" title="挑战1/3 PersonConstructor"></a>挑战1/3 PersonConstructor</h4><p><strong>问题：</strong></p><p>构建PersonConstructor函数。其利用“this”关键词来保存属性到greet作用域上。greet应该是一个打印“hello”字符串的函数。</p><p><strong>题解：</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/****************************************************************</span></span><br><span class="line"><span class="comment">                    USING THE 'NEW' KEYWORD</span></span><br><span class="line"><span class="comment">****************************************************************/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*** CHALLENGE 1 of 3 ***/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">PersonConstructor</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="comment">// add code here</span></span><br><span class="line">  <span class="keyword">this</span>.greet = <span class="function"><span class="params">()</span> =&gt;</span> <span class="built_in">console</span>.log(<span class="string">"hello"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// /********* Uncomment this line to test your work! *********/</span></span><br><span class="line"><span class="keyword">const</span> simon = <span class="keyword">new</span> PersonConstructor();</span><br><span class="line">simon.greet(); <span class="comment">// -&gt; Logs 'hello'</span></span><br></pre></td></tr></table></figure><h4 id="挑战2-3-personFromConstructor"><a href="#挑战2-3-personFromConstructor" class="headerlink" title="挑战2/3 personFromConstructor"></a>挑战2/3 personFromConstructor</h4><p><strong>问题：</strong></p><p>构建personFromConstructor函数，接受参数为name和age。当被调用时，此函数会使用“new”关键词来创建person对象而不是Object.create方法。</p><p><strong>题解：</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*** CHALLENGE 2 of 3 ***/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">personFromConstructor</span>(<span class="params">name, age</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// add code here</span></span><br><span class="line">  <span class="keyword">const</span> innerPerson = <span class="keyword">new</span> PersonConstructor();</span><br><span class="line">  innerPerson.name = name;</span><br><span class="line">  innerPerson.age = age;</span><br><span class="line">  <span class="keyword">return</span> innerPerson;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> mike = personFromConstructor(<span class="string">"Mike"</span>, <span class="number">30</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/********* Uncomment these lines to test your work! *********/</span></span><br><span class="line"><span class="built_in">console</span>.log(mike.name); <span class="comment">// -&gt; Logs 'Mike'</span></span><br><span class="line"><span class="built_in">console</span>.log(mike.age); <span class="comment">//-&gt; Logs 30</span></span><br><span class="line">mike.greet(); <span class="comment">//-&gt; Logs 'hello'</span></span><br></pre></td></tr></table></figure><h4 id="挑战3-3-introduce-1"><a href="#挑战3-3-introduce-1" class="headerlink" title="挑战3/3 introduce"></a>挑战3/3 introduce</h4><p><strong>问题：</strong></p><p>在不改变上述已写代码的情况下，给PersonConstructor函数添加一个打印“Hi, my name is [name]”的introduce方法。</p><p><strong>题解：</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*** CHALLENGE 3 of 3 ***/</span></span><br><span class="line"><span class="comment">// add code here</span></span><br><span class="line">PersonConstructor.prototype.introduce = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">`Hi, my name is <span class="subst">$&#123;<span class="keyword">this</span>.name&#125;</span>`</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">mike.introduce(); <span class="comment">// -&gt; Logs 'Hi, my name is Mike'</span></span><br></pre></td></tr></table></figure><h3 id="使用ES6的类"><a href="#使用ES6的类" class="headerlink" title="使用ES6的类"></a>使用ES6的类</h3><h4 id="挑战1-2-PersonClass"><a href="#挑战1-2-PersonClass" class="headerlink" title="挑战1/2 PersonClass"></a>挑战1/2 PersonClass</h4><p><strong>问题：</strong></p><p>构建PersonClass类。PersonClass应有一个接受name参数并存储为名为name的属性的构造器。PersonClass还应有一个称为greet的方法，用于打印“hello”字符串。</p><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/****************************************************************</span></span><br><span class="line"><span class="comment">                        USING ES6 CLASSES</span></span><br><span class="line"><span class="comment">****************************************************************/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*** CHALLENGE 1 of 2 ***/</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PersonClass</span> </span>&#123;</span><br><span class="line">  <span class="keyword">constructor</span>(name) &#123;</span><br><span class="line">    <span class="comment">// add code here</span></span><br><span class="line">    <span class="keyword">this</span>.name = name;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// add code here</span></span><br><span class="line">  greet() &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"hello"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// /********* Uncomment this line to test your work! *********/</span></span><br><span class="line"><span class="keyword">const</span> george = <span class="keyword">new</span> PersonClass(<span class="string">''</span>);</span><br><span class="line">george.greet(); <span class="comment">// -&gt; Logs 'hello'</span></span><br></pre></td></tr></table></figure><h4 id="挑战2-2-DeveloperClass"><a href="#挑战2-2-DeveloperClass" class="headerlink" title="挑战2/2 DeveloperClass"></a>挑战2/2 DeveloperClass</h4><p><strong>问题：</strong></p><p>构建DeveloperClass类。DeveloperClass类通过扩展PersonClass类来构造对象。除拥有name属性和greet方法外，DeveloperClass还应有个introduce方法。当被调用时，introduce方法会打印“Hello World, my name is [name]”.</p><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*** CHALLENGE 2 of 2 ***/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// add code here</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DeveloperClass</span> <span class="keyword">extends</span> <span class="title">PersonClass</span> </span>&#123;</span><br><span class="line">  introduce() &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">`Hello World, my name is <span class="subst">$&#123;<span class="keyword">this</span>.name&#125;</span>`</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/********* Uncomment these lines to test your work! *********/</span></span><br><span class="line"><span class="keyword">const</span> thai = <span class="keyword">new</span> DeveloperClass(<span class="string">"Thai"</span>, <span class="number">32</span>);</span><br><span class="line"><span class="built_in">console</span>.log(thai.name); <span class="comment">// -&gt; Logs 'Thai'</span></span><br><span class="line">thai.introduce(); <span class="comment">//-&gt; Logs 'Hello World, my name is Thai'</span></span><br></pre></td></tr></table></figure><h3 id="拓展：子类"><a href="#拓展：子类" class="headerlink" title="拓展：子类"></a>拓展：子类</h3><h4 id="挑战1-5-adminFunctionStore"><a href="#挑战1-5-adminFunctionStore" class="headerlink" title="挑战1/5 adminFunctionStore"></a>挑战1/5 adminFunctionStore</h4><p><strong>问题：</strong></p><p>构建adminFunctionStore对象，其可以访问userFunctionStore的所有方法，在不将方法逐个于自身内复制的情况下。</p><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> userFunctionStore = &#123;</span><br><span class="line">  sayType: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"I am a "</span> + <span class="keyword">this</span>.type);</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> adminFunctionStore = <span class="built_in">Object</span>.create(userFunctionStore);</span><br></pre></td></tr></table></figure><h4 id="挑战2-5-adminFactory"><a href="#挑战2-5-adminFactory" class="headerlink" title="挑战2/5 adminFactory"></a>挑战2/5 adminFactory</h4><p><strong>问题：</strong></p><p>构建adminFactory函数，用于创建一个包含userFactory下所有数据域及默认值的对象，在不将数据域逐个于自身内复制的情况下。</p><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">userFactory</span>(<span class="params">name, score</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> user = <span class="built_in">Object</span>.create(userFunctionStore);</span><br><span class="line">  user.type = <span class="string">"User"</span>;</span><br><span class="line">  user.name = name;</span><br><span class="line">  user.score = score;</span><br><span class="line">  <span class="keyword">return</span> user;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">adminFactory</span>(<span class="params">name, score</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> admin = <span class="keyword">new</span> userFactory(name, score);</span><br><span class="line">    <span class="keyword">return</span> admin;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="挑战3-5-adminFactory"><a href="#挑战3-5-adminFactory" class="headerlink" title="挑战3/5 adminFactory"></a>挑战3/5 adminFactory</h4><p><strong>问题：</strong></p><p>然后确保adminFactory中的type‘域的值为’Admin‘而不是’User’。</p><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">adminFactory</span>(<span class="params">name, score</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> admin = <span class="keyword">new</span> userFactory(name, score);</span><br><span class="line">    admin.type = <span class="string">'Admin'</span>;</span><br><span class="line">    <span class="keyword">return</span> admin;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="挑战4-5-adminFactory"><a href="#挑战4-5-adminFactory" class="headerlink" title="挑战4/5 adminFactory"></a>挑战4/5 adminFactory</h4><p><strong>问题：</strong></p><p>确保adminFactory对象可以访问到adminFunctionStore对象中的方法，在不全部复制的情况下。</p><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">adminFactory</span>(<span class="params">name, score</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> admin = <span class="built_in">Object</span>.create(adminFunctionStore, &#123;</span><br><span class="line">    name: &#123;</span><br><span class="line">      value: name,</span><br><span class="line">    &#125;,</span><br><span class="line">    score: &#123;</span><br><span class="line">      value: score,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;);</span><br><span class="line">  admin.type = <span class="string">"Admin"</span>;</span><br><span class="line">  <span class="keyword">return</span> admin;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="挑战5-5-sharePublicMessage"><a href="#挑战5-5-sharePublicMessage" class="headerlink" title="挑战5/5 sharePublicMessage"></a>挑战5/5 sharePublicMessage</h4><p><strong>问题：</strong></p><p>创建一个打印“Welcome users!”的sharePublicMessage方法，适用于adminFactory对象，但不适用于userFactory对象。请不要在adminFactory中直接添加这个方法。</p><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> adminFunctionStore = <span class="built_in">Object</span>.create(userFunctionStore, &#123;</span><br><span class="line">  sharePublicMessage: &#123;</span><br><span class="line">    value: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">"Welcome users!"</span>);</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">adminFactory</span>(<span class="params">name, score</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> admin = <span class="built_in">Object</span>.create(adminFunctionStore, &#123;</span><br><span class="line">    name: &#123;</span><br><span class="line">      value: name,</span><br><span class="line">    &#125;,</span><br><span class="line">    score: &#123;</span><br><span class="line">      value: score,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;);</span><br><span class="line">  admin.type = <span class="string">"Admin"</span>;</span><br><span class="line">  <span class="keyword">return</span> admin;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> adminTester = <span class="keyword">new</span> adminFactory(<span class="string">"Mike"</span>, <span class="number">89</span>);</span><br><span class="line">adminTester.sharePublicMessage(); <span class="comment">// -&gt; "Welcom users!"</span></span><br><span class="line"><span class="built_in">console</span>.log(adminTester.type);  <span class="comment">// -&gt; "Admin"</span></span><br><span class="line"><span class="keyword">const</span> userTester = <span class="keyword">new</span> userFactory(<span class="string">"June"</span>, <span class="number">90</span>);</span><br><span class="line"><span class="comment">// userTester.sharePublisMessage();  // -&gt; error!</span></span><br><span class="line"><span class="built_in">console</span>.log(userTester.type); <span class="comment">// -&gt; "User"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> adminFromFactory = adminFactory(<span class="string">"Eva"</span>, <span class="number">5</span>);</span><br><span class="line">adminFromFactory.sayType(); <span class="comment">// -&gt; Logs "I am a Admin"</span></span><br><span class="line">adminFromFactory.sharePublicMessage(); <span class="comment">// -&gt; Logs "Welcome users!"</span></span><br></pre></td></tr></table></figure><h3 id="拓展：Mixins"><a href="#拓展：Mixins" class="headerlink" title="拓展：Mixins"></a>拓展：Mixins</h3><p><strong>问题：</strong></p><p>Mixins是面向对象编程中使对象获得除继承外的方法和属性的工具。在这个挑战中，补充下方代码，使robotFido拥有robotMixin的所有属性。请仅适用一行代码，在不逐个添加属性的情况下。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Dog</span> </span>&#123;</span><br><span class="line">  <span class="keyword">constructor</span>() &#123;</span><br><span class="line">    <span class="keyword">this</span>.legs = <span class="number">4</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  speak() &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'Woof!'</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> robotMixin = &#123;</span><br><span class="line">  skin: <span class="string">'metal'</span>,</span><br><span class="line">  speak: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; <span class="built_in">console</span>.log(<span class="string">`I have <span class="subst">$&#123;<span class="keyword">this</span>.legs&#125;</span> legs and am made of <span class="subst">$&#123;<span class="keyword">this</span>.skin&#125;</span>`</span>) &#125;,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> robotFido = <span class="keyword">new</span> Dog();</span><br></pre></td></tr></table></figure><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">robotFido = <span class="built_in">Object</span>.assign(robotFido, robotMixin);</span><br><span class="line"></span><br><span class="line">robotFido.speak(); <span class="comment">// -&gt; Logs "I am made of 4 legs and am made of metal"</span></span><br></pre></td></tr></table></figure><hr><p><img src="https://image-static.segmentfault.com/967/627/967627104-da0d6e70aa8f5cbc_fix732" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;＠冒泡的马树&lt;/p&gt;
&lt;p&gt;题库原地址：&lt;a href=&quot;http://csbin.io/oop&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://csbin.io/oop&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;面向对象&quot;&gt;&lt;a href=&quot;#面向对象&quot; class=&quot;headerlink&quot; title=&quot;面向对象&quot;&gt;&lt;/a&gt;面向对象&lt;/h2&gt;
    
    </summary>
    
    
      <category term="JavaScript" scheme="http://lesliewong.cn/categories/JavaScript/"/>
    
      <category term="算法" scheme="http://lesliewong.cn/categories/JavaScript/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="JavaScript" scheme="http://lesliewong.cn/tags/JavaScript/"/>
    
      <category term="算法" scheme="http://lesliewong.cn/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript专项算法题（4）：异步</title>
    <link href="http://lesliewong.cn/2020/08/15/JavaScript-functional-algorithms-async/"/>
    <id>http://lesliewong.cn/2020/08/15/JavaScript-functional-algorithms-async/</id>
    <published>2020-08-15T12:45:30.000Z</published>
    <updated>2024-01-18T04:52:40.538Z</updated>
    
    <content type="html"><![CDATA[<p>＠冒泡的马树</p><p>题库原地址：<a href="http://csbin.io/async" target="_blank" rel="noopener">http://csbin.io/async</a></p><h2 id="异步"><a href="#异步" class="headerlink" title="异步"></a>异步</h2><h3 id="挑战一-sayHowdy"><a href="#挑战一-sayHowdy" class="headerlink" title="挑战一 sayHowdy"></a>挑战一 sayHowdy</h3><p><strong>问题:</strong></p><p>思考时间（现在暂时不需要编写代码）：分析下方挑战一的代码，打印出来的结果会是怎样顺序的？Howdy先还是Partnah先？</p><a id="more"></a> <p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* CHALLENGE 1 */</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sayHowdy</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'Howdy'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">testMe</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  setTimeout(sayHowdy, <span class="number">0</span>);</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'Partnah'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// After thinking it through, uncomment the following line to check your guess!</span></span><br><span class="line"><span class="comment">// testMe(); // what order should these log out? Howdy or Partnah first?</span></span><br></pre></td></tr></table></figure><h3 id="挑战二-delayedGreet"><a href="#挑战二-delayedGreet" class="headerlink" title="挑战二 delayedGreet"></a>挑战二 delayedGreet</h3><p><strong>问题：</strong></p><p>构建delayedGreet函数，用于在3秒后打印“welcome”。</p><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* CHALLENGE 2 */</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">delayedGreet</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="comment">// ADD CODE HERE</span></span><br><span class="line">  setTimeout(<span class="function"><span class="params">()</span>=&gt;</span><span class="built_in">console</span>.log(<span class="string">'welcome'</span>), <span class="number">3000</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// Uncomment the following line to check your work!</span></span><br><span class="line"><span class="comment">// delayedGreet(); // should log (after 3 seconds): welcome</span></span><br></pre></td></tr></table></figure><h3 id="挑战三-helloGoodbye"><a href="#挑战三-helloGoodbye" class="headerlink" title="挑战三 helloGoodbye"></a>挑战三 helloGoodbye</h3><p><strong>问题：</strong></p><p>构建helloGoodbye函数。其会立刻打印”hello”，然后2秒后打印“good bye”。</p><p><strong>代码：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* CHALLENGE 3 */</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">helloGoodbye</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="comment">// ADD CODE HERE</span></span><br><span class="line">  setTimeout(<span class="function"><span class="params">()</span>=&gt;</span><span class="built_in">console</span>.log(<span class="string">'good bye'</span>), <span class="number">2000</span>);</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'hello'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// Uncomment the following line to check your work!</span></span><br><span class="line"><span class="comment">// helloGoodbye(); // should log: hello // should also log (after 3 seconds): good bye</span></span><br></pre></td></tr></table></figure><h3 id="挑战四-brokenRecord"><a href="#挑战四-brokenRecord" class="headerlink" title="挑战四 brokenRecord"></a>挑战四 brokenRecord</h3><p><strong>问题：</strong></p><p>构建brokenRecord函数。其会每秒钟都打印一次”hi again“。使用”End Code“按钮结束打印如果你对代码的运行满意的话。（译注：原题库网页上的按钮）</p><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* CHALLENGE 4 */</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">brokenRecord</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="comment">// ADD CODE HERE</span></span><br><span class="line">  setInterval(<span class="function"><span class="params">()</span>=&gt;</span><span class="built_in">console</span>.log(<span class="string">'hi again'</span>), <span class="number">1000</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// Uncomment the following line to check your work!</span></span><br><span class="line"><span class="comment">// brokenRecord(); // should log (every second): hi again</span></span><br></pre></td></tr></table></figure><h3 id="挑战五-limitedRepeat"><a href="#挑战五-limitedRepeat" class="headerlink" title="挑战五 limitedRepeat"></a>挑战五 limitedRepeat</h3><p><strong>问题：</strong></p><p>构建limitedRepeat函数。其会每秒钟打印一次”hi for now”，但仅仅持续5秒钟。如果你感到困难的话，研究clearInterval。</p><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* CHALLENGE 5 */</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">limitedRepeat</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="comment">// ADD CODE HERE</span></span><br><span class="line">  <span class="keyword">const</span> intervalId = setInterval(<span class="function"><span class="params">()</span>=&gt;</span><span class="built_in">console</span>.log(<span class="string">'hi for now'</span>), <span class="number">1000</span>);</span><br><span class="line">  setTimeout(<span class="function"><span class="params">()</span>=&gt;</span>clearInterval(intervalId), <span class="number">5000</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// Uncomment the following line to check your work!</span></span><br><span class="line"><span class="comment">// limitedRepeat(); // should log (every second, for 5 seconds): hi for now</span></span><br></pre></td></tr></table></figure><h3 id="挑战六-everyXsecsForYsecs"><a href="#挑战六-everyXsecsForYsecs" class="headerlink" title="挑战六 everyXsecsForYsecs"></a>挑战六 everyXsecsForYsecs</h3><p><strong>问题：</strong></p><p>构建everyXsecsForYsecs函数。其接受三个参数：一个函数func、一个数字interval和另外一个数duration。</p><p>everyXsecsForYsecs函数会以interval秒的间隔运行函数func,但会在duration秒后结束运行。</p><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* CHALLENGE 6 */</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">everyXsecsForYsecs</span>(<span class="params">func, interval, duration</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// ADD CODE HERE</span></span><br><span class="line">  <span class="keyword">const</span> intervalId = setInterval(func, interval * <span class="number">1000</span>);</span><br><span class="line">  setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> clearInterval(intervalId), duration * <span class="number">1000</span>);</span><br><span class="line">  </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// Uncomment the following lines to check your work!</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">theEnd</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'This is the end!'</span>);</span><br><span class="line">&#125;</span><br><span class="line">everyXsecsForYsecs(theEnd, <span class="number">2</span>, <span class="number">20</span>); <span class="comment">// should invoke theEnd function every 2 seconds, for 20 seconds): This is the end!</span></span><br></pre></td></tr></table></figure><h3 id="挑战七-delayCounter"><a href="#挑战七-delayCounter" class="headerlink" title="挑战七 delayCounter"></a>挑战七 delayCounter</h3><p><strong>问题：</strong></p><p>构建delayCounter函数，接受的第一个参数为一个数组（称为target），第二个参数为毫秒单位的数字（称为wait)，返回结果为一个函数。</p><p>当返回函数被调用时，它会依序打印从1到target之间的数字（含target），以wait毫秒的时间间隔。</p><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* CHALLENGE 7 */</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">delayCounter</span>(<span class="params">target, wait</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// Solution 1:</span></span><br><span class="line"><span class="keyword">let</span> intervalId;</span><br><span class="line"><span class="keyword">let</span> counter = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="function"><span class="keyword">function</span> <span class="title">inner</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (counter === <span class="number">0</span>) &#123;</span><br><span class="line">        counter++;</span><br><span class="line">        intervalId = setInterval(<span class="function"><span class="params">()</span> =&gt;</span> <span class="built_in">console</span>.log(inner()), wait);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (counter === target) &#123;</span><br><span class="line">        clearInterval(intervalId);</span><br><span class="line">        <span class="keyword">return</span> counter;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> counter++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line">  <span class="comment">// Solution 2:</span></span><br><span class="line">    <span class="comment">//return function inner() &#123;</span></span><br><span class="line">    <span class="comment">//for(let i = 1; i&lt;=target; i++)&#123;</span></span><br><span class="line">    <span class="comment">//  setTimeout(()=&gt;console.log(i), wait * i);</span></span><br><span class="line">    <span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// UNCOMMENT THESE TO TEST YOUR WORK!</span></span><br><span class="line"><span class="comment">// const countLogger = delayCounter(3, 1000)</span></span><br><span class="line"><span class="comment">// countLogger();</span></span><br><span class="line"><span class="comment">// After 1 second, log 1</span></span><br><span class="line"><span class="comment">// After 2 seconds, log 2</span></span><br><span class="line"><span class="comment">// After 3 seconds, log 3</span></span><br></pre></td></tr></table></figure><h3 id="挑战八-promised"><a href="#挑战八-promised" class="headerlink" title="挑战八 promised"></a>挑战八 promised</h3><p><strong>问题：</strong></p><p>构建promised函数，接受一个值作为参数。它会返回一个在两秒后触发resolve函数的Promise对象。</p><p>提示：到MDN去查阅下Promise对象的文档。</p><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* CHALLENGE 8 */</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">promised</span> (<span class="params">val</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// ADD CODE HERE</span></span><br><span class="line">  <span class="keyword">const</span> promiseObj = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve</span>) =&gt;</span> &#123;</span><br><span class="line">    setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> resolve(val), <span class="number">2000</span>);</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">return</span> promiseObj;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// UNCOMMENT THESE TO TEST YOUR WORK!</span></span><br><span class="line"><span class="comment">// const createPromise = promised('wait for it...');</span></span><br><span class="line"><span class="comment">// createPromise.then((val) =&gt; console.log(val)); </span></span><br><span class="line"><span class="comment">// will log "wait for it..." to the console after 2 seconds</span></span><br></pre></td></tr></table></figure><h3 id="挑战九-SecondClock"><a href="#挑战九-SecondClock" class="headerlink" title="挑战九 SecondClock"></a>挑战九 SecondClock</h3><p><strong>问题：</strong></p><p>编写一个SecondClock类。其有两个方法：start和reset。</p><p>start：当调用时，start会每秒调用一个回调函数（this.cb，在构造器中定义），作用于一个变量。这个变量每次被回调函数使用时总是当前的时间秒数。</p><p>换言之，此回调函数每一秒钟都基于时钟信号的秒数而被调用，总是从1开始但并不使用当前计算机上的时钟信号的秒数值。</p><p>第一次“滴答”（值为1）发生在最初的secondClock调用的1秒后；</p><p>第二次“滴答”（值为2）发生在最初的secondClock调用的2秒后；</p><p>……</p><p>第六十次“滴答”（值为60）发生在最初的secondClock调用的60秒后；</p><p>第六十一次“滴答”（值为61）发生在最初的secondClock调用的61秒后；</p><p>第六十二次“滴答”（值为62）发生在最初的secondClock调用的62秒后；</p><p>以此类推。</p><p>reset：当调用时，完全停止SecondClock时钟的运行，另外重设时间为初始值。</p><p>提示：查阅setInterval和clearInterval。</p><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* CHALLENGE 9 */</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SecondClock</span> </span>&#123;</span><br><span class="line">  <span class="keyword">constructor</span>(cb) &#123;</span><br><span class="line">    <span class="comment">// ADD CODE HERE</span></span><br><span class="line">    <span class="keyword">this</span>.counter = <span class="number">0</span></span><br><span class="line">    <span class="keyword">this</span>.intervalId = <span class="number">0</span></span><br><span class="line">    <span class="keyword">this</span>.cb = cb</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// ADD METHODS HERE</span></span><br><span class="line">  start () &#123;</span><br><span class="line">    <span class="keyword">this</span>.intervalId = setInterval(<span class="function"><span class="params">()</span>=&gt;</span><span class="keyword">this</span>.cb(++<span class="keyword">this</span>.counter), <span class="number">1000</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  reset () &#123;</span><br><span class="line">    clearInterval(<span class="keyword">this</span>.intervalId);</span><br><span class="line">    <span class="keyword">this</span>.counter = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">this</span>.intervalId = <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// UNCOMMENT THESE TO TEST YOUR WORK!</span></span><br><span class="line"><span class="comment">// const clock = new SecondClock((val) =&gt; &#123; console.log(val) &#125;);</span></span><br><span class="line"><span class="comment">// console.log("Started Clock.");</span></span><br><span class="line"><span class="comment">// clock.start();</span></span><br><span class="line"><span class="comment">// setTimeout(() =&gt; &#123;</span></span><br><span class="line"><span class="comment">//     clock.reset();</span></span><br><span class="line"><span class="comment">//     console.log("Stopped Clock after 6 seconds.");</span></span><br><span class="line"><span class="comment">// &#125;, 6000);</span></span><br></pre></td></tr></table></figure><h3 id="挑战十-debounce"><a href="#挑战十-debounce" class="headerlink" title="挑战十 debounce"></a>挑战十 debounce</h3><p><strong>问题：</strong></p><p>构建debounce函数，接受参数为一个回调函数callback和一个数值interval，返回结果为一个函数。此返回函数仅会在其上次调用回调函数的interval毫秒后才会被再次调用回调函数。</p><p>在interval毫秒时间内调用返回函数不会被响应或列入队列，然而时间信息会被重置（ 译注：interval时间重新开始计算）。</p><p>有关防抖函数的例子：请查看这个链接 <a href="https://css-tricks.com/debouncing-throttling-explained-examples/" target="_blank" rel="noopener">https://css-tricks.com/debouncing-throttling-explained-examples/</a></p><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* CHALLENGE 10 */</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">debounce</span>(<span class="params">callback, interval</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// ADD CODE HERE</span></span><br><span class="line">  <span class="comment">// Solution 1:</span></span><br><span class="line">  <span class="keyword">let</span> timeCounter = <span class="number">0</span></span><br><span class="line">  <span class="keyword">let</span> timeoutId = <span class="literal">null</span></span><br><span class="line">  <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (timeCounter === <span class="number">0</span>) &#123;</span><br><span class="line">      timeoutId = setTimeout(<span class="function"><span class="params">()</span>=&gt;</span>&#123;timeoutId = <span class="literal">null</span>;timeCounter = <span class="number">0</span>;&#125;, interval);</span><br><span class="line">      timeCounter++;</span><br><span class="line">      <span class="keyword">return</span> callback();</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (timeoutId) &#123;</span><br><span class="line">        clearTimeout(timeoutId);</span><br><span class="line">      timeoutId = setTimeout(<span class="function"><span class="params">()</span>=&gt;</span>&#123;timeoutId = <span class="literal">null</span>; timeCounter = <span class="number">0</span>;&#125;, interval);</span><br><span class="line">        timeCounter++;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        timeCounter++;</span><br><span class="line">        <span class="keyword">return</span> callback();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line"><span class="comment">//   // Solution 2 (Not efficient): </span></span><br><span class="line"><span class="comment">//   return function ()&#123;</span></span><br><span class="line"><span class="comment">//     if (timeoutId) &#123;</span></span><br><span class="line"><span class="comment">//       clearTimeout(timeoutId);</span></span><br><span class="line"><span class="comment">//       timeoutId = setTimeout(() =&gt; timeoutId = null, interval);</span></span><br><span class="line"><span class="comment">//     &#125; else &#123;</span></span><br><span class="line"><span class="comment">//       timeoutId = setTimeout(() =&gt; timeoutId = null, interval);</span></span><br><span class="line"><span class="comment">//       return callback();</span></span><br><span class="line">      </span><br><span class="line"><span class="comment">//     &#125;</span></span><br><span class="line"><span class="comment">//   &#125;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// UNCOMMENT THESE TO TEST YOUR WORK!</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">giveHi</span>(<span class="params"></span>) </span>&#123; <span class="keyword">return</span> <span class="string">'hi'</span>; &#125;</span><br><span class="line"><span class="keyword">const</span> giveHiSometimes = debounce(giveHi, <span class="number">3000</span>);</span><br><span class="line"><span class="built_in">console</span>.log(giveHiSometimes()); <span class="comment">// -&gt; 'hi'</span></span><br><span class="line">setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; <span class="built_in">console</span>.log(giveHiSometimes()); &#125;, <span class="number">2000</span>); <span class="comment">// -&gt; undefined</span></span><br><span class="line">setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; <span class="built_in">console</span>.log(giveHiSometimes()); &#125;, <span class="number">4000</span>); <span class="comment">// -&gt; undefined</span></span><br><span class="line">setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; <span class="built_in">console</span>.log(giveHiSometimes()); &#125;, <span class="number">8000</span>); <span class="comment">// -&gt; 'hi'</span></span><br></pre></td></tr></table></figure><hr><p><img src="https://image-static.segmentfault.com/341/573/3415737013-79e86c0967428e01_fix732" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;＠冒泡的马树&lt;/p&gt;
&lt;p&gt;题库原地址：&lt;a href=&quot;http://csbin.io/async&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://csbin.io/async&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;异步&quot;&gt;&lt;a href=&quot;#异步&quot; class=&quot;headerlink&quot; title=&quot;异步&quot;&gt;&lt;/a&gt;异步&lt;/h2&gt;&lt;h3 id=&quot;挑战一-sayHowdy&quot;&gt;&lt;a href=&quot;#挑战一-sayHowdy&quot; class=&quot;headerlink&quot; title=&quot;挑战一 sayHowdy&quot;&gt;&lt;/a&gt;挑战一 sayHowdy&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;问题:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;思考时间（现在暂时不需要编写代码）：分析下方挑战一的代码，打印出来的结果会是怎样顺序的？Howdy先还是Partnah先？&lt;/p&gt;
    
    </summary>
    
    
      <category term="JavaScript" scheme="http://lesliewong.cn/categories/JavaScript/"/>
    
      <category term="算法" scheme="http://lesliewong.cn/categories/JavaScript/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="JavaScript" scheme="http://lesliewong.cn/tags/JavaScript/"/>
    
      <category term="算法" scheme="http://lesliewong.cn/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>图示HTTP的三次握手四次挥手</title>
    <link href="http://lesliewong.cn/2020/07/18/Illustration_of_three_handshakes_and_four_waves_of_http/"/>
    <id>http://lesliewong.cn/2020/07/18/Illustration_of_three_handshakes_and_four_waves_of_http/</id>
    <published>2020-07-18T12:45:30.000Z</published>
    <updated>2024-01-18T04:51:38.597Z</updated>
    
    <content type="html"><![CDATA[<p>以生活中常见对话的状态确认场景作为切入点，简单易懂地诠释HTTP的三次握手和四次挥手。</p><a id="more"></a><h3 id="HTTP三次握手"><a href="#HTTP三次握手" class="headerlink" title="HTTP三次握手"></a>HTTP三次握手</h3><h5 id="1-客户端向服务器端发起状态确认的询问（第一次握手）；"><a href="#1-客户端向服务器端发起状态确认的询问（第一次握手）；" class="headerlink" title="1. 客户端向服务器端发起状态确认的询问（第一次握手）；"></a>1. 客户端向服务器端发起状态确认的询问（第一次握手）；</h5><hr><p><img src="https://image-static.segmentfault.com/152/431/1524318367-67833354c5563469_fix732" alt="image-20200717213251625" style="zoom:50%;"></p><hr><h5 id="2-服务器端确认状态，并反问客户端的状态确认（第二次握手）；"><a href="#2-服务器端确认状态，并反问客户端的状态确认（第二次握手）；" class="headerlink" title="2.服务器端确认状态，并反问客户端的状态确认（第二次握手）；"></a>2.服务器端确认状态，并反问客户端的状态确认（第二次握手）；</h5><hr><p><img src="https://image-static.segmentfault.com/250/864/2508647093-cdcb2b380e501fdc_fix732" alt="image-20200717213346424" style="zoom:50%;"></p><hr><h5 id="3-客户端回复服务器端的状态确认，准备建立连接（第三次握手）；"><a href="#3-客户端回复服务器端的状态确认，准备建立连接（第三次握手）；" class="headerlink" title="3. 客户端回复服务器端的状态确认，准备建立连接（第三次握手）；"></a>3. 客户端回复服务器端的状态确认，准备建立连接（第三次握手）；</h5><hr><p><img src="https://image-static.segmentfault.com/494/242/494242268-387ee30180a1103e_fix732" alt="image-20200717214626474" style="zoom:50%;"></p><hr><h5 id="4-两者建立连接，通过TCP传输数据（建立连接）。"><a href="#4-两者建立连接，通过TCP传输数据（建立连接）。" class="headerlink" title="4. 两者建立连接，通过TCP传输数据（建立连接）。"></a>4. 两者建立连接，通过TCP传输数据（建立连接）。</h5><hr><p><img src="https://image-static.segmentfault.com/377/697/3776976797-0487bd2ce8738027_fix732" alt="image-20200717213449228" style="zoom:50%;"></p><hr><h3 id="HTTP四次挥手"><a href="#HTTP四次挥手" class="headerlink" title="HTTP四次挥手"></a>HTTP四次挥手</h3><h5 id="1-客户端向服务器端表示准备结束连接（第一次挥手）；"><a href="#1-客户端向服务器端表示准备结束连接（第一次挥手）；" class="headerlink" title="1. 客户端向服务器端表示准备结束连接（第一次挥手）；"></a>1. 客户端向服务器端表示准备结束连接（第一次挥手）；</h5><hr><p><img src="https://image-static.segmentfault.com/499/371/499371806-f84aea0168e875d9_fix732" alt="image-20200718070610191" style="zoom:50%;"></p><hr><h5 id="2-服务器端向客户端表示正开始准备结束连接（第一次挥手）；"><a href="#2-服务器端向客户端表示正开始准备结束连接（第一次挥手）；" class="headerlink" title="2. 服务器端向客户端表示正开始准备结束连接（第一次挥手）；"></a>2. 服务器端向客户端表示正开始准备结束连接（第一次挥手）；</h5><hr><p><img src="https://image-static.segmentfault.com/282/369/2823696335-5390b33f8a3e00f5_fix732" alt="image-20200718070949447" style="zoom:50%;"></p><hr><h5 id="3-服务器端向客户端表示可以结束连接了（第三次挥手）；"><a href="#3-服务器端向客户端表示可以结束连接了（第三次挥手）；" class="headerlink" title="3. 服务器端向客户端表示可以结束连接了（第三次挥手）；"></a>3. 服务器端向客户端表示可以结束连接了（第三次挥手）；</h5><hr><p><img src="https://image-static.segmentfault.com/364/270/3642706479-cdf8816e47817cb0_fix732" alt="image-20200718072212679" style="zoom:50%;"></p><hr><h5 id="4-客户端确认服务器端的结束连接回复（第四次挥手）；"><a href="#4-客户端确认服务器端的结束连接回复（第四次挥手）；" class="headerlink" title="4. 客户端确认服务器端的结束连接回复（第四次挥手）；"></a>4. 客户端确认服务器端的结束连接回复（第四次挥手）；</h5><hr><p><img src="https://image-static.segmentfault.com/302/907/3029077708-4ef7a68aae358779_fix732" alt="image-20200718072354461" style="zoom:50%;"></p><hr><h5 id="5-两者结束连接。"><a href="#5-两者结束连接。" class="headerlink" title="5. 两者结束连接。"></a>5. 两者结束连接。</h5><hr><p><img src="https://image-static.segmentfault.com/120/437/1204370677-4894484b8e253fe8_fix732" alt="image-20200718071052824" style="zoom:50%;"></p><hr><h3 id="原始来源"><a href="#原始来源" class="headerlink" title="原始来源"></a>原始来源</h3><p>B站Up主：程序员视角</p><p>视频：<a href="https://www.bilibili.com/video/BV1QA411t74m" target="_blank" rel="noopener">【编程基础】TCP网络通信、三次握手和四次握手</a></p><hr><p><img src="https://image-static.segmentfault.com/208/100/2081002377-918cff414cced3bd_fix732" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;以生活中常见对话的状态确认场景作为切入点，简单易懂地诠释HTTP的三次握手和四次挥手。&lt;/p&gt;
    
    </summary>
    
    
      <category term="HTTP" scheme="http://lesliewong.cn/categories/HTTP/"/>
    
    
      <category term="HTTP" scheme="http://lesliewong.cn/tags/HTTP/"/>
    
  </entry>
  
  <entry>
    <title>画一张HTTP状态码的思维导图</title>
    <link href="http://lesliewong.cn/2020/07/14/Draw-a-Mindmap-for-http-status-code/"/>
    <id>http://lesliewong.cn/2020/07/14/Draw-a-Mindmap-for-http-status-code/</id>
    <published>2020-07-14T12:45:30.000Z</published>
    <updated>2024-01-18T04:43:38.620Z</updated>
    
    <content type="html"><![CDATA[<p>＠冒泡的马树</p><p>参考文章：<a href="https://www.runoob.com/http/http-status-codes.html" target="_blank" rel="noopener">HTTP状态码 | 菜鸟教程</a></p><p>工具：百度脑图</p><a id="more"></a><p><img src="https://image-static.segmentfault.com/229/672/2296725809-748b78c63accf89a_fix732" alt></p><h1 id="HTTP状态码"><a href="#HTTP状态码" class="headerlink" title="HTTP状态码"></a>HTTP状态码</h1><h2 id="1"><a href="#1" class="headerlink" title="1**"></a>1**</h2><h3 id="信息，服务器收到请求，需要请求者继续执行操作"><a href="#信息，服务器收到请求，需要请求者继续执行操作" class="headerlink" title="信息，服务器收到请求，需要请求者继续执行操作"></a>信息，服务器收到请求，需要请求者继续执行操作</h3><h4 id="具体代码"><a href="#具体代码" class="headerlink" title="具体代码"></a>具体代码</h4><h5 id="100"><a href="#100" class="headerlink" title="100"></a>100</h5><h6 id="Continue"><a href="#Continue" class="headerlink" title="Continue"></a>Continue</h6><p>####### 继续。客户端应继续其请求</p><h5 id="101"><a href="#101" class="headerlink" title="101"></a>101</h5><h6 id="Switching-Protocols"><a href="#Switching-Protocols" class="headerlink" title="Switching Protocols"></a>Switching Protocols</h6><p>####### 切换协议。服务器根据客户端的请求切换协议。只能切换到更高级的协议，例如切换到HTTP的新版本协议</p><h2 id="2"><a href="#2" class="headerlink" title="2**"></a>2**</h2><h3 id="成功，操作被成功接收并处理"><a href="#成功，操作被成功接收并处理" class="headerlink" title="成功，操作被成功接收并处理"></a>成功，操作被成功接收并处理</h3><h4 id="具体代码-1"><a href="#具体代码-1" class="headerlink" title="具体代码"></a>具体代码</h4><h5 id="200"><a href="#200" class="headerlink" title="200"></a>200</h5><h6 id="OK"><a href="#OK" class="headerlink" title="OK"></a>OK</h6><p>####### 请求成功。一般用于GET与POST请求</p><h5 id="201"><a href="#201" class="headerlink" title="201"></a>201</h5><h6 id="Created"><a href="#Created" class="headerlink" title="Created"></a>Created</h6><p>####### 已创建。成功请求并创建了新的资源</p><h5 id="202"><a href="#202" class="headerlink" title="202"></a>202</h5><h6 id="Accepted"><a href="#Accepted" class="headerlink" title="Accepted"></a>Accepted</h6><p>####### 已经结束请求，但未处理完成</p><h5 id="203"><a href="#203" class="headerlink" title="203"></a>203</h5><h6 id="Non-Authoritative-Information"><a href="#Non-Authoritative-Information" class="headerlink" title="Non-Authoritative Information"></a>Non-Authoritative Information</h6><p>####### 非授权信息。请求成功，但返回的meta信息不在原始的服务器，而是一个副本</p><h5 id="204"><a href="#204" class="headerlink" title="204"></a>204</h5><h6 id="NO-Content"><a href="#NO-Content" class="headerlink" title="NO Content"></a>NO Content</h6><p>####### 无内容。服务器成功处理，但未返回内容。在未更新网页的情况下，可确保浏览器继续显示当前文档</p><h5 id="205"><a href="#205" class="headerlink" title="205"></a>205</h5><h6 id="Reset-Content"><a href="#Reset-Content" class="headerlink" title="Reset Content"></a>Reset Content</h6><p>####### 重置内容。服务器处理成功，用户终端（例如浏览器）应重置文档视图。可通过此返回码清除浏览器的表单域</p><h5 id="206"><a href="#206" class="headerlink" title="206"></a>206</h5><h6 id="Partial-Content"><a href="#Partial-Content" class="headerlink" title="Partial Content"></a>Partial Content</h6><p>####### 部分内容。服务器成功处理了部分GET请求</p><h2 id="3"><a href="#3" class="headerlink" title="3**"></a>3**</h2><h3 id="重定向，需要进一步的操作以完成请求"><a href="#重定向，需要进一步的操作以完成请求" class="headerlink" title="重定向，需要进一步的操作以完成请求"></a>重定向，需要进一步的操作以完成请求</h3><h4 id="具体代码-2"><a href="#具体代码-2" class="headerlink" title="具体代码"></a>具体代码</h4><h5 id="300"><a href="#300" class="headerlink" title="300"></a>300</h5><h6 id="Multiple-Choices"><a href="#Multiple-Choices" class="headerlink" title="Multiple Choices"></a>Multiple Choices</h6><p>####### 多种选择。请求的资源可包括多个位置，相应可返回一个资源特征与地址的列表用于用户终端（例如浏览器）选择</p><h5 id="301"><a href="#301" class="headerlink" title="301"></a>301</h5><h6 id="Moved-Permanently"><a href="#Moved-Permanently" class="headerlink" title="Moved Permanently"></a>Moved Permanently</h6><p>####### 永久移动。请求的资源已被永久地移动到新URI，返回信息会包含新的URI，浏览器会自动定向到新URI。今后任何新的请求都应使用新的URI代替</p><h5 id="302"><a href="#302" class="headerlink" title="302"></a>302</h5><h6 id="Found"><a href="#Found" class="headerlink" title="Found"></a>Found</h6><p>####### 临时移动。与301类似，但资源只是临时被移动，客户端应该继续使用原有URI</p><h5 id="303"><a href="#303" class="headerlink" title="303"></a>303</h5><h6 id="See-Other"><a href="#See-Other" class="headerlink" title="See Other"></a>See Other</h6><p>####### 查看其它地址。与301类似，使用GET和POST请求查看</p><h5 id="304"><a href="#304" class="headerlink" title="304"></a>304</h5><h6 id="Not-Modified"><a href="#Not-Modified" class="headerlink" title="Not Modified"></a>Not Modified</h6><p>####### 未修改。所请求的资源未修改，服务器返回此状态码时，不会返回任何资源。客户端通常会缓存访问过的资源，通过提供一个头信息指出客户端希望只返回在指定日期之后修改的资源</p><h5 id="305"><a href="#305" class="headerlink" title="305"></a>305</h5><h6 id="Ues-Proxy"><a href="#Ues-Proxy" class="headerlink" title="Ues Proxy"></a>Ues Proxy</h6><p>####### 使用代理。所请求的资源必须通过代理访问</p><h5 id="306"><a href="#306" class="headerlink" title="306"></a>306</h5><h6 id="Unused"><a href="#Unused" class="headerlink" title="Unused"></a>Unused</h6><p>####### 已经被废弃的HTTP状态码</p><h5 id="307"><a href="#307" class="headerlink" title="307"></a>307</h5><h6 id="Temporary-Redirect"><a href="#Temporary-Redirect" class="headerlink" title="Temporary Redirect"></a>Temporary Redirect</h6><p>####### 临时重定向。与302类似，使用GET请求重定向</p><h2 id="4"><a href="#4" class="headerlink" title="4**"></a>4**</h2><h3 id="客户端错误，请求包含语法错误或无法完成请求"><a href="#客户端错误，请求包含语法错误或无法完成请求" class="headerlink" title="客户端错误，请求包含语法错误或无法完成请求"></a>客户端错误，请求包含语法错误或无法完成请求</h3><h4 id="具体代码-3"><a href="#具体代码-3" class="headerlink" title="具体代码"></a>具体代码</h4><h5 id="400"><a href="#400" class="headerlink" title="400"></a>400</h5><h6 id="Bad-Request"><a href="#Bad-Request" class="headerlink" title="Bad Request"></a>Bad Request</h6><p>####### 客户端请求的语法错误，服务器无法理解</p><h5 id="401"><a href="#401" class="headerlink" title="401"></a>401</h5><h6 id="Unauthorized"><a href="#Unauthorized" class="headerlink" title="Unauthorized"></a>Unauthorized</h6><p>####### 请求要求用户的身份认证</p><h5 id="402"><a href="#402" class="headerlink" title="402"></a>402</h5><h6 id="Payment-Required"><a href="#Payment-Required" class="headerlink" title="Payment Required"></a>Payment Required</h6><p>####### 保留，将来使用</p><h5 id="403"><a href="#403" class="headerlink" title="403"></a>403</h5><h6 id="Forbidden"><a href="#Forbidden" class="headerlink" title="Forbidden"></a>Forbidden</h6><p>####### 服务器理解请求客户端的请求，但是拒绝执行此请求</p><h5 id="404"><a href="#404" class="headerlink" title="404"></a>404</h5><h6 id="Not-Found"><a href="#Not-Found" class="headerlink" title="Not Found"></a>Not Found</h6><p>####### 服务器无法根据客户端的请求找到资源（网页）。通过此代码，网站设计人员可设置“您所请求的资源无法找到”个性页面</p><h5 id="405"><a href="#405" class="headerlink" title="405"></a>405</h5><h6 id="Method-Not-Allowed"><a href="#Method-Not-Allowed" class="headerlink" title="Method Not Allowed"></a>Method Not Allowed</h6><p>####### 客户端请求中的方法被禁止</p><h5 id="406"><a href="#406" class="headerlink" title="406"></a>406</h5><h6 id="Not-Acceptable"><a href="#Not-Acceptable" class="headerlink" title="Not Acceptable"></a>Not Acceptable</h6><p>####### 服务器无法根据客户端请求的内容特性完成请求</p><h5 id="407"><a href="#407" class="headerlink" title="407"></a>407</h5><h6 id="Proxy-Authentication-Required"><a href="#Proxy-Authentication-Required" class="headerlink" title="Proxy Authentication Required"></a>Proxy Authentication Required</h6><p>####### 请求要求代理的身份认证，与401类似，但请求者应当使用代理进行授权</p><h5 id="408"><a href="#408" class="headerlink" title="408"></a>408</h5><h6 id="Request-Timeout"><a href="#Request-Timeout" class="headerlink" title="Request Timeout"></a>Request Timeout</h6><p>####### 服务器等待客户端发送的请求时间过长，超时</p><h5 id="409"><a href="#409" class="headerlink" title="409"></a>409</h5><h6 id="Conflict"><a href="#Conflict" class="headerlink" title="Conflict"></a>Conflict</h6><p>####### 服务器完成客户端的PUT请求时可能返回此代码，服务器处理请求时发生了冲突</p><h5 id="410"><a href="#410" class="headerlink" title="410"></a>410</h5><h6 id="Gone"><a href="#Gone" class="headerlink" title="Gone"></a>Gone</h6><p>####### 客户端请求的资源已经不存在。410不同于404，如果资源以前有现在被永久删除了可使用410代码，网站设计人员可通过301代码指定资源的新位置</p><h5 id="411"><a href="#411" class="headerlink" title="411"></a>411</h5><h6 id="Lenght-Required"><a href="#Lenght-Required" class="headerlink" title="Lenght Required"></a>Lenght Required</h6><p>####### 服务器无法处理客户端发送的不带Content-Length的请求信息</p><h5 id="412"><a href="#412" class="headerlink" title="412"></a>412</h5><h6 id="Precondition-Failed"><a href="#Precondition-Failed" class="headerlink" title="Precondition Failed"></a>Precondition Failed</h6><p>####### 客户端请求信息的先决条件错误</p><h5 id="413"><a href="#413" class="headerlink" title="413"></a>413</h5><h6 id="Request-Entity-Too-Large"><a href="#Request-Entity-Too-Large" class="headerlink" title="Request Entity Too Large"></a>Request Entity Too Large</h6><p>####### 由于请求的实体过大，服务器无法处理，因此拒绝请求。为防止客户端的连续请求，服务器可能会关闭连接。如果只是服务器暂时无法处理，则会包含一个Retry-After的响应信息</p><h5 id="414"><a href="#414" class="headerlink" title="414"></a>414</h5><h6 id="Request-URI-Too-Large"><a href="#Request-URI-Too-Large" class="headerlink" title="Request-URI Too Large"></a>Request-URI Too Large</h6><p>####### 请求的URI过长（URI通常为网址），服务器无法处理</p><h5 id="415"><a href="#415" class="headerlink" title="415"></a>415</h5><h6 id="Unsupported-Media-Type"><a href="#Unsupported-Media-Type" class="headerlink" title="Unsupported Media Type"></a>Unsupported Media Type</h6><p>####### 服务器无法处理请求附带的媒体格式</p><h5 id="416"><a href="#416" class="headerlink" title="416"></a>416</h5><h6 id="Requested-range-not-satisfied"><a href="#Requested-range-not-satisfied" class="headerlink" title="Requested range not satisfied"></a>Requested range not satisfied</h6><p>####### 客户端请求的范围无效</p><h5 id="417"><a href="#417" class="headerlink" title="417"></a>417</h5><h6 id="Expectation-Failed"><a href="#Expectation-Failed" class="headerlink" title="Expectation Failed"></a>Expectation Failed</h6><p>####### 服务器无法满足Expect的请求头信息</p><h2 id="5"><a href="#5" class="headerlink" title="5**"></a>5**</h2><h3 id="服务器错误，服务器在处理请求的过程中发生了错误"><a href="#服务器错误，服务器在处理请求的过程中发生了错误" class="headerlink" title="服务器错误，服务器在处理请求的过程中发生了错误"></a>服务器错误，服务器在处理请求的过程中发生了错误</h3><h4 id="具体代码-4"><a href="#具体代码-4" class="headerlink" title="具体代码"></a>具体代码</h4><h5 id="500"><a href="#500" class="headerlink" title="500"></a>500</h5><h6 id="Internal-Server-Error"><a href="#Internal-Server-Error" class="headerlink" title="Internal Server Error"></a>Internal Server Error</h6><p>####### 服务器内部错误，无法完成请求</p><h5 id="501"><a href="#501" class="headerlink" title="501"></a>501</h5><h6 id="Not-Implemented"><a href="#Not-Implemented" class="headerlink" title="Not Implemented"></a>Not Implemented</h6><p>####### 服务器不支持请求的功能，无法完成请求</p><h5 id="502"><a href="#502" class="headerlink" title="502"></a>502</h5><h6 id="Bad-Gateway"><a href="#Bad-Gateway" class="headerlink" title="Bad Gateway"></a>Bad Gateway</h6><p>####### 作为网关或者代理工作的服务器尝试执行请求时，从远程服务器接收到了一个无效的响应</p><h5 id="503"><a href="#503" class="headerlink" title="503"></a>503</h5><h6 id="Service-Unavailable"><a href="#Service-Unavailable" class="headerlink" title="Service Unavailable"></a>Service Unavailable</h6><p>####### 由于超载或系统维护，服务器暂时无法处理客户端的请求。延时的长度可包含在服务器的Retry-After头信息中</p><h5 id="504"><a href="#504" class="headerlink" title="504"></a>504</h5><h6 id="Gateway-Timeout"><a href="#Gateway-Timeout" class="headerlink" title="Gateway Timeout"></a>Gateway Timeout</h6><p>####### 充当网关或代理的服务器，未及时从远端服务器获取请求</p><h5 id="505"><a href="#505" class="headerlink" title="505"></a>505</h5><h6 id="HTTP-Version-not-supported"><a href="#HTTP-Version-not-supported" class="headerlink" title="HTTP Version not supported"></a>HTTP Version not supported</h6><p>####### 服务器不支持请求的HTTP协议的版本，无法完成处理</p><hr><p><img src="https://image-static.segmentfault.com/277/378/2773780167-cde6d49cefda2b1f_fix732" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;＠冒泡的马树&lt;/p&gt;
&lt;p&gt;参考文章：&lt;a href=&quot;https://www.runoob.com/http/http-status-codes.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;HTTP状态码 | 菜鸟教程&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;工具：百度脑图&lt;/p&gt;
    
    </summary>
    
    
      <category term="HTTP" scheme="http://lesliewong.cn/categories/HTTP/"/>
    
    
      <category term="HTTP" scheme="http://lesliewong.cn/tags/HTTP/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript专项算法题（3）：闭包</title>
    <link href="http://lesliewong.cn/2020/07/14/JavaScript-functional-algorithms-closures/"/>
    <id>http://lesliewong.cn/2020/07/14/JavaScript-functional-algorithms-closures/</id>
    <published>2020-07-14T11:45:30.000Z</published>
    <updated>2024-01-18T04:40:22.895Z</updated>
    
    <content type="html"><![CDATA[<p>＠冒泡的马树</p><p>题库原地址：<a href="http://csbin.io/closures" target="_blank" rel="noopener">http://csbin.io/closures</a></p><h2 id="闭包、作用域和运行上下文"><a href="#闭包、作用域和运行上下文" class="headerlink" title="闭包、作用域和运行上下文"></a>闭包、作用域和运行上下文</h2><h3 id="挑战1-createFunction"><a href="#挑战1-createFunction" class="headerlink" title="挑战1 createFunction"></a>挑战1 createFunction</h3><p><strong>问题:</strong></p><p>构建createFunction函数，用于创建和返回函数。当被创建的函数被调用时，它会打印“hello”。</p><a id="more"></a> <p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// CHALLENGE 1</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createFunction</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="keyword">const</span> innerFunction = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"hello"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> innerFunction;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*** Uncomment these to check your work! ***/</span></span><br><span class="line"><span class="keyword">const</span> function1 = createFunction();</span><br><span class="line">function1(); <span class="comment">// =&gt; should console.log('hello');</span></span><br></pre></td></tr></table></figure><h3 id="挑战2-createFunctionPrinter"><a href="#挑战2-createFunctionPrinter" class="headerlink" title="挑战2 createFunctionPrinter"></a>挑战2 createFunctionPrinter</h3><p><strong>问题：</strong></p><p>构建接受一个输入值作为参数的createFunctionPrinter函数，用于创建和返回一个特定函数。当特定函数被调用时，其应该打印特定函数被创建时输入createFunctionPrinter中的值。</p><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// CHALLENGE 2</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createFunctionPrinter</span>(<span class="params">input</span>) </span>&#123;</span><br><span class="line"><span class="keyword">const</span> innerValue = input;</span><br><span class="line">  <span class="keyword">const</span> innerFunction = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(innerValue);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> innerFunction;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*** Uncomment these to check your work! ***/</span></span><br><span class="line"><span class="keyword">const</span> printSample = createFunctionPrinter(<span class="string">'sample'</span>);</span><br><span class="line">printSample(); <span class="comment">// =&gt; should console.log('sample');</span></span><br><span class="line"><span class="keyword">const</span> printHello = createFunctionPrinter(<span class="string">'hello'</span>);</span><br><span class="line">printHello(); <span class="comment">// =&gt; should console.log('hello');</span></span><br></pre></td></tr></table></figure><h3 id="挑战3-addByX"><a href="#挑战3-addByX" class="headerlink" title="挑战3 addByX"></a>挑战3 addByX</h3><p><strong>问题：</strong></p><p>观察下面outer函数的实现代码。注意其会返回一个函数而且那个函数使用了不在其作用域的变量。尝试推断一下运行outer函数得到的输出值，然后构建addByX函数，其会返回一个接受一个输入值作为参数并与x相加的函数。</p><p><strong>代码：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// CHALLENGE 3</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">outer</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> counter = <span class="number">0</span>; <span class="comment">// this variable is outside incrementCounter's scope</span></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">incrementCounter</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    counter ++;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'counter'</span>, counter);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> incrementCounter;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> willCounter = outer();</span><br><span class="line"><span class="keyword">const</span> jasCounter = outer();</span><br><span class="line"></span><br><span class="line"><span class="comment">// Uncomment each of these lines one by one.</span></span><br><span class="line"><span class="comment">// Before your do, guess what will be logged from each function call.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*** Uncomment these to check your work! ***/</span></span><br><span class="line">willCounter();</span><br><span class="line">willCounter();</span><br><span class="line">willCounter();</span><br><span class="line"></span><br><span class="line">jasCounter();</span><br><span class="line">willCounter();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">addByX</span>(<span class="params">x</span>) </span>&#123;</span><br><span class="line"><span class="keyword">let</span> backpackValue = x ;</span><br><span class="line">  <span class="keyword">const</span> innerFunction = <span class="function">(<span class="params">el</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> backpackValue + el;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> innerFunction;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*** Uncomment these to check your work! ***/</span></span><br><span class="line"><span class="keyword">const</span> addByTwo = addByX(<span class="number">2</span>);</span><br><span class="line"><span class="built_in">console</span>.log(addByTwo(<span class="number">1</span>)); <span class="comment">// =&gt; should return 3</span></span><br><span class="line"><span class="built_in">console</span>.log(addByTwo(<span class="number">2</span>)); <span class="comment">// =&gt; should return 4</span></span><br><span class="line"><span class="built_in">console</span>.log(addByTwo(<span class="number">3</span>)); <span class="comment">// =&gt; should return 5</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> addByThree = addByX(<span class="number">3</span>);</span><br><span class="line"><span class="built_in">console</span>.log(addByThree(<span class="number">1</span>)); <span class="comment">// =&gt; should return 4</span></span><br><span class="line"><span class="built_in">console</span>.log(addByThree(<span class="number">2</span>)); <span class="comment">// =&gt; should return 5</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> addByFour = addByX(<span class="number">4</span>);</span><br><span class="line"><span class="built_in">console</span>.log(addByFour(<span class="number">4</span>)); <span class="comment">// =&gt; should return 8</span></span><br><span class="line"><span class="built_in">console</span>.log(addByFour(<span class="number">5</span>)); <span class="comment">// =&gt; should return 9</span></span><br></pre></td></tr></table></figure><h3 id="挑战4-once"><a href="#挑战4-once" class="headerlink" title="挑战4 once"></a>挑战4 once</h3><p><strong>问题：</strong></p><p>构建once函数，接受参数为一个回调函数并返回一个特定函数。当特定函数被第一次调用时，其会调用回调函数并返回输出值。如果其不是被第一次调用，则特定函数仅仅返回第一次调用时得到的回调函数返回值，而不是再次运行回调函数。</p><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// CHALLENGE 4</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">once</span>(<span class="params">func</span>) </span>&#123;</span><br><span class="line"><span class="keyword">let</span> counter = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">let</span> innerValue = <span class="number">0</span>; </span><br><span class="line">  <span class="keyword">const</span> innerFunction = <span class="function">(<span class="params">el</span>) =&gt;</span> &#123;</span><br><span class="line">    counter++;</span><br><span class="line">    <span class="keyword">if</span>(counter == <span class="number">1</span>) &#123;</span><br><span class="line">      innerValue = func(el);</span><br><span class="line">      <span class="keyword">return</span> innerValue;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> innerValue;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> innerFunction;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*** Uncomment these to check your work! ***/</span></span><br><span class="line"><span class="keyword">const</span> onceFunc = once(addByTwo);</span><br><span class="line"><span class="built_in">console</span>.log(onceFunc(<span class="number">4</span>));  <span class="comment">// =&gt; should log 6</span></span><br><span class="line"><span class="built_in">console</span>.log(onceFunc(<span class="number">10</span>));  <span class="comment">// =&gt; should log 6</span></span><br><span class="line"><span class="built_in">console</span>.log(onceFunc(<span class="number">9001</span>));  <span class="comment">// =&gt; should log 6</span></span><br></pre></td></tr></table></figure><h3 id="挑战5-after"><a href="#挑战5-after" class="headerlink" title="挑战5 after"></a>挑战5 after</h3><p><strong>问题：</strong></p><p>构建after函数，接受一个数字n和一个回调函数作为参数。回调函数需要在通过after构建的函数运行第n次时才被运行。</p><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// CHALLENGE 5</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">after</span>(<span class="params">count, func</span>) </span>&#123;</span><br><span class="line"><span class="keyword">let</span> counter = count;</span><br><span class="line">  <span class="keyword">const</span> innerFunction = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    counter--;</span><br><span class="line">    <span class="keyword">if</span>(counter == <span class="number">0</span>)&#123;</span><br><span class="line">      func();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> innerFunction;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*** Uncomment these to check your work! ***/</span></span><br><span class="line"><span class="keyword">const</span> called = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; <span class="built_in">console</span>.log(<span class="string">'hello'</span>) &#125;;</span><br><span class="line"><span class="keyword">const</span> afterCalled = after(<span class="number">3</span>, called);</span><br><span class="line">afterCalled(); <span class="comment">// =&gt; nothing is printed</span></span><br><span class="line">afterCalled(); <span class="comment">// =&gt; nothing is printed</span></span><br><span class="line">afterCalled(); <span class="comment">// =&gt; 'hello' is printed</span></span><br></pre></td></tr></table></figure><h3 id="挑战6-delay"><a href="#挑战6-delay" class="headerlink" title="挑战6 delay"></a>挑战6 delay</h3><p><strong>问题：</strong></p><p>构建delay函数，接受一个回调函数作为第一个参数，一个数值n（单位为毫秒）作为第二个参数。delay函数被调用后，须经n毫秒后才运行回调函数。任何其他赋给特定函数的参数会在n毫秒后被回调函数使用。提示：研究setTimeout();</p><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// CHALLENGE 6</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">delay</span>(<span class="params">func, wait, ...args</span>) </span>&#123;</span><br><span class="line">  setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> func(...args), wait);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">delay(called, <span class="number">2000</span>);  <span class="comment">// "hello" after 2 seconds.</span></span><br></pre></td></tr></table></figure><h3 id="挑战7-rollCall"><a href="#挑战7-rollCall" class="headerlink" title="挑战7 rollCall"></a>挑战7 rollCall</h3><p><strong>问题：</strong></p><p>构建rollCall函数，接受一个由名字组成的数组，返回一个特定函数。第一次调用特定函数时，其会打印数组的第一个名字。第二次调用时，打印第二个名字，一直下去，直到所有名字都被打印。当所有名字都被打印后，其会打印“Everyone accounted for”。</p><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// CHALLENGE 7</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">rollCall</span>(<span class="params">names</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> innerArray = <span class="keyword">new</span> <span class="built_in">Array</span>;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">0</span>; i&lt;names.length; i++)&#123;</span><br><span class="line">    innerArray[i] = names[i];</span><br><span class="line">  &#125;</span><br><span class="line"><span class="keyword">const</span> innerFunction = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line"><span class="keyword">if</span>(innerArray.length == <span class="number">0</span>)&#123;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">"Everyone accounted for"</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(innerArray.shift());</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> innerFunction;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*** Uncomment these to check your work! ***/</span></span><br><span class="line"><span class="keyword">const</span> rollCaller = rollCall([<span class="string">'Victoria'</span>, <span class="string">'Juan'</span>, <span class="string">'Ruth'</span>])</span><br><span class="line">rollCaller() <span class="comment">// =&gt; should log 'Victoria'</span></span><br><span class="line">rollCaller() <span class="comment">// =&gt; should log 'Juan'</span></span><br><span class="line">rollCaller() <span class="comment">// =&gt; should log 'Ruth'</span></span><br><span class="line">rollCaller() <span class="comment">// =&gt; should log 'Everyone accounted for'</span></span><br></pre></td></tr></table></figure><h3 id="挑战8-saveOutput"><a href="#挑战8-saveOutput" class="headerlink" title="挑战8 saveOutput"></a>挑战8 saveOutput</h3><p><strong>问题：</strong></p><p>构建saveOutput函数，接受一个回调函数（其接受一个参数）和一个字符串（充当密码）作为参数。saveOutput会返回一个特定函数，其作用与回调函数类似，只是当它的字符串参数与saveOutput函数的密码字符串参数相同时，特定函数会利用先前所有调用特定函数时的输入值作为对象的键，对应回调函数的输出值作为值，构建一个对象，并返回之。</p><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// CHALLENGE 8</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">saveOutput</span>(<span class="params">func, magicWord</span>) </span>&#123;</span><br><span class="line"><span class="keyword">const</span> storedMagicWord = magicWord;</span><br><span class="line">  <span class="keyword">const</span> storedInputArray = <span class="keyword">new</span> <span class="built_in">Array</span>;</span><br><span class="line">  <span class="keyword">const</span> storedOutputArray = <span class="keyword">new</span> <span class="built_in">Array</span>;</span><br><span class="line">  <span class="keyword">const</span> exitObject = <span class="keyword">new</span> <span class="built_in">Object</span>;</span><br><span class="line">  <span class="keyword">let</span> tempOutput = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">const</span> innerFunction = <span class="function">(<span class="params">el</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span>(el !== storedMagicWord) &#123;</span><br><span class="line">      storedInputArray.push(el);</span><br><span class="line">      tempOutput = func(el);</span><br><span class="line">      storedOutputArray.push(tempOutput);</span><br><span class="line">      <span class="keyword">return</span> tempOutput;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">if</span>(storedInputArray.length == storedOutputArray.length) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">0</span>; i&lt;storedInputArray.length; i++)&#123;</span><br><span class="line">    exitObject[storedInputArray[i]]=storedOutputArray[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> exitObject;</span><br><span class="line">      &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'error'</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> innerFunction;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*** Uncomment these to check your work! ***/</span></span><br><span class="line"><span class="keyword">const</span> multiplyBy2 = <span class="function"><span class="keyword">function</span>(<span class="params">num</span>) </span>&#123; <span class="keyword">return</span> num * <span class="number">2</span>; &#125;;</span><br><span class="line"><span class="keyword">const</span> multBy2AndLog = saveOutput(multiplyBy2, <span class="string">'boo'</span>);</span><br><span class="line"><span class="built_in">console</span>.log(multBy2AndLog(<span class="number">2</span>)); <span class="comment">// =&gt; should log 4</span></span><br><span class="line"><span class="built_in">console</span>.log(multBy2AndLog(<span class="number">9</span>)); <span class="comment">// =&gt; should log 18</span></span><br><span class="line"><span class="built_in">console</span>.log(multBy2AndLog(<span class="string">'boo'</span>)); <span class="comment">// =&gt; should log &#123; 2: 4, 9: 18 &#125;</span></span><br></pre></td></tr></table></figure><h3 id="挑战9-cycleIterator"><a href="#挑战9-cycleIterator" class="headerlink" title="挑战9 cycleIterator"></a>挑战9 cycleIterator</h3><p><strong>问题：</strong></p><p>构建cycleIterator函数，接受参数为一个数组并返回一个特定函数。特定函数不接受参数。当第一次调用时，特定函数返回数组的第一个元素。第二次调用时，返回第二个元素，一直下去。当特定函数已返回数组的最后一个元素后，下一次调用此特定函数时其返回数组的第一个元素，然后第二个元素，一直下去。</p><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// CHALLENGE 9</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">cycleIterator</span>(<span class="params">array</span>) </span>&#123;</span><br><span class="line"><span class="keyword">let</span> counter = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">const</span> innerFunction = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">counter++;</span><br><span class="line">    <span class="keyword">if</span>(counter &gt; array.length)&#123;</span><br><span class="line">      counter = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">return</span> array[counter];</span><br><span class="line">    &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="keyword">return</span> array[counter<span class="number">-1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> innerFunction;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*** Uncomment these to check your work! ***/</span></span><br><span class="line"><span class="keyword">const</span> threeDayWeekend = [<span class="string">'Fri'</span>, <span class="string">'Sat'</span>, <span class="string">'Sun'</span>];</span><br><span class="line"><span class="keyword">const</span> getDay = cycleIterator(threeDayWeekend);</span><br><span class="line"><span class="built_in">console</span>.log(getDay()); <span class="comment">// =&gt; should log 'Fri'</span></span><br><span class="line"><span class="built_in">console</span>.log(getDay()); <span class="comment">// =&gt; should log 'Sat'</span></span><br><span class="line"><span class="built_in">console</span>.log(getDay()); <span class="comment">// =&gt; should log 'Sun'</span></span><br><span class="line"><span class="built_in">console</span>.log(getDay()); <span class="comment">// =&gt; should log 'Fri'</span></span><br></pre></td></tr></table></figure><h3 id="挑战10-defineFirstArg"><a href="#挑战10-defineFirstArg" class="headerlink" title="挑战10 defineFirstArg"></a>挑战10 defineFirstArg</h3><p><strong>问题：</strong></p><p>构建defineFirstArg函数，接受参数为一个回调函数和一个数值。回调函数接受至少一个参数。defineFirstArg会返回一个特定函数。此特定函数会将defineFirstArg的数值参数作为回调函数的第一个参数，输入到特定函数的参数作为回调函数的第二个参数，并调用回调函数。</p><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// CHALLENGE 10</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">defineFirstArg</span>(<span class="params">func, arg</span>) </span>&#123;</span><br><span class="line"><span class="keyword">const</span> innerFunction = <span class="function">(<span class="params">el</span>) =&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> func(arg, el);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> innerFunction;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*** Uncomment these to check your work! ***/</span></span><br><span class="line"><span class="keyword">const</span> subtract = <span class="function"><span class="keyword">function</span>(<span class="params">big, small</span>) </span>&#123; <span class="keyword">return</span> big - small; &#125;;</span><br><span class="line"><span class="keyword">const</span> subFrom20 = defineFirstArg(subtract, <span class="number">20</span>);</span><br><span class="line"><span class="built_in">console</span>.log(subFrom20(<span class="number">5</span>)); <span class="comment">// =&gt; should log 15</span></span><br></pre></td></tr></table></figure><h3 id="挑战11-dateStamp"><a href="#挑战11-dateStamp" class="headerlink" title="挑战11 dateStamp"></a>挑战11 dateStamp</h3><p><strong>问题：</strong></p><p>构建dateStamp函数，接受参数为一个回调函数并返回一个特定函数。特定函数会接受回调函数所需要的参数并传给回调函数，返回一个对象记录特定函数被调用时的日期信息（date键）以及回调函数的输出（output键）。提示：你可能需要研究一下如何获取Date对象中的信息。</p><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// CHALLENGE 11</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">dateStamp</span>(<span class="params">func</span>) </span>&#123;</span><br><span class="line"><span class="keyword">let</span> dateInfo;</span><br><span class="line">  <span class="keyword">const</span> innerObj = <span class="keyword">new</span> <span class="built_in">Object</span>;</span><br><span class="line">  <span class="keyword">const</span> innerFunction = <span class="function">(<span class="params">el</span>) =&gt;</span> &#123;</span><br><span class="line">    dateInfo = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">    innerObj[<span class="string">'date'</span>] = dateInfo.toString();</span><br><span class="line">    innerObj[<span class="string">'output'</span>] = func(el);</span><br><span class="line">    <span class="keyword">return</span> innerObj;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> innerFunction;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*** Uncomment these to check your work! ***/</span></span><br><span class="line"><span class="keyword">const</span> stampedMultBy2 = dateStamp(<span class="function"><span class="params">n</span> =&gt;</span> n * <span class="number">2</span>);</span><br><span class="line"><span class="built_in">console</span>.log(stampedMultBy2(<span class="number">4</span>)); <span class="comment">// =&gt; should log &#123; date: (today's date), output: 8 &#125;</span></span><br><span class="line"><span class="built_in">console</span>.log(stampedMultBy2(<span class="number">6</span>)); <span class="comment">// =&gt; should log &#123; date: (today's date), output: 12 &#125;</span></span><br></pre></td></tr></table></figure><h3 id="挑战12-censor"><a href="#挑战12-censor" class="headerlink" title="挑战12 censor"></a>挑战12 censor</h3><p><strong>问题：</strong></p><p>构建censor函数，不接受参数。censor会返回一个接受两个字符串或单个字符串参数的特定函数。当得到两个字符串参数时，特定函数会存储两个字符串作为一对，以备后续使用。当得到一个字符串参数时，特定函数会返回同样的字符串，只是此字符串中与存储字符串对的第一个字符串相同的字符串会被替换成存储字符串对中的第二个字符串。</p><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// CHALLENGE 12</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">censor</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> parameterInfoObj = <span class="keyword">new</span> <span class="built_in">Object</span>;</span><br><span class="line">  <span class="keyword">let</span> oneParameterArray = <span class="keyword">new</span> <span class="built_in">Array</span>;</span><br><span class="line">  <span class="keyword">let</span> punctuationArray = <span class="keyword">new</span> <span class="built_in">Array</span>;</span><br><span class="line"><span class="keyword">const</span> innerFunc = <span class="function">(<span class="params">el1, el2</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span>(el1 &amp;&amp; el2) &#123;</span><br><span class="line">      oneParameterArray = [];</span><br><span class="line">      punctuationArray = [];</span><br><span class="line">      parameterInfoObj[el1] = el2;</span><br><span class="line">      <span class="keyword">return</span> parameterInfoObj;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(el1 &amp;&amp; !el2)&#123;</span><br><span class="line">      oneParameterArray = el1.match(<span class="regexp">/\b(\w+)\b/g</span>);</span><br><span class="line">      punctuationArray = el1.match(<span class="regexp">/([,. ]+)/g</span>);</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>; i&lt;oneParameterArray.length; i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">let</span> key <span class="keyword">in</span> parameterInfoObj)&#123;</span><br><span class="line">          <span class="keyword">if</span>(key === oneParameterArray[i])&#123;</span><br><span class="line">            oneParameterArray[i] = parameterInfoObj[key];</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i =<span class="number">0</span>; i&lt;oneParameterArray.length; i++)&#123;</span><br><span class="line">        oneParameterArray[i] += punctuationArray[i]; </span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> oneParameterArray.join(<span class="string">""</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> innerFunc;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*** Uncomment these to check your work! ***/</span></span><br><span class="line"><span class="keyword">const</span> changeScene = censor();</span><br><span class="line">changeScene(<span class="string">'dogs'</span>, <span class="string">'cats'</span>);</span><br><span class="line">changeScene(<span class="string">'quick'</span>, <span class="string">'slow'</span>);</span><br><span class="line"><span class="built_in">console</span>.log(changeScene(<span class="string">'The quick, brown fox jumps over the lazy dogs.'</span>)); <span class="comment">// =&gt; should log 'The slow, brown fox jumps over the lazy cats.'</span></span><br></pre></td></tr></table></figure><h3 id="挑战13-createSecretHolder"><a href="#挑战13-createSecretHolder" class="headerlink" title="挑战13 createSecretHolder"></a>挑战13 createSecretHolder</h3><p><strong>问题：</strong></p><p>JavaScript对象中并没有私有属性的定义，然而或许可以自定义一个？构建createSecretHolder(secret)函数，接受任何值作为secret参数，并且仅返回两个方法，返回secret值的getSecret()和设置secret值的setSecret()。</p><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// CHALLENGE 13</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createSecretHolder</span>(<span class="params">secret</span>) </span>&#123;</span><br><span class="line"><span class="keyword">let</span> secretInfo = secret;</span><br><span class="line">  <span class="keyword">const</span> innerObj = <span class="keyword">new</span> <span class="built_in">Object</span>;</span><br><span class="line">  innerObj.getSecret = <span class="function"><span class="params">()</span>=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> secretInfo;</span><br><span class="line">  &#125;</span><br><span class="line">  innerObj.setSecret = <span class="function">(<span class="params">el</span>)=&gt;</span>&#123;</span><br><span class="line">    secretInfo = el;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> innerObj;</span><br><span class="line">  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*** Uncomment these to check your work! ***/</span></span><br><span class="line"><span class="keyword">const</span> obj = createSecretHolder(<span class="number">5</span>)</span><br><span class="line"><span class="built_in">console</span>.log(obj.getSecret()) <span class="comment">// =&gt; returns 5</span></span><br><span class="line"><span class="built_in">console</span>.log(obj.setSecret(<span class="number">2</span>)) <span class="comment">// =&gt; undefined</span></span><br><span class="line"><span class="built_in">console</span>.log(obj.getSecret()) <span class="comment">// =&gt; returns 2</span></span><br></pre></td></tr></table></figure><h3 id="挑战14-callTimes"><a href="#挑战14-callTimes" class="headerlink" title="挑战14 callTimes"></a>挑战14 callTimes</h3><p><strong>问题：</strong></p><p>构建callTimes函数，返回一个特定函数。特定函数应返回它被调用的次数信息。</p><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// CHALLENGE 14</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">callTimes</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="keyword">let</span> counter = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">const</span> innerFunction = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> ++counter;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> innerFunction;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*** Uncomment these to check your work! ***/</span></span><br><span class="line"><span class="keyword">let</span> myNewFunc1 = callTimes();</span><br><span class="line"><span class="keyword">let</span> myNewFunc2 = callTimes();</span><br><span class="line"><span class="built_in">console</span>.log(myNewFunc1()); <span class="comment">// =&gt; 1</span></span><br><span class="line"><span class="built_in">console</span>.log(myNewFunc1()); <span class="comment">// =&gt; 2</span></span><br><span class="line"><span class="built_in">console</span>.log(myNewFunc2()); <span class="comment">// =&gt; 1</span></span><br><span class="line"><span class="built_in">console</span>.log(myNewFunc2()); <span class="comment">// =&gt; 2</span></span><br></pre></td></tr></table></figure><h3 id="挑战15-russianRoulette"><a href="#挑战15-russianRoulette" class="headerlink" title="挑战15 russianRoulette"></a>挑战15 russianRoulette</h3><p><strong>问题：</strong></p><p>构建russianRoulette函数，作用为接受一个数值参数（假设为n）并返回一个特定函数。此特定函数不接受输入参数，而且会在前n-1次调用时返回字符串“click“，在第n次调用时则返回字符串”bang“，n次以后再调用皆返回字符串”reload to play again”。</p><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// CHALLENGE 15</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">russianRoulette</span>(<span class="params">num</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> counter = num;</span><br><span class="line">    <span class="keyword">const</span> innerFunction = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">      counter--;</span><br><span class="line">      <span class="keyword">if</span>(counter&gt;<span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"click"</span>;</span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span>(counter==<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"bang"</span>;</span><br><span class="line">      &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"reload to play again"</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> innerFunction; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*** Uncomment these to check your work! ***/</span></span><br><span class="line"><span class="keyword">const</span> play = russianRoulette(<span class="number">3</span>);</span><br><span class="line"><span class="built_in">console</span>.log(play()); <span class="comment">// =&gt; should log 'click'</span></span><br><span class="line"><span class="built_in">console</span>.log(play()); <span class="comment">// =&gt; should log 'click'</span></span><br><span class="line"><span class="built_in">console</span>.log(play()); <span class="comment">// =&gt; should log 'bang'</span></span><br><span class="line"><span class="built_in">console</span>.log(play()); <span class="comment">// =&gt; should log 'reload to play again'</span></span><br><span class="line"><span class="built_in">console</span>.log(play()); <span class="comment">// =&gt; should log 'reload to play again'</span></span><br></pre></td></tr></table></figure><h3 id="挑战16-average"><a href="#挑战16-average" class="headerlink" title="挑战16 average"></a>挑战16 average</h3><p><strong>问题：</strong></p><p>构建average函数，不接受参数，并返回一个特定函数（接受一个数值作为参数或无参数）。当average创建的特定函数被输入数值参数的方式调用时，返回值为所有曾经被输入到特定函数的数值参数的平均值（重复数值视为分别的数值）。当特定函数被无参数的方式调用时，返回当前的平均值。如果特定函数在无参数方式调用时不曾被输入数值参数的方式调用过，则返回0。</p><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// CHALLENGE 16</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">average</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> averageValue = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">let</span> argumentCounter = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">let</span> argumentSum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">const</span> innerFunction = <span class="function">(<span class="params">el</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span>(el == <span class="literal">undefined</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> averageValue;</span><br><span class="line">      &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">        argumentCounter++;</span><br><span class="line">        argumentSum += el; </span><br><span class="line">        averageValue = argumentSum / argumentCounter;</span><br><span class="line">        <span class="keyword">return</span> averageValue;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> innerFunction;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*** Uncomment these to check your work! ***/</span></span><br><span class="line"><span class="keyword">const</span> avgSoFar = average();</span><br><span class="line"><span class="built_in">console</span>.log(avgSoFar()); <span class="comment">// =&gt; should log 0</span></span><br><span class="line"><span class="built_in">console</span>.log(avgSoFar(<span class="number">4</span>)); <span class="comment">// =&gt; should log 4</span></span><br><span class="line"><span class="built_in">console</span>.log(avgSoFar(<span class="number">8</span>)); <span class="comment">// =&gt; should log 6</span></span><br><span class="line"><span class="built_in">console</span>.log(avgSoFar()); <span class="comment">// =&gt; should log 6</span></span><br><span class="line"><span class="built_in">console</span>.log(avgSoFar(<span class="number">12</span>)); <span class="comment">// =&gt; should log 8</span></span><br><span class="line"><span class="built_in">console</span>.log(avgSoFar()); <span class="comment">// =&gt; should log 8</span></span><br></pre></td></tr></table></figure><h3 id="挑战17-makeFuncTester"><a href="#挑战17-makeFuncTester" class="headerlink" title="挑战17 makeFuncTester"></a>挑战17 makeFuncTester</h3><p><strong>问题：</strong></p><p>构建makeFuncTester函数，接受参数为一个二维数组（其中第二维数组仅含两个元素），返回一个接收回调函数作为参数的特定函数。当二维数组的每一个子数组的第一个元素输入到回调函数时都产生与第二个元素相同的返回值时，特定函数返回ture，否则特定函数返回false。</p><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// CHALLENGE 17</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">makeFuncTester</span>(<span class="params">arrOfTests</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> firstLayerArray = [];</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>; i&lt;arrOfTests.length; i++)&#123;</span><br><span class="line">    <span class="keyword">let</span> secondLayerArray = [];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> j = <span class="number">0</span>; j&lt;arrOfTests[i].length; j++)&#123;</span><br><span class="line">      secondLayerArray.push(arrOfTests[i][j]);</span><br><span class="line">    &#125;</span><br><span class="line">    firstLayerArray.push(secondLayerArray);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">const</span> innerFunction = <span class="function">(<span class="params">callback</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">0</span>; i&lt;firstLayerArray.length; i++)&#123;</span><br><span class="line">      <span class="keyword">if</span>(callback(firstLayerArray[i][<span class="number">0</span>]) !== firstLayerArray[i][<span class="number">1</span>])&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> innerFunction;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*** Uncomment these to check your work! ***/</span></span><br><span class="line"><span class="keyword">const</span> capLastTestCases = [];</span><br><span class="line">capLastTestCases.push([<span class="string">'hello'</span>, <span class="string">'hellO'</span>]);</span><br><span class="line">capLastTestCases.push([<span class="string">'goodbye'</span>, <span class="string">'goodbyE'</span>]);</span><br><span class="line">capLastTestCases.push([<span class="string">'howdy'</span>, <span class="string">'howdY'</span>]);</span><br><span class="line"><span class="keyword">const</span> shouldCapitalizeLast = makeFuncTester(capLastTestCases);</span><br><span class="line"><span class="keyword">const</span> capLastAttempt1 = <span class="function"><span class="params">str</span> =&gt;</span> str.toUpperCase();</span><br><span class="line"><span class="keyword">const</span> capLastAttempt2 = <span class="function"><span class="params">str</span> =&gt;</span> str.slice(<span class="number">0</span>, <span class="number">-1</span>) + str.slice(<span class="number">-1</span>).toUpperCase();</span><br><span class="line"><span class="built_in">console</span>.log(shouldCapitalizeLast(capLastAttempt1)); <span class="comment">// =&gt; should log false</span></span><br><span class="line"><span class="built_in">console</span>.log(shouldCapitalizeLast(capLastAttempt2)); <span class="comment">// =&gt; should log true</span></span><br></pre></td></tr></table></figure><h3 id="挑战18-makeHistory"><a href="#挑战18-makeHistory" class="headerlink" title="挑战18 makeHistory"></a>挑战18 makeHistory</h3><p><strong>问题：</strong></p><p>构建makeHistory函数，接受一个数值参数n（充当限定值）并返回一个特定函数（接受字符串作为参数）。特定函数会存储限定个数为n的最近输入到此特定函数中的字符串参数历史（每次调用存储一次）。每次一个字符串被输入到特定函数中，特定函数会返回拼接“done”于此字符串后的新字符串（空格作为间隔）。然而，如果输入字符串为“undo”，特定函数会删除字符串参数历史中的最近字符串值，返回拼接“undone”于此最近字符串后的新字符串（空格作为间隔）。如果输入字符串“undo”时特定函数中的字符串参数历史已为空，那么特定函数会返回字符串“nothing to undo”。</p><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// CHALLENGE 18</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">makeHistory</span>(<span class="params">limit</span>) </span>&#123;</span><br><span class="line"><span class="keyword">const</span> limitNumber = limit; </span><br><span class="line">  <span class="keyword">let</span> parameterStack = [];</span><br><span class="line">  <span class="keyword">const</span> innerFunction = <span class="function">(<span class="params">stringElement</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span>(stringElement === <span class="string">"undo"</span>)&#123;</span><br><span class="line">      <span class="keyword">if</span>(parameterStack.length == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"nothing to undo"</span>;</span><br><span class="line">      &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;parameterStack.pop()&#125;</span> undone`</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">      parameterStack.push(stringElement);</span><br><span class="line">      <span class="keyword">if</span>(parameterStack.length &gt; limit)&#123;</span><br><span class="line">        parameterStack = parameterStack.slice(-limit);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;stringElement&#125;</span> done`</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> innerFunction;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*** Uncomment these to check your work! ***/</span></span><br><span class="line"><span class="keyword">const</span> myActions = makeHistory(<span class="number">2</span>);</span><br><span class="line"><span class="built_in">console</span>.log(myActions(<span class="string">'jump'</span>)); <span class="comment">// =&gt; should log 'jump done'</span></span><br><span class="line"><span class="built_in">console</span>.log(myActions(<span class="string">'undo'</span>)); <span class="comment">// =&gt; should log 'jump undone'</span></span><br><span class="line"><span class="built_in">console</span>.log(myActions(<span class="string">'walk'</span>)); <span class="comment">// =&gt; should log 'walk done'</span></span><br><span class="line"><span class="built_in">console</span>.log(myActions(<span class="string">'code'</span>)); <span class="comment">// =&gt; should log 'code done'</span></span><br><span class="line"><span class="built_in">console</span>.log(myActions(<span class="string">'pose'</span>)); <span class="comment">// =&gt; should log 'pose done'</span></span><br><span class="line"><span class="built_in">console</span>.log(myActions(<span class="string">'undo'</span>)); <span class="comment">// =&gt; should log 'pose undone'</span></span><br><span class="line"><span class="built_in">console</span>.log(myActions(<span class="string">'undo'</span>)); <span class="comment">// =&gt; should log 'code undone'</span></span><br><span class="line"><span class="built_in">console</span>.log(myActions(<span class="string">'undo'</span>)); <span class="comment">// =&gt; should log 'nothing to undo'</span></span><br></pre></td></tr></table></figure><h3 id="挑战19-blackjack"><a href="#挑战19-blackjack" class="headerlink" title="挑战19 blackjack"></a>挑战19 blackjack</h3><p><strong>问题：</strong></p><p><em>仔细观察测试代码如果你需要帮忙来理解下面的算法描述。</em></p><p>构建blackjack函数，接受参数为一个数组（元素皆为从1到11的数值），返回一个DEALER函数。 DEALER函数会接受两个参数（皆为数值），然后返回一个另外的PLAYER函数。</p><p>在第一次调用PLAYER函数时，它会返回输入DEALER函数中的两个数值参数之和。</p><p>在第二次调用PLAYER函数时，它会返回下列两种情况中的一种：</p><ol><li>输入blackjack函数的数值型数组的第一个数值加上输入DEALER函数中的两个数值参数之和得到的和，如果和小于等于21，返回此和；</li><li>如果和大于21，返回字符串“bust”。</li></ol><p>如果第二次调用PLAYER函数时已返回”bust”，则接下来PLAYER函数的每次调用皆会返回字符串“you are done!”（不过不同于“bust”，输出”you are done!“时不会使用数值型数组中的数值)。如果第二次调用PLAYER函数时并未返回”bust“，则接下来调用PLAYER函数时会返回下列两种情况中的一种：</p><ol><li>最近一次的和值加上数值型数组的下一个数值元素，如果这个求和结果小于等于21的话，返回此和；</li><li>返回“bust”如果求和结果大于21。</li></ol><p>再次声明，如果其返回”bust”，则接下来PLAYER函数的每次调用皆会返回字符串“you are done!”，否则，PLAYER函数会继续使用最近一次和值与数值型数组的下一个数值元素求和，一直下去。</p><p>你可以假设给定的数值型数组有足够多的数值元素从而会在用完数组元素之前得到“bust”。</p><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// CHALLENGE 19</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">blackjack</span>(<span class="params">array</span>) </span>&#123;</span><br><span class="line"><span class="keyword">const</span> dealer = <span class="function">(<span class="params">num1, num2</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> first = <span class="literal">true</span>; </span><br><span class="line">    <span class="keyword">let</span> bust = <span class="literal">false</span>; </span><br><span class="line">    <span class="keyword">let</span> sum = num1 + num2; </span><br><span class="line">    <span class="keyword">const</span> player = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span>(first) &#123;</span><br><span class="line">        first = <span class="literal">false</span>; </span><br><span class="line">        <span class="keyword">return</span> sum;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span>(bust) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"you are done!"</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span>(sum + array[<span class="number">0</span>] &lt;= <span class="number">21</span>)&#123;</span><br><span class="line">        sum += array.shift();</span><br><span class="line">        <span class="keyword">return</span> sum;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        array.shift();</span><br><span class="line">        bust = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"bust"</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> player;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> dealer;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*** Uncomment these to check your work! ***/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*** DEALER ***/</span></span><br><span class="line"><span class="keyword">const</span> deal = blackjack([<span class="number">2</span>, <span class="number">6</span>, <span class="number">1</span>, <span class="number">7</span>, <span class="number">11</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">3</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">3</span>, <span class="number">10</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">3</span>, <span class="number">7</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">6</span>, <span class="number">10</span>, <span class="number">11</span>]);</span><br><span class="line"></span><br><span class="line"><span class="comment">/*** PLAYER 1 ***/</span></span><br><span class="line"><span class="keyword">const</span> i_like_to_live_dangerously = deal(<span class="number">4</span>, <span class="number">5</span>);</span><br><span class="line"><span class="built_in">console</span>.log(i_like_to_live_dangerously()); <span class="comment">// =&gt; should log 9</span></span><br><span class="line"><span class="built_in">console</span>.log(i_like_to_live_dangerously()); <span class="comment">// =&gt; should log 11</span></span><br><span class="line"><span class="built_in">console</span>.log(i_like_to_live_dangerously()); <span class="comment">// =&gt; should log 17</span></span><br><span class="line"><span class="built_in">console</span>.log(i_like_to_live_dangerously()); <span class="comment">// =&gt; should log 18</span></span><br><span class="line"><span class="built_in">console</span>.log(i_like_to_live_dangerously()); <span class="comment">// =&gt; should log 'bust'</span></span><br><span class="line"><span class="built_in">console</span>.log(i_like_to_live_dangerously()); <span class="comment">// =&gt; should log 'you are done!'</span></span><br><span class="line"><span class="built_in">console</span>.log(i_like_to_live_dangerously()); <span class="comment">// =&gt; should log 'you are done!'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*** BELOW LINES ARE FOR THE BONUS ***/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*** PLAYER 2 ***/</span></span><br><span class="line"><span class="keyword">const</span> i_TOO_like_to_live_dangerously = deal(<span class="number">2</span>, <span class="number">2</span>);</span><br><span class="line"><span class="built_in">console</span>.log(i_TOO_like_to_live_dangerously()); <span class="comment">// =&gt; should log 4</span></span><br><span class="line"><span class="built_in">console</span>.log(i_TOO_like_to_live_dangerously()); <span class="comment">// =&gt; should log 15</span></span><br><span class="line"><span class="built_in">console</span>.log(i_TOO_like_to_live_dangerously()); <span class="comment">// =&gt; should log 19</span></span><br><span class="line"><span class="built_in">console</span>.log(i_TOO_like_to_live_dangerously()); <span class="comment">// =&gt; should log 'bust'</span></span><br><span class="line"><span class="built_in">console</span>.log(i_TOO_like_to_live_dangerously()); <span class="comment">// =&gt; should log 'you are done!</span></span><br><span class="line"><span class="built_in">console</span>.log(i_TOO_like_to_live_dangerously()); <span class="comment">// =&gt; should log 'you are done!</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*** PLAYER 3 ***/</span></span><br><span class="line"><span class="keyword">const</span> i_ALSO_like_to_live_dangerously = deal(<span class="number">3</span>, <span class="number">7</span>);</span><br><span class="line"><span class="built_in">console</span>.log(i_ALSO_like_to_live_dangerously()); <span class="comment">// =&gt; should log 10</span></span><br><span class="line"><span class="built_in">console</span>.log(i_ALSO_like_to_live_dangerously()); <span class="comment">// =&gt; should log 13</span></span><br><span class="line"><span class="built_in">console</span>.log(i_ALSO_like_to_live_dangerously()); <span class="comment">// =&gt; should log 'bust'</span></span><br><span class="line"><span class="built_in">console</span>.log(i_ALSO_like_to_live_dangerously()); <span class="comment">// =&gt; should log 'you are done!</span></span><br><span class="line"><span class="built_in">console</span>.log(i_ALSO_like_to_live_dangerously()); <span class="comment">// =&gt; should log 'you are done!'</span></span><br></pre></td></tr></table></figure><hr><p><img src="https://image-static.segmentfault.com/357/720/357720668-6f0a23916687d0c6_fix732" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;＠冒泡的马树&lt;/p&gt;
&lt;p&gt;题库原地址：&lt;a href=&quot;http://csbin.io/closures&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://csbin.io/closures&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;闭包、作用域和运行上下文&quot;&gt;&lt;a href=&quot;#闭包、作用域和运行上下文&quot; class=&quot;headerlink&quot; title=&quot;闭包、作用域和运行上下文&quot;&gt;&lt;/a&gt;闭包、作用域和运行上下文&lt;/h2&gt;&lt;h3 id=&quot;挑战1-createFunction&quot;&gt;&lt;a href=&quot;#挑战1-createFunction&quot; class=&quot;headerlink&quot; title=&quot;挑战1 createFunction&quot;&gt;&lt;/a&gt;挑战1 createFunction&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;问题:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;构建createFunction函数，用于创建和返回函数。当被创建的函数被调用时，它会打印“hello”。&lt;/p&gt;
    
    </summary>
    
    
      <category term="JavaScript" scheme="http://lesliewong.cn/categories/JavaScript/"/>
    
      <category term="算法" scheme="http://lesliewong.cn/categories/JavaScript/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="JavaScript" scheme="http://lesliewong.cn/tags/JavaScript/"/>
    
      <category term="算法" scheme="http://lesliewong.cn/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript专项算法题（2）：函数式编程</title>
    <link href="http://lesliewong.cn/2020/07/11/JavaScript-functional-algorithms-functional-programing/"/>
    <id>http://lesliewong.cn/2020/07/11/JavaScript-functional-algorithms-functional-programing/</id>
    <published>2020-07-11T12:45:30.000Z</published>
    <updated>2024-01-18T04:37:54.515Z</updated>
    
    <content type="html"><![CDATA[<p>＠冒泡的马树</p><p>题库原地址：<a href="http://csbin.io/functional" target="_blank" rel="noopener">http://csbin.io/functional</a></p><h2 id="高阶函数"><a href="#高阶函数" class="headerlink" title="高阶函数"></a>高阶函数</h2><h3 id="挑战1-addTwo"><a href="#挑战1-addTwo" class="headerlink" title="挑战1 addTwo"></a>挑战1 addTwo</h3><p><strong>问题：</strong></p><p>构建一个addTwo函数，作用为接受一个参数并将参数加2。</p><a id="more"></a> <p><strong>题解：</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Challenge 1</span></span><br><span class="line"><span class="keyword">const</span> addTwo = <span class="function">(<span class="params">num</span>) =&gt;</span> &#123;</span><br><span class="line"><span class="keyword">return</span> num + <span class="number">2</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// To check if you've completed this function, uncomment these console.logs!</span></span><br><span class="line"><span class="built_in">console</span>.log(addTwo(<span class="number">3</span>));</span><br><span class="line"><span class="built_in">console</span>.log(addTwo(<span class="number">10</span>));</span><br></pre></td></tr></table></figure><h3 id="挑战2-addS"><a href="#挑战2-addS" class="headerlink" title="挑战2 addS"></a>挑战2 addS</h3><p><strong>问题：</strong></p><p>构建一个addS函数，作用为接受一个参数并将参数与“s”拼接。</p><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Challenge 2</span></span><br><span class="line"><span class="keyword">const</span> addS = <span class="function">(<span class="params">word</span>) =&gt;</span> &#123;</span><br><span class="line"><span class="keyword">return</span> word.toString() + <span class="string">'s'</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Uncomment these to check your work</span></span><br><span class="line"><span class="built_in">console</span>.log(addS(<span class="string">'pizza'</span>));</span><br><span class="line"><span class="built_in">console</span>.log(addS(<span class="string">'bagel'</span>));</span><br></pre></td></tr></table></figure><h3 id="挑战3-map"><a href="#挑战3-map" class="headerlink" title="挑战3 map"></a>挑战3 map</h3><p><strong>问题：</strong></p><p>构建一个map函数，其接受两个参数：</p><ol><li>数值型数组</li><li>回调函数——一个应用于上述数值型数组中的每一个元素的函数（于map函数内）</li></ol><p>map函数的返回值为包含上述数值型数组元素逐个运行回调函数后生成的元素值的新数组。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">map([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>], multiplyByTwo); <span class="comment">//-&gt; [2,4,6,8,10]</span></span><br><span class="line">multiplyByTwo(<span class="number">1</span>); <span class="comment">//-&gt; 2</span></span><br><span class="line">multiplyByTwo(<span class="number">2</span>); <span class="comment">//-&gt; 4</span></span><br></pre></td></tr></table></figure><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Challenge 3</span></span><br><span class="line"><span class="keyword">const</span> map = <span class="function">(<span class="params">array, callback</span>) =&gt;</span> &#123;</span><br><span class="line"><span class="keyword">const</span> newArray = [];</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>; i&lt; array.length; i++)&#123;</span><br><span class="line">    newArray.push(callback(array[i]));</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> newArray;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(map([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], addTwo));</span><br></pre></td></tr></table></figure><h3 id="挑战４-forEach"><a href="#挑战４-forEach" class="headerlink" title="挑战４ forEach"></a>挑战４ forEach</h3><p><strong>问题：</strong></p><p>函数forEach接受一个数组和一个回调函数，运行回调函数于输入数组的每一个元素。forEach函数无返回值。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> alphabet = <span class="string">''</span>;</span><br><span class="line"><span class="keyword">const</span> letters = [<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>];</span><br><span class="line">forEach(letters, char =&gt; alphabet += char);</span><br><span class="line"><span class="built_in">console</span>.log(alphabet);   <span class="comment">//prints 'abcd'</span></span><br></pre></td></tr></table></figure><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Challenge 4</span></span><br><span class="line"><span class="keyword">const</span> forEach = <span class="function">(<span class="params">array, callback</span>) =&gt;</span> &#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>; i&lt;array.length; i++)&#123;</span><br><span class="line">    callback(array[i]);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// See for yourself if your forEach works!</span></span><br><span class="line"><span class="keyword">let</span> alphabet = <span class="string">''</span>;</span><br><span class="line"><span class="keyword">const</span> letters = [<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>];</span><br><span class="line">forEach(letters, char =&gt; alphabet += char);</span><br><span class="line"><span class="built_in">console</span>.log(alphabet);   <span class="comment">//prints 'abcd'</span></span><br></pre></td></tr></table></figure><h3 id="挑战5-mapWith"><a href="#挑战5-mapWith" class="headerlink" title="挑战5 mapWith"></a>挑战5 mapWith</h3><p><strong>问题：</strong></p><p>在这个挑战中，你需要将map函数重构为mapWith。这一次你要在mapWith中使用forEach函数而不是使用for循环。</p><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Challenge 5</span></span><br><span class="line"><span class="keyword">const</span> mapWith = <span class="function">(<span class="params">array, callback</span>) =&gt;</span> &#123;</span><br><span class="line"><span class="keyword">const</span> newArray = <span class="keyword">new</span> <span class="built_in">Array</span>;</span><br><span class="line">  forEach(array, el =&gt; newArray.push(callback(el)));</span><br><span class="line">  <span class="keyword">return</span> newArray;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="built_in">console</span>.log(mapWith([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], addTwo));</span><br></pre></td></tr></table></figure><h3 id="挑战6-reduce"><a href="#挑战6-reduce" class="headerlink" title="挑战6 reduce"></a>挑战6 reduce</h3><p><strong>问题：</strong></p><p>函数reduce接受一个数组并将数组内的所有值合并为一个值。比如，它可以将数组求和，求积，以及其它你想加进函数中的操作。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> nums = [<span class="number">4</span>, <span class="number">1</span>, <span class="number">3</span>];</span><br><span class="line"><span class="keyword">const</span> add = <span class="function">(<span class="params">a, b</span>) =&gt;</span> a + b; </span><br><span class="line">reduce(nums, add, <span class="number">0</span>);   <span class="comment">//-&gt; 8</span></span><br></pre></td></tr></table></figure><p>以下是它的运行原理。函数有一个“累加器值”（第三个参数），作用为充当初始值并且累加每一次循环的输出值。数组参数会被遍历，传递“累加器值“和新的数组元素值作为参数到回调函数中。回调函数的返回值会成为新的”累加器值“。下一个循环会使用这个新”累加器值“。在上面的例子中，”累加器值“刚开始为0，调用add(0, 4)，”累加器值“变为4，然后add(4, 1)将其变为5，最后add(5, 3)得到8并最终返回。</p><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Challenge 6</span></span><br><span class="line"><span class="keyword">const</span> reduce = <span class="function">(<span class="params">array, callback, initialValue</span>) =&gt;</span> &#123;</span><br><span class="line"><span class="keyword">let</span> newValue = initialValue;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>; i&lt;array.length; i++)&#123;</span><br><span class="line">    newValue = callback(newValue, array[i]);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> newValue;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> nums = [<span class="number">4</span>, <span class="number">1</span>, <span class="number">3</span>];</span><br><span class="line"><span class="keyword">const</span> add = <span class="function">(<span class="params">a, b</span>) =&gt;</span> a + b; </span><br><span class="line"><span class="built_in">console</span>.log(reduce(nums, add, <span class="number">0</span>));   <span class="comment">//-&gt; 8</span></span><br></pre></td></tr></table></figure><h3 id="挑战7-intersection"><a href="#挑战7-intersection" class="headerlink" title="挑战7 intersection"></a>挑战7 intersection</h3><p><strong>问题：</strong></p><p>构建intersection函数，作用为比较输入进来的多组数组并返回一个包含数组间共同元素的新数组。奖励：使用reduce！</p><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Challenge 7</span></span><br><span class="line"><span class="keyword">const</span> intersection = <span class="function">(<span class="params">arrays</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> arrays.reduce(<span class="function">(<span class="params">acc, curr</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> curr.filter(<span class="function"><span class="params">el</span> =&gt;</span> acc.includes(el));</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(intersection([[<span class="number">5</span>, <span class="number">10</span>, <span class="number">15</span>, <span class="number">20</span>], [<span class="number">15</span>, <span class="number">88</span>, <span class="number">1</span>, <span class="number">5</span>, <span class="number">7</span>], [<span class="number">1</span>, <span class="number">10</span>, <span class="number">15</span>, <span class="number">5</span>, <span class="number">20</span>]]));</span><br><span class="line"><span class="comment">// should log: [5, 15]</span></span><br></pre></td></tr></table></figure><h3 id="挑战８-union"><a href="#挑战８-union" class="headerlink" title="挑战８ union"></a>挑战８ union</h3><p><strong>问题：</strong></p><p>构建union函数，作用为比较输入进来的多组数组并返回一个包含输入数组中所有元素的新数组。如果存在重复元素，则新数组中仅保留一个，另外需保留新数组的元素顺序为从第一个输入数组的第一个元素开始。奖励：使用reduce！</p><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Challenge 8</span></span><br><span class="line"><span class="keyword">const</span> union = <span class="function">(<span class="params">arrays</span>) =&gt;</span> &#123;</span><br><span class="line"><span class="keyword">return</span> arrays.reduce(<span class="function">(<span class="params">acc, curr</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// acc.push(curr.filter(el =&gt; !acc.includes(el)));</span></span><br><span class="line">    <span class="keyword">return</span> acc.concat(curr.filter(<span class="function"><span class="params">el</span> =&gt;</span> !acc.includes(el)));</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(union([[<span class="number">5</span>, <span class="number">10</span>, <span class="number">15</span>], [<span class="number">15</span>, <span class="number">88</span>, <span class="number">1</span>, <span class="number">5</span>, <span class="number">7</span>], [<span class="number">100</span>, <span class="number">15</span>, <span class="number">10</span>, <span class="number">1</span>, <span class="number">5</span>]]));</span><br><span class="line"><span class="comment">// should log: [5, 10, 15, 88, 1, 7, 100]</span></span><br></pre></td></tr></table></figure><h3 id="挑战9-objOfMatches"><a href="#挑战9-objOfMatches" class="headerlink" title="挑战9 objOfMatches"></a>挑战9 objOfMatches</h3><p><strong>问题：</strong></p><p>构建objOfMatches函数，接受两个数组和一个回调函数作为参数，作用为创建一个特定对象并返回。objOfMatches会使用回调函数测试第一个数组的每一个元素以确认其输出是否匹配于第二个数组内相同下标的元素。如果匹配，第一个数组内的这个元素会成为所创建对象的键，而第二个数组内的相同下标元素则会成为对应的值。</p><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Challenge 9</span></span><br><span class="line"><span class="keyword">const</span> objOfMatches = <span class="function">(<span class="params">array1, array2, callback</span>) =&gt;</span> &#123;</span><br><span class="line"><span class="keyword">const</span> matchObj = &#123;&#125;;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">let</span> i =<span class="number">0</span>; i&lt;array1.length; i++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(callback(array1[i])===array2[i])&#123;</span><br><span class="line">      matchObj[array1[i]] = array2[i];</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> matchObj;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(objOfMatches([<span class="string">'hi'</span>, <span class="string">'howdy'</span>, <span class="string">'bye'</span>, <span class="string">'later'</span>, <span class="string">'hello'</span>], [<span class="string">'HI'</span>, <span class="string">'Howdy'</span>, <span class="string">'BYE'</span>, <span class="string">'LATER'</span>, <span class="string">'hello'</span>], (str) =&gt; str.toUpperCase()));</span><br><span class="line"><span class="comment">// should log: &#123; hi: 'HI', bye: 'BYE', later: 'LATER' &#125;</span></span><br></pre></td></tr></table></figure><h3 id="挑战10-multiMap"><a href="#挑战10-multiMap" class="headerlink" title="挑战10 multiMap"></a>挑战10 multiMap</h3><p><strong>问题：</strong></p><p>构建multiMap函数，接受两个数组作为参数，第一个数组的元素为值而第二个数组的元素为回调函数。multiMap会返回一个特定对象，该对象的键为第一个数组的值，键对应的值则是将键依序传入第二个数组的回调函数中得到的返回值组成的新数组。</p><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Challenge 10</span></span><br><span class="line"><span class="keyword">const</span> multiMap = <span class="function">(<span class="params">arrVals, arrCallbacks</span>) =&gt;</span> &#123;</span><br><span class="line"><span class="keyword">const</span> multiMapObj = &#123;&#125;;</span><br><span class="line">  <span class="keyword">let</span> tempArray = [];</span><br><span class="line">  arrVals.forEach(<span class="function"><span class="params">el</span> =&gt;</span> &#123;</span><br><span class="line">    tempArray = [];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">0</span>; i&lt;arrCallbacks.length; i++)&#123;</span><br><span class="line">      tempArray.push(arrCallbacks[i](el));</span><br><span class="line">    &#125;</span><br><span class="line">    multiMapObj[el] = tempArray;</span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="keyword">return</span> multiMapObj;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(multiMap([<span class="string">'catfood'</span>, <span class="string">'glue'</span>, <span class="string">'beer'</span>], [<span class="function">(<span class="params">str</span>) =&gt;</span> str.toUpperCase(), (str) =&gt; str[<span class="number">0</span>].toUpperCase() + str.slice(<span class="number">1</span>).toLowerCase(), (str) =&gt; str + str]));</span><br><span class="line"><span class="comment">// should log: &#123; catfood: ['CATFOOD', 'Catfood', 'catfoodcatfood'], glue: ['GLUE', 'Glue', 'glueglue'], beer: ['BEER', 'Beer', 'beerbeer'] &#125;</span></span><br></pre></td></tr></table></figure><h3 id="挑战11-commutative"><a href="#挑战11-commutative" class="headerlink" title="挑战11 commutative"></a>挑战11 commutative</h3><p><strong>问题：</strong></p><p>构建commutative函数，接受参数为两个回调函数和一个值。commutative会返回一个布尔值，从而表明运行第一个回调函数于输入值，再将得到的返回值输入到第二个回调函数中运行，得到的结果与逆序操作是否相同（即运行输入值于第二个回调函数，得到的返回值再输入到第一个回调函数中）。</p><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Challenge 11</span></span><br><span class="line"><span class="keyword">const</span> commutative = <span class="function">(<span class="params">func1, func2, value</span>) =&gt;</span> &#123;</span><br><span class="line"><span class="keyword">if</span>(func1(func2(value)) === func2(func1(value)))&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*** Uncomment these to check your work! ***/</span></span><br><span class="line"><span class="keyword">const</span> multBy3 = <span class="function"><span class="params">n</span> =&gt;</span> n * <span class="number">3</span>;</span><br><span class="line"><span class="keyword">const</span> divBy4 = <span class="function"><span class="params">n</span> =&gt;</span> n / <span class="number">4</span>;</span><br><span class="line"><span class="keyword">const</span> subtract5 = <span class="function"><span class="params">n</span> =&gt;</span> n - <span class="number">5</span>;</span><br><span class="line"><span class="built_in">console</span>.log(commutative(multBy3, divBy4, <span class="number">11</span>)); <span class="comment">// should log: true</span></span><br><span class="line"><span class="built_in">console</span>.log(commutative(multBy3, subtract5, <span class="number">10</span>)); <span class="comment">// should log: false</span></span><br><span class="line"><span class="built_in">console</span>.log(commutative(divBy4, subtract5, <span class="number">48</span>)); <span class="comment">// should log: false</span></span><br></pre></td></tr></table></figure><h3 id="挑战12-objectFilter"><a href="#挑战12-objectFilter" class="headerlink" title="挑战12 objectFilter"></a>挑战12 objectFilter</h3><p><strong>问题：</strong></p><p>构建objectFilter函数，第一个参数为对象，第二个参数为回调函数。objectFilter函数会返回特定对象。此特定对象所包含的属性为输入对象中值与其对应键传入回调函数得到的返回值一致的键值对。</p><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Challenge 12</span></span><br><span class="line"><span class="keyword">const</span> objFilter = <span class="function">(<span class="params">obj, callback</span>) =&gt;</span> &#123;</span><br><span class="line"><span class="keyword">const</span> objectFilterObj = &#123;&#125;;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">let</span> key <span class="keyword">in</span> obj) &#123;</span><br><span class="line">    <span class="keyword">if</span>(obj[key] === callback(key))&#123;</span><br><span class="line">      objectFilterObj[key] = obj[key];</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> objectFilterObj;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*** Uncomment these to check your work! ***/</span></span><br><span class="line"><span class="keyword">const</span> startingObj = &#123;&#125;;</span><br><span class="line">startingObj[<span class="number">6</span>] = <span class="number">3</span>;</span><br><span class="line">startingObj[<span class="number">2</span>] = <span class="number">1</span>;</span><br><span class="line">startingObj[<span class="number">12</span>] = <span class="number">4</span>;</span><br><span class="line"><span class="keyword">const</span> half = <span class="function"><span class="params">n</span> =&gt;</span> n / <span class="number">2</span>;</span><br><span class="line"><span class="built_in">console</span>.log(objFilter(startingObj, half)); <span class="comment">// should log: &#123; 2: 1, 6: 3 &#125;</span></span><br></pre></td></tr></table></figure><h3 id="挑战13-rating"><a href="#挑战13-rating" class="headerlink" title="挑战13 rating"></a>挑战13 rating</h3><p><strong>问题：</strong></p><p>构建rating函数，接受参数为一个由函数组成的数组和一个值。数组中的函数的返回值皆为true或false。rating会返回一个表明将输入值运行于数组中的函数会返回true的百分比数。</p><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Challenge 13</span></span><br><span class="line"><span class="keyword">const</span> rating = <span class="function">(<span class="params">arrOfFuncs, value</span>) =&gt;</span> &#123;</span><br><span class="line"><span class="keyword">let</span> trueCounter = <span class="number">0</span>; </span><br><span class="line">    arrOfFuncs.forEach(<span class="function"><span class="params">el</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span>(el(value))&#123;</span><br><span class="line">       trueCounter++;</span><br><span class="line">  &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="keyword">return</span> trueCounter/arrOfFuncs.length * <span class="number">100</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*** Uncomment these to check your work! ***/</span></span><br><span class="line"><span class="keyword">const</span> isEven = <span class="function"><span class="params">n</span> =&gt;</span> n % <span class="number">2</span> === <span class="number">0</span>;</span><br><span class="line"><span class="keyword">const</span> greaterThanFour = <span class="function"><span class="params">n</span> =&gt;</span> n &gt; <span class="number">4</span>;</span><br><span class="line"><span class="keyword">const</span> isSquare = <span class="function"><span class="params">n</span> =&gt;</span> <span class="built_in">Math</span>.sqrt(n) % <span class="number">1</span> === <span class="number">0</span>;</span><br><span class="line"><span class="keyword">const</span> hasSix = <span class="function"><span class="params">n</span> =&gt;</span> n.toString().includes(<span class="string">'6'</span>);</span><br><span class="line"><span class="keyword">const</span> checks = [isEven, greaterThanFour, isSquare, hasSix];</span><br><span class="line"><span class="built_in">console</span>.log(rating(checks, <span class="number">64</span>)); <span class="comment">// should log: 100</span></span><br><span class="line"><span class="built_in">console</span>.log(rating(checks, <span class="number">66</span>)); <span class="comment">// should log: 75</span></span><br></pre></td></tr></table></figure><h3 id="挑战14-pipe"><a href="#挑战14-pipe" class="headerlink" title="挑战14 pipe"></a>挑战14 pipe</h3><p><strong>问题：</strong></p><p>构建pipe函数，接受参数为一个由函数组成的数组和一个值。pipe会将输入值输入到数组的第一个函数中，然后再将得到的输出值输入到第二个函数中，然后输出值又再输入到第三个函数中，一直下去，直到得到数组的最后一个函数的输出值。pipe会返回这个最终输出值。</p><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Challenge 14</span></span><br><span class="line"><span class="keyword">const</span> pipe = <span class="function">(<span class="params">arrOfFuncs, value</span>) =&gt;</span> &#123;</span><br><span class="line"><span class="keyword">let</span> output = value;</span><br><span class="line">    arrOfFuncs.forEach(<span class="function"><span class="params">el</span> =&gt;</span> &#123;</span><br><span class="line">    output = el(output);</span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="keyword">return</span> output;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*** Uncomment these to check your work! ***/</span></span><br><span class="line"><span class="keyword">const</span> capitalize = <span class="function"><span class="params">str</span> =&gt;</span> str.toUpperCase();</span><br><span class="line"><span class="keyword">const</span> addLowerCase = <span class="function"><span class="params">str</span> =&gt;</span> str + str.toLowerCase();</span><br><span class="line"><span class="keyword">const</span> repeat = <span class="function"><span class="params">str</span> =&gt;</span> str + str;</span><br><span class="line"><span class="keyword">const</span> capAddlowRepeat = [capitalize, addLowerCase, repeat];</span><br><span class="line"><span class="built_in">console</span>.log(pipe(capAddlowRepeat, <span class="string">'cat'</span>)); <span class="comment">// should log: 'CATcatCATcat'</span></span><br></pre></td></tr></table></figure><h3 id="挑战15-highestFunc"><a href="#挑战15-highestFunc" class="headerlink" title="挑战15 highestFunc"></a>挑战15 highestFunc</h3><p><strong>问题：</strong></p><p>构建highestFunc函数，接受参数为一个对象（包含函数）和一个值。highestFunc会返回输入对象中运行输入值后得到最高值的函数所对应的键。</p><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Challenge 15</span></span><br><span class="line"><span class="keyword">const</span> highestFunc = <span class="function">(<span class="params">objOfFuncs, subject</span>) =&gt;</span> &#123;</span><br><span class="line"><span class="keyword">let</span> maxKey = <span class="string">""</span>;</span><br><span class="line">  <span class="keyword">let</span> maxNumber = <span class="built_in">Number</span>.NEGATIVE_INFINITY;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">let</span> key <span class="keyword">in</span> objOfFuncs) &#123;</span><br><span class="line">    <span class="keyword">if</span>(objOfFuncs[key](subject) &gt; maxNumber)&#123;</span><br><span class="line">      maxNumber = objOfFuncs[key](subject);</span><br><span class="line">      maxKey = key;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> maxKey;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*** Uncomment these to check your work! ***/</span></span><br><span class="line"><span class="keyword">const</span> groupOfFuncs = &#123;&#125;;</span><br><span class="line">groupOfFuncs.double = <span class="function"><span class="params">n</span> =&gt;</span> n * <span class="number">2</span>;</span><br><span class="line">groupOfFuncs.addTen = <span class="function"><span class="params">n</span> =&gt;</span> n + <span class="number">10</span>;</span><br><span class="line">groupOfFuncs.inverse = <span class="function"><span class="params">n</span> =&gt;</span> n * <span class="number">-1</span>;</span><br><span class="line"><span class="built_in">console</span>.log(highestFunc(groupOfFuncs, <span class="number">5</span>)); <span class="comment">// should log: 'addTen'</span></span><br><span class="line"><span class="built_in">console</span>.log(highestFunc(groupOfFuncs, <span class="number">11</span>)); <span class="comment">// should log: 'double'</span></span><br><span class="line"><span class="built_in">console</span>.log(highestFunc(groupOfFuncs, <span class="number">-20</span>)); <span class="comment">// should log: 'inverse'</span></span><br></pre></td></tr></table></figure><h2 id="闭包"><a href="#闭包" class="headerlink" title="闭包"></a>闭包</h2><h3 id="挑战1-createFunction"><a href="#挑战1-createFunction" class="headerlink" title="挑战1 createFunction"></a>挑战1 createFunction</h3><p><strong>问题:</strong></p><p>构建createFunction函数，用于创建和返回函数。当被创建的函数被调用时，它会打印“hello”。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> function1 = createFunction();</span><br><span class="line"><span class="comment">// now we'll call the function we just created</span></span><br><span class="line">function1(); <span class="comment">//should console.log('hello');</span></span><br></pre></td></tr></table></figure><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Challenge 1</span></span><br><span class="line"><span class="keyword">const</span> createFunction = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line"><span class="keyword">const</span> innerFunction = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'hello'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> innerFunction;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// UNCOMMENT THESE TO TEST YOUR WORK!</span></span><br><span class="line"><span class="keyword">const</span> function1 = createFunction();</span><br><span class="line">function1();</span><br></pre></td></tr></table></figure><h3 id="挑战2-createFunctionPrinter"><a href="#挑战2-createFunctionPrinter" class="headerlink" title="挑战2 createFunctionPrinter"></a>挑战2 createFunctionPrinter</h3><p><strong>问题：</strong></p><p>构建接受一个输入值作为参数的createFunctionPrinter函数，用于创建和返回一个特定函数。当特定函数被调用时，其应该打印特定函数被创建时输入createFunctionPrinter中的值。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> printSample = createFunctionPrinter(<span class="string">'sample'</span>);</span><br><span class="line"><span class="keyword">const</span> printHello = createFunctionPrinter(<span class="string">'hello'</span>)</span><br><span class="line"><span class="comment">// now we'll call the functions we just created</span></span><br><span class="line">printSample(); <span class="comment">//should console.log('sample');</span></span><br><span class="line">printHello(); <span class="comment">//should console.log('hello');</span></span><br></pre></td></tr></table></figure><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Challenge 2</span></span><br><span class="line"><span class="keyword">const</span> createFunctionPrinter = <span class="function">(<span class="params">input</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">let</span> inputValue = input;</span><br><span class="line"><span class="keyword">const</span> innerFunction = <span class="function">(<span class="params">inputValue</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(input);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> innerFunction;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// UNCOMMENT THESE TO TEST YOUR WORK!</span></span><br><span class="line"><span class="keyword">const</span> printSample = createFunctionPrinter(<span class="string">'sample'</span>);</span><br><span class="line">printSample();</span><br><span class="line"><span class="keyword">const</span> printHello = createFunctionPrinter(<span class="string">'hello'</span>);</span><br><span class="line">printHello();</span><br></pre></td></tr></table></figure><h3 id="挑战3-outer"><a href="#挑战3-outer" class="headerlink" title="挑战3 outer"></a>挑战3 outer</h3><p><strong>问题：</strong></p><p>观察下面outer函数的实现代码。注意其会返回一个函数而且那个函数使用了不在其作用域的变量。尝试推断一下运行outer函数得到的输出值。</p><p><strong>代码：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Challenge 3</span></span><br><span class="line"><span class="keyword">const</span> outer = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">let</span> counter = <span class="number">0</span>; <span class="comment">// this variable is outside incrementCounter's scope</span></span><br><span class="line">  <span class="keyword">const</span> incrementCounter = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    counter++;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'counter'</span>, counter);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> incrementCounter;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> willCounter = outer();</span><br><span class="line"><span class="keyword">const</span> jasCounter = outer();</span><br><span class="line"></span><br><span class="line"><span class="comment">// Uncomment each of these lines one by one.</span></span><br><span class="line"><span class="comment">// Before your do, guess what will be logged from each function call.</span></span><br><span class="line"></span><br><span class="line">willCounter();</span><br><span class="line">willCounter();</span><br><span class="line">willCounter();</span><br><span class="line"></span><br><span class="line">jasCounter();</span><br><span class="line">willCounter();</span><br></pre></td></tr></table></figure><h3 id="挑战4-addByX"><a href="#挑战4-addByX" class="headerlink" title="挑战4 addByX"></a>挑战4 addByX</h3><p><strong>问题：</strong></p><p>构建addByX函数，其会返回一个接受一个输入值作为参数并与x相加的函数。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> addByTwo = addByX(<span class="number">2</span>);</span><br><span class="line">addByTwo(<span class="number">1</span>); <span class="comment">//should return 3</span></span><br><span class="line">addByTwo(<span class="number">2</span>); <span class="comment">//should return 4</span></span><br><span class="line">addByTwo(<span class="number">3</span>); <span class="comment">//should return 5</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> addByThree = addByX(<span class="number">3</span>);</span><br><span class="line">addByThree(<span class="number">1</span>); <span class="comment">//should return 4</span></span><br><span class="line">addByThree(<span class="number">2</span>); <span class="comment">//should return 5</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> addByFour = addByX(<span class="number">4</span>);</span><br><span class="line">addByFour(<span class="number">4</span>); <span class="comment">//should return 8</span></span><br><span class="line">addByFour(<span class="number">10</span>); <span class="comment">//should return 14</span></span><br></pre></td></tr></table></figure><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Challenge 4</span></span><br><span class="line"><span class="keyword">const</span> addByX = <span class="function">(<span class="params">x</span>) =&gt;</span> &#123;</span><br><span class="line"><span class="keyword">const</span> outerInput = x;</span><br><span class="line">  <span class="keyword">const</span> innerFunction = <span class="function">(<span class="params">innerInput</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> x + innerInput;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> innerFunction;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> addByTwo = addByX(<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// now call addByTwo with an input of 1</span></span><br><span class="line"><span class="built_in">console</span>.log(addByTwo(<span class="number">1</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">// now call addByTwo with an input of 2</span></span><br><span class="line"><span class="built_in">console</span>.log(addByTwo(<span class="number">2</span>));</span><br></pre></td></tr></table></figure><h3 id="挑战5-once"><a href="#挑战5-once" class="headerlink" title="挑战5 once"></a>挑战5 once</h3><p><strong>问题：</strong></p><p>构建once函数，接受参数为一个回调函数并返回一个特定函数。当特定函数被第一次调用时，其会调用回调函数并返回输出值。如果其不是被第一次调用，则特定函数仅仅返回第一次调用时得到的回调函数返回值，而不是再次运行回调函数。</p><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Challenge 5</span></span><br><span class="line"><span class="keyword">const</span> once = <span class="function">(<span class="params">func</span>) =&gt;</span> &#123;</span><br><span class="line"><span class="keyword">let</span> counter = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">let</span> onceResult = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">const</span> innerFunction = <span class="function">(<span class="params">el</span>) =&gt;</span> &#123;</span><br><span class="line">    counter++;</span><br><span class="line">    <span class="keyword">if</span>(counter === <span class="number">1</span>) &#123;</span><br><span class="line">      onceResult = func(el);</span><br><span class="line">      <span class="keyword">return</span> onceResult;</span><br><span class="line">    &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="keyword">return</span> onceResult;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> innerFunction;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> onceFunc = once(addByTwo);</span><br><span class="line"></span><br><span class="line"><span class="comment">// UNCOMMENT THESE TO TEST YOUR WORK!</span></span><br><span class="line"><span class="built_in">console</span>.log(onceFunc(<span class="number">4</span>));  <span class="comment">//should log 6</span></span><br><span class="line"><span class="built_in">console</span>.log(onceFunc(<span class="number">10</span>));  <span class="comment">//should log 6</span></span><br><span class="line"><span class="built_in">console</span>.log(onceFunc(<span class="number">9001</span>));  <span class="comment">//should log 6</span></span><br></pre></td></tr></table></figure><h3 id="挑战6-after"><a href="#挑战6-after" class="headerlink" title="挑战6 after"></a>挑战6 after</h3><p><strong>问题：</strong></p><p>构建after函数，接受一个数字n和一个回调函数作为参数。回调函数需要在通过after构建的函数运行第n次时才被运行。</p><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Challenge 6</span></span><br><span class="line"><span class="keyword">const</span> after = <span class="function">(<span class="params">count, func</span>) =&gt;</span> &#123;</span><br><span class="line"><span class="keyword">let</span> counter = count;</span><br><span class="line">  <span class="keyword">const</span> innerFunction = <span class="function">(<span class="params">el</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span>(--counter === <span class="number">0</span>)&#123;</span><br><span class="line">      func(el);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> innerFunction;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> called = <span class="function"><span class="params">()</span> =&gt;</span> <span class="built_in">console</span>.log(<span class="string">'hello'</span>);</span><br><span class="line"><span class="keyword">const</span> afterCalled = after(<span class="number">3</span>, called);</span><br><span class="line"></span><br><span class="line">afterCalled(); <span class="comment">// -&gt; nothing is printed</span></span><br><span class="line">afterCalled(); <span class="comment">// -&gt; nothing is printed</span></span><br><span class="line">afterCalled(); <span class="comment">// -&gt; 'hello' is printed</span></span><br></pre></td></tr></table></figure><h3 id="挑战7-delay"><a href="#挑战7-delay" class="headerlink" title="挑战7 delay"></a>挑战7 delay</h3><p><strong>问题：</strong></p><p>构建delay函数，作用为接受一个回调函数作为第一个参数，一个数值n（单位为毫秒）作为第二个参数，返回一个特定函数。delay构建的特定函数被调用后，须经n毫秒后才运行回调函数。任何其他赋给特定函数的参数会在n毫秒后被回调函数使用。提示：研究setTimeout();</p><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Challenge 7</span></span><br><span class="line"><span class="keyword">const</span> delay = <span class="function">(<span class="params">func, wait</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> waitTime = wait;</span><br><span class="line">  <span class="keyword">const</span> innerFunction = <span class="function">(<span class="params">el</span>) =&gt;</span> &#123;</span><br><span class="line">  setTimeout(<span class="function">(<span class="params">el</span>) =&gt;</span> &#123;</span><br><span class="line">      func(el);</span><br><span class="line">    &#125;, waitTime);  </span><br><span class="line">  &#125;</span><br><span class="line"><span class="keyword">return</span> innerFunction;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> delayCalled = delay(called, <span class="number">2000</span>);</span><br><span class="line"></span><br><span class="line">delayCalled(); <span class="comment">// "hello" after 2 seconds.</span></span><br></pre></td></tr></table></figure><h3 id="挑战8-russianRoulette"><a href="#挑战8-russianRoulette" class="headerlink" title="挑战8 russianRoulette"></a>挑战8 russianRoulette</h3><p><strong>问题：</strong></p><p>构建russianRoulette函数，作用为接受一个数值参数（假设为n）并返回一个特定函数。此特定函数不接受输入参数，而且会在前n-1次调用时返回字符串“click“，在第n次调用时则返回字符串”bang“，n次以后再调用皆返回字符串”reload to play again”。</p><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Challenge 8</span></span><br><span class="line"><span class="keyword">const</span> russianRoulette = <span class="function">(<span class="params">num</span>) =&gt;</span> &#123;</span><br><span class="line"><span class="keyword">let</span> counter = num;</span><br><span class="line">  <span class="keyword">const</span> innerFunction = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    counter--;</span><br><span class="line">    <span class="keyword">if</span>(counter&gt;<span class="number">0</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="string">"click"</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span>(counter==<span class="number">0</span>)&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="string">"bang"</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="string">"reload to play again"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> innerFunction; </span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*** Uncomment these to check your work! ***/</span></span><br><span class="line"><span class="keyword">const</span> play = russianRoulette(<span class="number">3</span>);</span><br><span class="line"><span class="built_in">console</span>.log(play()); <span class="comment">// should log: 'click'</span></span><br><span class="line"><span class="built_in">console</span>.log(play()); <span class="comment">// should log: 'click'</span></span><br><span class="line"><span class="built_in">console</span>.log(play()); <span class="comment">// should log: 'bang'</span></span><br><span class="line"><span class="built_in">console</span>.log(play()); <span class="comment">// should log: 'reload to play again'</span></span><br><span class="line"><span class="built_in">console</span>.log(play()); <span class="comment">// should log: 'reload to play again'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Challenge 8</span></span><br><span class="line"><span class="keyword">const</span> russianRoulette = <span class="function">(<span class="params">num</span>) =&gt;</span> &#123;</span><br><span class="line"><span class="keyword">let</span> counter = num;</span><br><span class="line">  <span class="keyword">const</span> innerFunction = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    counter--;</span><br><span class="line">    <span class="keyword">if</span>(counter&gt;<span class="number">0</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="string">"click"</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span>(counter==<span class="number">0</span>)&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="string">"bang"</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="string">"reload to play again"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> innerFunction; </span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*** Uncomment these to check your work! ***/</span></span><br><span class="line"><span class="keyword">const</span> play = russianRoulette(<span class="number">3</span>);</span><br><span class="line"><span class="built_in">console</span>.log(play()); <span class="comment">// should log: 'click'</span></span><br><span class="line"><span class="built_in">console</span>.log(play()); <span class="comment">// should log: 'click'</span></span><br><span class="line"><span class="built_in">console</span>.log(play()); <span class="comment">// should log: 'bang'</span></span><br><span class="line"><span class="built_in">console</span>.log(play()); <span class="comment">// should log: 'reload to play again'</span></span><br><span class="line"><span class="built_in">console</span>.log(play()); <span class="comment">// should log: 'reload to play again'</span></span><br></pre></td></tr></table></figure><h3 id="挑战9-average"><a href="#挑战9-average" class="headerlink" title="挑战9 average"></a>挑战9 average</h3><p><strong>问题：</strong></p><p>构建average函数，不接受参数，并返回一个特定函数（接受一个数值作为参数或无参数）。当average创建的特定函数被输入数值参数的方式调用时，返回值为所有曾经被输入到特定函数的数值参数的平均值（重复数值视为分别的数值）。当特定函数被无参数的方式调用时，返回当前的平均值。如果特定函数在无参数方式调用时不曾被输入数值参数的方式调用过，则返回0。</p><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Challenge 9</span></span><br><span class="line"><span class="keyword">const</span> average = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line"><span class="keyword">let</span> averageValue = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">let</span> argumentCounter = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">let</span> argumentSum = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">const</span> innerFunction = <span class="function">(<span class="params">el</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span>(el == <span class="literal">undefined</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> averageValue;</span><br><span class="line">    &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">      argumentCounter++;</span><br><span class="line">      argumentSum += el; </span><br><span class="line">      averageValue = argumentSum / argumentCounter;</span><br><span class="line">      <span class="keyword">return</span> averageValue;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> innerFunction;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*** Uncomment these to check your work! ***/</span></span><br><span class="line"><span class="keyword">const</span> avgSoFar = average();</span><br><span class="line"><span class="built_in">console</span>.log(avgSoFar()); <span class="comment">// should log: 0</span></span><br><span class="line"><span class="built_in">console</span>.log(avgSoFar(<span class="number">4</span>)); <span class="comment">// should log: 4</span></span><br><span class="line"><span class="built_in">console</span>.log(avgSoFar(<span class="number">8</span>)); <span class="comment">// should log: 6</span></span><br><span class="line"><span class="built_in">console</span>.log(avgSoFar()); <span class="comment">// should log: 6</span></span><br><span class="line"><span class="built_in">console</span>.log(avgSoFar(<span class="number">12</span>)); <span class="comment">// should log: 8</span></span><br><span class="line"><span class="built_in">console</span>.log(avgSoFar()); <span class="comment">// should log: 8</span></span><br></pre></td></tr></table></figure><h3 id="挑战10-makeFuncTester"><a href="#挑战10-makeFuncTester" class="headerlink" title="挑战10 makeFuncTester"></a>挑战10 makeFuncTester</h3><p><strong>问题：</strong></p><p>构建makeFuncTester函数，接受参数为一个二维数组（其中第二维数组仅含两个元素），返回一个接收回调函数作为参数的特定函数。当二维数组的每一个子数组的第一个元素输入到回调函数时都产生与第二个元素相同的返回值时，特定函数返回ture，否则特定函数返回false。</p><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Challenge 10</span></span><br><span class="line"><span class="keyword">const</span> makeFuncTester = <span class="function">(<span class="params">arrOfTests</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> firstLayerArray = [];</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>; i&lt;arrOfTests.length; i++)&#123;</span><br><span class="line">    <span class="keyword">let</span> secondLayerArray = [];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> j = <span class="number">0</span>; j&lt;arrOfTests[i].length; j++)&#123;</span><br><span class="line">      secondLayerArray.push(arrOfTests[i][j]);</span><br><span class="line">    &#125;</span><br><span class="line">    firstLayerArray.push(secondLayerArray);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">const</span> innerFunction = <span class="function">(<span class="params">callback</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">0</span>; i&lt;firstLayerArray.length; i++)&#123;</span><br><span class="line">      <span class="keyword">if</span>(callback(firstLayerArray[i][<span class="number">0</span>]) !== firstLayerArray[i][<span class="number">1</span>])&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> innerFunction;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*** Uncomment these to check your work! ***/</span></span><br><span class="line"><span class="keyword">const</span> capLastTestCases = [];</span><br><span class="line">capLastTestCases.push([<span class="string">'hello'</span>, <span class="string">'hellO'</span>]);</span><br><span class="line">capLastTestCases.push([<span class="string">'goodbye'</span>, <span class="string">'goodbyE'</span>]);</span><br><span class="line">capLastTestCases.push([<span class="string">'howdy'</span>, <span class="string">'howdY'</span>]);</span><br><span class="line"><span class="keyword">const</span> shouldCapitalizeLast = makeFuncTester(capLastTestCases);</span><br><span class="line"><span class="keyword">const</span> capLastAttempt1 = <span class="function"><span class="params">str</span> =&gt;</span> str.toUpperCase();</span><br><span class="line"><span class="keyword">const</span> capLastAttempt2 = <span class="function"><span class="params">str</span> =&gt;</span> str.slice(<span class="number">0</span>, <span class="number">-1</span>) + str.slice(<span class="number">-1</span>).toUpperCase();</span><br><span class="line"><span class="built_in">console</span>.log(shouldCapitalizeLast(capLastAttempt1)); <span class="comment">// should log: false</span></span><br><span class="line"><span class="built_in">console</span>.log(shouldCapitalizeLast(capLastAttempt2)); <span class="comment">// should log: true</span></span><br></pre></td></tr></table></figure><h3 id="挑战11-makeHistory"><a href="#挑战11-makeHistory" class="headerlink" title="挑战11 makeHistory"></a>挑战11 makeHistory</h3><p><strong>问题：</strong></p><p>构建makeHistory函数，接受一个数值参数n（充当限定值）并返回一个特定函数（接受字符串作为参数）。特定函数会存储限定个数为n的最近输入到此特定函数中的字符串参数历史（每次调用存储一次）。每次一个字符串被输入到特定函数中，特定函数会返回拼接“done”于此字符串后的新字符串（空格作为间隔）。然而，如果输入字符串为“undo”，特定函数会删除字符串参数历史中的最近字符串值，返回拼接“undone”于此最近字符串后的新字符串（空格作为间隔）。如果输入字符串“undo”时特定函数中的字符串参数历史已为空，那么特定函数会返回字符串“nothing to undo”。</p><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Challenge 11</span></span><br><span class="line"><span class="keyword">const</span> makeHistory = <span class="function">(<span class="params">limit</span>) =&gt;</span> &#123;</span><br><span class="line"><span class="keyword">const</span> limitNumber = limit; </span><br><span class="line">  <span class="keyword">let</span> parameterStack = [];</span><br><span class="line">  <span class="keyword">const</span> innerFunction = <span class="function">(<span class="params">stringElement</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span>(stringElement === <span class="string">"undo"</span>)&#123;</span><br><span class="line">      <span class="keyword">if</span>(parameterStack.length == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"nothing to undo"</span>;</span><br><span class="line">      &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;parameterStack.pop()&#125;</span> undone`</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">      parameterStack.push(stringElement);</span><br><span class="line">      <span class="keyword">if</span>(parameterStack.length &gt; limit)&#123;</span><br><span class="line">        parameterStack = parameterStack.slice(-limit);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;stringElement&#125;</span> done`</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> innerFunction;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*** Uncomment these to check your work! ***/</span></span><br><span class="line"><span class="keyword">const</span> myActions = makeHistory(<span class="number">2</span>);</span><br><span class="line"><span class="built_in">console</span>.log(myActions(<span class="string">'jump'</span>)); <span class="comment">// should log: 'jump done'</span></span><br><span class="line"><span class="built_in">console</span>.log(myActions(<span class="string">'undo'</span>)); <span class="comment">// should log: 'jump undone'</span></span><br><span class="line"><span class="built_in">console</span>.log(myActions(<span class="string">'walk'</span>)); <span class="comment">// should log: 'walk done'</span></span><br><span class="line"><span class="built_in">console</span>.log(myActions(<span class="string">'code'</span>)); <span class="comment">// should log: 'code done'</span></span><br><span class="line"><span class="built_in">console</span>.log(myActions(<span class="string">'pose'</span>)); <span class="comment">// should log: 'pose done'</span></span><br><span class="line"><span class="built_in">console</span>.log(myActions(<span class="string">'undo'</span>)); <span class="comment">// should log: 'pose undone'</span></span><br><span class="line"><span class="built_in">console</span>.log(myActions(<span class="string">'undo'</span>)); <span class="comment">// should log: 'code undone'</span></span><br><span class="line"><span class="built_in">console</span>.log(myActions(<span class="string">'undo'</span>)); <span class="comment">// should log: 'nothing to undo'</span></span><br></pre></td></tr></table></figure><h3 id="挑战12-blackjack"><a href="#挑战12-blackjack" class="headerlink" title="挑战12 blackjack"></a>挑战12 blackjack</h3><p><strong>问题：</strong></p><p><em>仔细观察测试代码如果你需要帮忙来理解下面的算法描述。</em></p><p>构建blackjack函数，接受参数为一个数组（元素皆为从1到11的数值），返回一个DEALER函数。 DEALER函数会接受两个参数（皆为数值），然后返回一个另外的PLAYER函数。</p><p>在第一次调用PLAYER函数时，它会返回输入DEALER函数中的两个数值参数之和。</p><p>在第二次调用PLAYER函数时，它会返回下列两种情况中的一种：</p><ol><li>输入blackjack函数的数值型数组的第一个数值加上输入DEALER函数中的两个数值参数之和得到的和，如果和小于等于21，返回此和；</li><li>如果和大于21，返回字符串“bust”。</li></ol><p>如果第二次调用PLAYER函数时已返回”bust”，则接下来PLAYER函数的每次调用皆会返回字符串“you are done!”（不过不同于“bust”，输出”you are done!“时不会使用数值型数组中的数值)。如果第二次调用PLAYER函数时并未返回”bust“，则接下来调用PLAYER函数时会返回下列两种情况中的一种：</p><ol><li>最近一次的和值加上数值型数组的下一个数值元素，如果这个求和结果小于等于21的话，返回此和；</li><li>返回“bust”如果求和结果大于21。</li></ol><p>再次声明，如果其返回”bust”，则接下来PLAYER函数的每次调用皆会返回字符串“you are done!”，否则，PLAYER函数会继续使用最近一次和值与数值型数组的下一个数值元素求和，一直下去。</p><p>你可以假设给定的数值型数组有足够多的数值元素从而会在用完数组元素之前得到“bust”。</p><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Challenge 12</span></span><br><span class="line"><span class="keyword">const</span> blackjack = <span class="function">(<span class="params">array</span>) =&gt;</span> &#123;</span><br><span class="line"><span class="keyword">const</span> dealer = <span class="function">(<span class="params">num1, num2</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> first = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">let</span> bust = <span class="literal">false</span>; </span><br><span class="line">    <span class="keyword">let</span> sum = num1 + num2; </span><br><span class="line">    <span class="keyword">const</span> player = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span>(first) &#123;</span><br><span class="line">        first = <span class="literal">false</span>; </span><br><span class="line">        <span class="keyword">return</span> sum; </span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (bust) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"you are done!"</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span>(sum + array[<span class="number">0</span>] &lt;= <span class="number">21</span>) &#123;</span><br><span class="line">        sum += array.shift();</span><br><span class="line">        <span class="keyword">return</span> sum; </span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        array.shift();</span><br><span class="line">        bust = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"bust"</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> player;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> dealer;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*** Uncomment these to check your work! ***/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*** DEALER ***/</span></span><br><span class="line"><span class="keyword">const</span> deal = blackjack([<span class="number">2</span>, <span class="number">6</span>, <span class="number">1</span>, <span class="number">7</span>, <span class="number">11</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">3</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">3</span>, <span class="number">10</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">3</span>, <span class="number">7</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">6</span>, <span class="number">10</span>, <span class="number">11</span>]);</span><br><span class="line"></span><br><span class="line"><span class="comment">/*** PLAYER 1 ***/</span></span><br><span class="line"><span class="keyword">const</span> i_like_to_live_dangerously = deal(<span class="number">4</span>, <span class="number">5</span>);</span><br><span class="line"><span class="built_in">console</span>.log(i_like_to_live_dangerously()); <span class="comment">// should log: 9</span></span><br><span class="line"><span class="built_in">console</span>.log(i_like_to_live_dangerously()); <span class="comment">// should log: 11</span></span><br><span class="line"><span class="built_in">console</span>.log(i_like_to_live_dangerously()); <span class="comment">// should log: 17</span></span><br><span class="line"><span class="built_in">console</span>.log(i_like_to_live_dangerously()); <span class="comment">// should log: 18</span></span><br><span class="line"><span class="built_in">console</span>.log(i_like_to_live_dangerously()); <span class="comment">// should log: 'bust'</span></span><br><span class="line"><span class="built_in">console</span>.log(i_like_to_live_dangerously()); <span class="comment">// should log: 'you are done!'</span></span><br><span class="line"><span class="built_in">console</span>.log(i_like_to_live_dangerously()); <span class="comment">// should log: 'you are done!'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*** BELOW LINES ARE FOR THE BONUS ***/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*** PLAYER 2 ***/</span></span><br><span class="line"><span class="keyword">const</span> i_TOO_like_to_live_dangerously = deal(<span class="number">2</span>, <span class="number">2</span>);</span><br><span class="line"><span class="built_in">console</span>.log(i_TOO_like_to_live_dangerously()); <span class="comment">// should log: 4</span></span><br><span class="line"><span class="built_in">console</span>.log(i_TOO_like_to_live_dangerously()); <span class="comment">// should log: 15</span></span><br><span class="line"><span class="built_in">console</span>.log(i_TOO_like_to_live_dangerously()); <span class="comment">// should log: 19</span></span><br><span class="line"><span class="built_in">console</span>.log(i_TOO_like_to_live_dangerously()); <span class="comment">// should log: 'bust'</span></span><br><span class="line"><span class="built_in">console</span>.log(i_TOO_like_to_live_dangerously()); <span class="comment">// should log: 'you are done!</span></span><br><span class="line"><span class="built_in">console</span>.log(i_TOO_like_to_live_dangerously()); <span class="comment">// should log: 'you are done!</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*** PLAYER 3 ***/</span></span><br><span class="line"><span class="keyword">const</span> i_ALSO_like_to_live_dangerously = deal(<span class="number">3</span>, <span class="number">7</span>);</span><br><span class="line"><span class="built_in">console</span>.log(i_ALSO_like_to_live_dangerously()); <span class="comment">// should log: 10</span></span><br><span class="line"><span class="built_in">console</span>.log(i_ALSO_like_to_live_dangerously()); <span class="comment">// should log: 13</span></span><br><span class="line"><span class="built_in">console</span>.log(i_ALSO_like_to_live_dangerously()); <span class="comment">// should log: 'bust'</span></span><br><span class="line"><span class="built_in">console</span>.log(i_ALSO_like_to_live_dangerously()); <span class="comment">// should log: 'you are done!</span></span><br><span class="line"><span class="built_in">console</span>.log(i_ALSO_like_to_live_dangerously()); <span class="comment">// should log: 'you are done!</span></span><br></pre></td></tr></table></figure><h2 id="额外挑战"><a href="#额外挑战" class="headerlink" title="额外挑战"></a>额外挑战</h2><h3 id="挑战1-functionValidator"><a href="#挑战1-functionValidator" class="headerlink" title="挑战1 functionValidator"></a>挑战1 functionValidator</h3><p><strong>问题：</strong></p><p>构建functionValidator函数，接受参数为一个函数型数组和两个不同的数值（称之为input和output）。此函数应返回一个特定数组，此特定数组仅包含输入函数数组中调用input时会返回output的函数。使用reduce！</p><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Challenge 1</span></span><br><span class="line"><span class="keyword">const</span> functionValidator = <span class="function">(<span class="params">funcArr, input, output</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> funcArr.reduce(<span class="function">(<span class="params">acc, curr</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span>(curr(input) === output) &#123;</span><br><span class="line">      acc.push(curr);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> acc;</span><br><span class="line">  &#125;, [])</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> addFive = <span class="function"><span class="params">num</span> =&gt;</span> num + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> multiplyByTwo = <span class="function"><span class="params">num</span> =&gt;</span> num * <span class="number">2</span>;</span><br><span class="line"><span class="keyword">const</span> subtractOne = <span class="function"><span class="params">num</span> =&gt;</span> num - <span class="number">1</span>;</span><br><span class="line"><span class="keyword">const</span> fnArr = [addFive, multiplyByTwo, subtractOne];</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(functionValidator(fnArr, <span class="number">5</span>, <span class="number">10</span>)) <span class="comment">// should log [num =&gt; num + 5, num =&gt; num * 2]</span></span><br></pre></td></tr></table></figure><h3 id="挑战2-allClear"><a href="#挑战2-allClear" class="headerlink" title="挑战2 allClear"></a>挑战2 allClear</h3><p><strong>问题：</strong></p><p>构建allClear函数，接受参数为一个由验证型函数（返回布尔值）组成的数组和一个数值。allClear中应使用reduce来返回一个布尔值从而表明输入数值是否可以通过输入函数数组中的所有函数（即皆返回true）。</p><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Challenge 2</span></span><br><span class="line"><span class="keyword">const</span> allClear = <span class="function">(<span class="params">funcArr, value</span>) =&gt;</span> &#123;</span><br><span class="line"><span class="comment">// // Solution 1: </span></span><br><span class="line"><span class="comment">// let indicator = false;</span></span><br><span class="line"><span class="comment">// indicator = funcArr.reduce((acc, curr) =&gt; &#123;</span></span><br><span class="line"><span class="comment">// if(acc == true &amp;&amp; curr(value) === true) &#123;</span></span><br><span class="line"><span class="comment">// acc = true;</span></span><br><span class="line"><span class="comment">// &#125; else &#123;</span></span><br><span class="line"><span class="comment">// acc = false;</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="comment">// return acc;</span></span><br><span class="line"><span class="comment">// &#125;, true)</span></span><br><span class="line"><span class="comment">// return indicator; </span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">// Solution 2: </span></span><br><span class="line">  <span class="keyword">return</span> funcArr.reduce(<span class="function">(<span class="params">acc, curr</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span>(acc) <span class="keyword">return</span> curr(value);</span><br><span class="line">    <span class="keyword">return</span> acc;</span><br><span class="line">  &#125;, <span class="literal">true</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> isOdd = <span class="function"><span class="params">num</span> =&gt;</span> num % <span class="number">2</span> === <span class="number">1</span>;</span><br><span class="line"><span class="keyword">const</span> isPositive = <span class="function"><span class="params">num</span> =&gt;</span> num &gt; <span class="number">0</span>;</span><br><span class="line"><span class="keyword">const</span> multipleOfFive = <span class="function"><span class="params">num</span> =&gt;</span> num % <span class="number">5</span> === <span class="number">0</span>;</span><br><span class="line"><span class="keyword">const</span> numFnArr = [isOdd, isPositive, multipleOfFive];</span><br><span class="line"><span class="built_in">console</span>.log(allClear(numFnArr, <span class="number">25</span>)) <span class="comment">// should log true </span></span><br><span class="line"><span class="built_in">console</span>.log(allClear(numFnArr, <span class="number">-25</span>)) <span class="comment">// should log false</span></span><br></pre></td></tr></table></figure><h3 id="挑战3-numSelectString"><a href="#挑战3-numSelectString" class="headerlink" title="挑战3 numSelectString"></a>挑战3 numSelectString</h3><p><strong>问题：</strong></p><p>构建numSelectString函数，接受参数为数值型数组，返回一个字符串。此函数应使用filter、sort和reduce来返回一个仅包含输入数组中的奇数的字符串，以半角逗号隔开，且升序。</p><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Challenge 3</span></span><br><span class="line"><span class="keyword">const</span> numSelectString = <span class="function">(<span class="params">numArr</span>) =&gt;</span> &#123;</span><br><span class="line"><span class="comment">// // Solution 1: </span></span><br><span class="line"><span class="comment">// let strNumArr = "";</span></span><br><span class="line"><span class="comment">// let numOddArr = [];</span></span><br><span class="line"><span class="comment">// numOddArr = numArr.reduce((acc, curr) =&gt; &#123;</span></span><br><span class="line"><span class="comment">// if(curr % 2 == 1)&#123;</span></span><br><span class="line"><span class="comment">// acc.push(curr);</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="comment">// return acc;</span></span><br><span class="line"><span class="comment">// &#125;, [])</span></span><br><span class="line"><span class="comment">// numOddArr.sort((a,b) =&gt; a-b);</span></span><br><span class="line"><span class="comment">// numOddArr.forEach((el) =&gt; &#123;</span></span><br><span class="line"><span class="comment">// if(strNumArr == "") &#123;</span></span><br><span class="line"><span class="comment">// strNumArr += el.toString();</span></span><br><span class="line"><span class="comment">// &#125; else &#123;</span></span><br><span class="line"><span class="comment">// strNumArr += ", " + el.toString();</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="comment">// &#125;)</span></span><br><span class="line"><span class="comment">// return strNumArr;</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">// Solution 2: </span></span><br><span class="line">  <span class="keyword">return</span> numArr.sort(<span class="function">(<span class="params">a,b</span>) =&gt;</span> a - b)</span><br><span class="line">  .filter(<span class="function"><span class="params">num</span> =&gt;</span> num % <span class="number">2</span> === <span class="number">1</span>)</span><br><span class="line">  .reduce(<span class="function">(<span class="params">acc, curr</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> acc + <span class="string">", "</span> + curr;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> numbers = [<span class="number">17</span>, <span class="number">34</span>, <span class="number">3</span>, <span class="number">12</span>]</span><br><span class="line"><span class="built_in">console</span>.log(numSelectString(numbers)) <span class="comment">// should log "3, 17"</span></span><br></pre></td></tr></table></figure><h3 id="挑战4-movieSelector"><a href="#挑战4-movieSelector" class="headerlink" title="挑战4 movieSelector"></a>挑战4 movieSelector</h3><p><strong>问题：</strong></p><p>构建movieSelector函数，接受参数为一个对象型数组（对象为电影信息，含id、标题和分数）。请在movieSeletor函数内链式调用map、filter和reduce，返回一个仅包含分数大于5的电影标题的数组。电影标题应全为大写。</p><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Challenge 4</span></span><br><span class="line"><span class="keyword">const</span> movieSelector = <span class="function">(<span class="params">moviesArr</span>) =&gt;</span> &#123;</span><br><span class="line"><span class="keyword">return</span> moviesArr.map( <span class="function"><span class="params">el</span> =&gt;</span> &#123; <span class="keyword">return</span> &#123;<span class="string">"title"</span>: el.title.toUpperCase(), <span class="string">"score"</span>: el.score&#125;&#125;)</span><br><span class="line">  .filter( <span class="function"><span class="params">el</span> =&gt;</span> el.score &gt; <span class="number">5</span>)</span><br><span class="line">.reduce(<span class="function">(<span class="params">acc, curr</span>) =&gt;</span> &#123;</span><br><span class="line">        acc.push(curr.title);</span><br><span class="line">    <span class="keyword">return</span> acc;</span><br><span class="line">      &#125;, [])</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> movies = [ &#123; <span class="attr">id</span>: <span class="number">1</span>, <span class="attr">title</span>: <span class="string">"Pan's Labyrinth"</span>, <span class="attr">score</span>: <span class="number">9</span> &#125;, &#123; <span class="attr">id</span>: <span class="number">37</span>, <span class="attr">title</span>: <span class="string">"Manos: The Hands of Fate"</span>, <span class="attr">score</span>: <span class="number">2</span> &#125;, &#123; <span class="attr">title</span>: <span class="string">"Air Bud"</span>, <span class="attr">score</span>: <span class="number">5</span> &#125;, &#123; <span class="attr">title</span>: <span class="string">"Hackers"</span>, <span class="attr">score</span>: <span class="number">7</span> &#125; ]</span><br><span class="line"><span class="built_in">console</span>.log(movieSelector(movies)) <span class="comment">// should log [ "PAN'S LABYRINTH", "HACKERS" ]</span></span><br></pre></td></tr></table></figure><h3 id="挑战5-curriedAddThreeNums"><a href="#挑战5-curriedAddThreeNums" class="headerlink" title="挑战5 curriedAddThreeNums"></a>挑战5 curriedAddThreeNums</h3><p><strong>问题：</strong></p><p>构建curriedAddThreeNums函数，共接受3个数值作为参数，每次调用输入一个数值，共调用三次，如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curriedAddThreeNums(<span class="number">1</span>)(<span class="number">3</span>)(<span class="number">7</span>) <span class="comment">//should return 10</span></span><br></pre></td></tr></table></figure><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Challenge 5</span></span><br><span class="line"><span class="keyword">const</span> curriedAddThreeNums = <span class="function">(<span class="params">num1</span>) =&gt;</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="function">(<span class="params">num2</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="function">(<span class="params">num3</span>) =&gt;</span>&#123;</span><br><span class="line">      <span class="keyword">return</span> num1 + num2 + num3;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(curriedAddThreeNums(<span class="number">3</span>)(<span class="number">-1</span>)(<span class="number">1</span>)); <span class="comment">// should log 3</span></span><br></pre></td></tr></table></figure><h3 id="挑战6-curriedAddTwoNumsToFive"><a href="#挑战6-curriedAddTwoNumsToFive" class="headerlink" title="挑战6 curriedAddTwoNumsToFive"></a>挑战6 curriedAddTwoNumsToFive</h3><p><strong>问题：</strong></p><p>部分借助你在挑战5中创建的curriedAddThreeNums函数来构建curriedAddTwoNumsToFive函数，此函数接受两个数组参数，每次调用输入一个数值，共两次，最终求得两个数值与5的和，如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curriedAddTwoNumsToFive(<span class="number">6</span>)(<span class="number">7</span>) <span class="comment">//should return 18</span></span><br></pre></td></tr></table></figure><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Challenge 6</span></span><br><span class="line"><span class="keyword">const</span> curriedAddTwoNumsToFive = curriedAddThreeNums(<span class="number">5</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(curriedAddTwoNumsToFive(<span class="number">6</span>)(<span class="number">7</span>)) <span class="comment">// should log 18</span></span><br></pre></td></tr></table></figure><hr><p><img src="https://image-static.segmentfault.com/885/989/885989333-e28d1cc0476516cf_fix732" alt="13.raven"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;＠冒泡的马树&lt;/p&gt;
&lt;p&gt;题库原地址：&lt;a href=&quot;http://csbin.io/functional&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://csbin.io/functional&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;高阶函数&quot;&gt;&lt;a href=&quot;#高阶函数&quot; class=&quot;headerlink&quot; title=&quot;高阶函数&quot;&gt;&lt;/a&gt;高阶函数&lt;/h2&gt;&lt;h3 id=&quot;挑战1-addTwo&quot;&gt;&lt;a href=&quot;#挑战1-addTwo&quot; class=&quot;headerlink&quot; title=&quot;挑战1 addTwo&quot;&gt;&lt;/a&gt;挑战1 addTwo&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;问题：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;构建一个addTwo函数，作用为接受一个参数并将参数加2。&lt;/p&gt;
    
    </summary>
    
    
      <category term="JavaScript" scheme="http://lesliewong.cn/categories/JavaScript/"/>
    
      <category term="算法" scheme="http://lesliewong.cn/categories/JavaScript/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="JavaScript" scheme="http://lesliewong.cn/tags/JavaScript/"/>
    
      <category term="算法" scheme="http://lesliewong.cn/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript专项算法题（1）：回调和高阶函数</title>
    <link href="http://lesliewong.cn/2020/06/19/JavaScript-algorithms-callbacks-and-higher-order-functions/"/>
    <id>http://lesliewong.cn/2020/06/19/JavaScript-algorithms-callbacks-and-higher-order-functions/</id>
    <published>2020-06-19T12:45:30.000Z</published>
    <updated>2024-01-18T04:35:57.840Z</updated>
    
    <content type="html"><![CDATA[<p>＠冒泡的马树</p><p>题库原地址：<a href="http://csbin.io/callbacks" target="_blank" rel="noopener">http://csbin.io/callbacks</a></p><h3 id="挑战1-addTwo"><a href="#挑战1-addTwo" class="headerlink" title="挑战1 addTwo"></a>挑战1 addTwo</h3><p><strong>问题：</strong></p><p>构建一个addTwo函数，作用为接受一个参数并将参数加2。</p><a id="more"></a> <p><strong>题解：</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Challenge 1</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">addTwo</span>(<span class="params">num</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> num + <span class="number">2</span>; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// To check if you've completed it, uncomment these console.logs!</span></span><br><span class="line"><span class="built_in">console</span>.log(addTwo(<span class="number">3</span>));</span><br><span class="line"><span class="built_in">console</span>.log(addTwo(<span class="number">10</span>));</span><br></pre></td></tr></table></figure><h3 id="挑战2-addS"><a href="#挑战2-addS" class="headerlink" title="挑战2 addS"></a>挑战2 addS</h3><p><strong>问题：</strong></p><p>构建一个addS函数，作用为接受一个参数并将参数与“S”拼接。</p><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Challenge 2</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">addS</span>(<span class="params">word</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> word + <span class="string">"S"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// uncomment these to check your work</span></span><br><span class="line"><span class="built_in">console</span>.log(addS(<span class="string">'pizza'</span>));</span><br><span class="line"><span class="built_in">console</span>.log(addS(<span class="string">'bagel'</span>));</span><br></pre></td></tr></table></figure><h3 id="挑战3-map"><a href="#挑战3-map" class="headerlink" title="挑战3 map"></a>挑战3 map</h3><p><strong>问题：</strong></p><p>构建一个map函数，其接受两个参数：</p><ol><li>数值型数组</li><li>回调函数——一个应用于上述数值型数组中的每一个元素的函数（于map函数内）</li></ol><p>map函数的返回值为包含上述数值型数组元素逐个运行回调函数后生成的元素值的新数组。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">map([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>], multiplyByTwo); <span class="comment">//-&gt; [2,4,6,8,10]</span></span><br><span class="line">multiplyByTwo(<span class="number">1</span>); <span class="comment">//-&gt; 2</span></span><br><span class="line">multiplyByTwo(<span class="number">2</span>); <span class="comment">//-&gt; 4</span></span><br></pre></td></tr></table></figure><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Challenge 3</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">map</span>(<span class="params">array, callback</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> newArray = [];</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; array.length; i++) &#123;</span><br><span class="line">    newArray.push(callback(array[i]));</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> newArray;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(map([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], addTwo));</span><br></pre></td></tr></table></figure><h3 id="挑战４forEach"><a href="#挑战４forEach" class="headerlink" title="挑战４forEach"></a>挑战４forEach</h3><p><strong>问题：</strong></p><p>函数forEach接受一个数组和一个回调函数，运行回调函数于输入数组的每一个元素。forEach函数无返回值。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> alphabet = <span class="string">''</span>;</span><br><span class="line"><span class="keyword">const</span> letters = [<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>];</span><br><span class="line">forEach(letters, <span class="function"><span class="keyword">function</span>(<span class="params">char</span>) </span>&#123;</span><br><span class="line">  alphabet += char;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">console</span>.log(alphabet);   <span class="comment">//prints 'abcd'</span></span><br></pre></td></tr></table></figure><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Challenge 4</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">forEach</span>(<span class="params">array, callback</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i =<span class="number">0</span>; i &lt; array.length; i++) &#123;</span><br><span class="line">    callback(array[i]);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// see for yourself if your forEach works!</span></span><br><span class="line"><span class="keyword">let</span> alphabet = <span class="string">''</span>;</span><br><span class="line"><span class="keyword">const</span> letters = [<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>];</span><br><span class="line">forEach(letters, <span class="function"><span class="keyword">function</span>(<span class="params">char</span>) </span>&#123;</span><br><span class="line">  alphabet += char;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">console</span>.log(alphabet);   <span class="comment">//prints 'abcd'</span></span><br></pre></td></tr></table></figure><h3 id="挑战5-mapWith"><a href="#挑战5-mapWith" class="headerlink" title="挑战5 mapWith"></a>挑战5 mapWith</h3><p><strong>问题：</strong></p><p>在这个挑战中，你需要将map函数重构为mapWith。这一次你要在mapWith中使用forEach函数而不是使用for循环。</p><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Challenge 5</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">mapWith</span>(<span class="params">array, callback</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> newArray = [];</span><br><span class="line">  forEach(array, <span class="function"><span class="keyword">function</span>(<span class="params">item</span>)</span>&#123;</span><br><span class="line">    newArray.push(callback(item))&#125;);</span><br><span class="line">  <span class="keyword">return</span> newArray;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(mapWith([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], addTwo));</span><br></pre></td></tr></table></figure><h3 id="挑战6-reduce"><a href="#挑战6-reduce" class="headerlink" title="挑战6 reduce"></a>挑战6 reduce</h3><p><strong>问题：</strong></p><p>函数reduce接受一个数组并将数组内的所有值合并为一个值。比如，它可以将数组求和，求积，以及其它你想加进函数中的操作。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> nums = [<span class="number">4</span>, <span class="number">1</span>, <span class="number">3</span>];</span><br><span class="line"><span class="keyword">const</span> add = <span class="function"><span class="keyword">function</span>(<span class="params">a, b</span>) </span>&#123; <span class="keyword">return</span> a + b; &#125;</span><br><span class="line">reduce(nums, add, <span class="number">0</span>);   <span class="comment">//-&gt; 8</span></span><br></pre></td></tr></table></figure><p>以下是它的运行原理。函数有一个“累加器值”（第三个参数），作用为充当初始值并且累加每一次循环的输出值。数组参数会被遍历，传递“累加器值“和新的数组元素值作为参数到回调函数中。回调函数的返回值会成为新的”累加器值“。下一个循环会使用这个新”累加器值“。在上面的例子中，”累加器值“刚开始为0，调用add(0, 4)，”累加器值“变为4，然后add(4, 1)将其变为5，最后add(5, 3)得到8并最终返回。</p><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Challenge 6</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">reduce</span>(<span class="params">array, callback, initialValue</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// // Solution 1：</span></span><br><span class="line">  <span class="comment">// var callbackValue = 0;</span></span><br><span class="line">  <span class="comment">// var finalResult = 0;</span></span><br><span class="line">  <span class="comment">// for(let i = 0; i&lt;array.length; i++) &#123;</span></span><br><span class="line">  <span class="comment">//  if (i == 0)&#123;</span></span><br><span class="line">  <span class="comment">// callbackValue = array[i];</span></span><br><span class="line">  <span class="comment">// finalResult = callback(callbackValue, initialValue);</span></span><br><span class="line">  <span class="comment">// &#125; else &#123;</span></span><br><span class="line">  <span class="comment">// finalResult = callback(finalResult, array[i]);</span></span><br><span class="line">  <span class="comment">// &#125;</span></span><br><span class="line">  <span class="comment">// &#125;</span></span><br><span class="line">  <span class="comment">// return finalResult;</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">// Solution 2:</span></span><br><span class="line">  <span class="keyword">let</span> reduceValue = initialValue;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; array.length; i++)&#123;</span><br><span class="line">    reduceValue = callback(array[i], reduceValue);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> reduceValue;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> nums = [<span class="number">4</span>, <span class="number">1</span>, <span class="number">3</span>];</span><br><span class="line"><span class="keyword">const</span> add = <span class="function"><span class="keyword">function</span>(<span class="params">a, b</span>) </span>&#123; <span class="keyword">return</span> a + b; &#125;</span><br><span class="line"><span class="built_in">console</span>.log(reduce(nums, add, <span class="number">0</span>)); <span class="comment">//-&gt; 8</span></span><br></pre></td></tr></table></figure><h3 id="挑战7-intersection"><a href="#挑战7-intersection" class="headerlink" title="挑战7 intersection"></a>挑战7 intersection</h3><p><strong>问题：</strong></p><p>构建intersection函数，作用为比较输入进来的多组数组并返回一个包含数组间共同元素的新数组。奖励：使用reduce！</p><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Challenge 7</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">intersection</span>(<span class="params">arrays</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// Solution 1 (without reduce): </span></span><br><span class="line">  <span class="comment">// var obj = &#123;&#125;;</span></span><br><span class="line">  <span class="comment">// for(let i=0; i&lt;arrays.length; i++)&#123;</span></span><br><span class="line">  <span class="comment">//   if(i==0)&#123;</span></span><br><span class="line">  <span class="comment">//     for(var j=0;j&lt;arrays[i].length; j++)&#123;</span></span><br><span class="line">  <span class="comment">//       obj[arrays[i][j]]=arrays[i][j];</span></span><br><span class="line">  <span class="comment">//     &#125;</span></span><br><span class="line">  <span class="comment">//   &#125; else &#123;</span></span><br><span class="line">  <span class="comment">// for(var j=0;j&lt;arrays[i].length; j++)&#123;</span></span><br><span class="line">  <span class="comment">//     // console.log(obj[arrays[i][j]])</span></span><br><span class="line">  <span class="comment">//     if(obj[arrays[i][j]] != undefined)&#123;</span></span><br><span class="line">  <span class="comment">//       obj[arrays[i][j]]= obj[arrays[i][j]] + 1;</span></span><br><span class="line">  <span class="comment">//     &#125;</span></span><br><span class="line">  <span class="comment">//   &#125;</span></span><br><span class="line">  <span class="comment">// &#125;</span></span><br><span class="line">  <span class="comment">// &#125;</span></span><br><span class="line">  <span class="comment">// for(var k in obj) &#123;</span></span><br><span class="line">  <span class="comment">//   if(k != obj[k] - arrays.length + 1) &#123;</span></span><br><span class="line">  <span class="comment">//     delete obj[k];</span></span><br><span class="line">  <span class="comment">//   &#125;</span></span><br><span class="line">  <span class="comment">// &#125;</span></span><br><span class="line">  <span class="comment">// var intersectionArray = [];</span></span><br><span class="line">  <span class="comment">// for(var z in obj)&#123;</span></span><br><span class="line">  <span class="comment">//   intersectionArray.push(parseInt(z));</span></span><br><span class="line">  <span class="comment">// &#125;</span></span><br><span class="line">  <span class="comment">// return intersectionArray;</span></span><br><span class="line">    </span><br><span class="line">  <span class="comment">// Solution 2 (with reduce):</span></span><br><span class="line">  <span class="keyword">return</span> arrays.reduce(<span class="function">(<span class="params">acc, curr</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> curr.filter(<span class="function"><span class="params">el</span> =&gt;</span> acc.includes(el));</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(intersection([[<span class="number">5</span>, <span class="number">10</span>, <span class="number">15</span>, <span class="number">20</span>], [<span class="number">15</span>, <span class="number">88</span>, <span class="number">1</span>, <span class="number">5</span>, <span class="number">7</span>], [<span class="number">1</span>, <span class="number">10</span>, <span class="number">15</span>, <span class="number">5</span>, <span class="number">20</span>]]));</span><br><span class="line"><span class="comment">// should log: [5, 15]</span></span><br></pre></td></tr></table></figure><h3 id="挑战８-union"><a href="#挑战８-union" class="headerlink" title="挑战８ union"></a>挑战８ union</h3><p><strong>问题：</strong></p><p>构建union函数，作用为比较输入进来的多组数组并返回一个包含输入数组中所有元素的新数组。如果存在重复元素，则新数组中仅保留一个，另外需保留新数组的元素顺序为从第一个输入数组的第一个元素开始。奖励：使用reduce！</p><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Challenge 8</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">union</span>(<span class="params">arrays</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// // Solution 1 (without reduce):</span></span><br><span class="line">  <span class="comment">// var obj = &#123;&#125;;</span></span><br><span class="line">  <span class="comment">// for(let i=0; i&lt;arrays.length; i++)&#123;</span></span><br><span class="line">  <span class="comment">//   if(i==0)&#123;</span></span><br><span class="line">  <span class="comment">//     for(var j=0;j&lt;arrays[i].length; j++)&#123;</span></span><br><span class="line">  <span class="comment">//       obj[arrays[i][j]]=arrays[i][j];</span></span><br><span class="line">  <span class="comment">//     &#125;</span></span><br><span class="line">  <span class="comment">//   &#125; else &#123;</span></span><br><span class="line">  <span class="comment">// for(var j=0;j&lt;arrays[i].length; j++)&#123;</span></span><br><span class="line">  <span class="comment">//     // console.log(obj[arrays[i][j]])</span></span><br><span class="line">  <span class="comment">//     if(obj[arrays[i][j]] == undefined)&#123;</span></span><br><span class="line">  <span class="comment">//       obj[arrays[i][j]]= arrays[i][j];</span></span><br><span class="line">  <span class="comment">//     &#125;</span></span><br><span class="line">  <span class="comment">//   &#125;</span></span><br><span class="line">  <span class="comment">// &#125;</span></span><br><span class="line">  <span class="comment">// &#125;</span></span><br><span class="line">  <span class="comment">// var unionArray = [];</span></span><br><span class="line">  <span class="comment">// for(var z in obj)&#123;</span></span><br><span class="line">  <span class="comment">//   unionArray.push(parseInt(z));</span></span><br><span class="line">  <span class="comment">// &#125;</span></span><br><span class="line">  <span class="comment">// return unionArray;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// Solution 2 (with reduce): </span></span><br><span class="line">  <span class="keyword">return</span> arrays.reduce(<span class="function">(<span class="params">acc, curr</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> newElements = curr.filter(<span class="function"><span class="params">el</span> =&gt;</span> !acc.includes(el));</span><br><span class="line">    <span class="keyword">return</span> acc.concat(newElements);</span><br><span class="line">  &#125;</span><br><span class="line">  )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(union([[<span class="number">5</span>, <span class="number">10</span>, <span class="number">15</span>], [<span class="number">15</span>, <span class="number">88</span>, <span class="number">1</span>, <span class="number">5</span>, <span class="number">7</span>], [<span class="number">100</span>, <span class="number">15</span>, <span class="number">10</span>, <span class="number">1</span>, <span class="number">5</span>]]));</span><br><span class="line"><span class="comment">// should log: [5, 10, 15, 88, 1, 7, 100]</span></span><br></pre></td></tr></table></figure><h3 id="挑战9-objOfMatches"><a href="#挑战9-objOfMatches" class="headerlink" title="挑战9 objOfMatches"></a>挑战9 objOfMatches</h3><p><strong>问题：</strong></p><p>构建objOfMatches函数，接受两个数组和一个回调函数作为参数，作用为创建一个特定对象并返回。objOfMatches会使用回调函数测试第一个数组的每一个元素以确认其输出是否匹配于第二个数组内相同下标的元素。如果匹配，第一个数组内的这个元素会成为所创建对象的键，而第二个数组内的相同下标元素则会成为对应的值。</p><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Challenge 9</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">objOfMatches</span>(<span class="params">array1, array2, callback</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> matchObj = &#123;&#125;;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; array1.length; i++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(callback(array1[i]) === array2[i]) &#123;</span><br><span class="line">      matchObj[array1[i]] = array2[i];</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> matchObj;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(objOfMatches([<span class="string">'hi'</span>, <span class="string">'howdy'</span>, <span class="string">'bye'</span>, <span class="string">'later'</span>, <span class="string">'hello'</span>], [<span class="string">'HI'</span>, <span class="string">'Howdy'</span>, <span class="string">'BYE'</span>, <span class="string">'LATER'</span>, <span class="string">'hello'</span>], <span class="function"><span class="keyword">function</span>(<span class="params">str</span>) </span>&#123; <span class="keyword">return</span> str.toUpperCase(); &#125;));</span><br><span class="line"><span class="comment">// should log: &#123; hi: 'HI', bye: 'BYE', later: 'LATER' &#125;</span></span><br></pre></td></tr></table></figure><h3 id="挑战10-multiMap"><a href="#挑战10-multiMap" class="headerlink" title="挑战10 multiMap"></a>挑战10 multiMap</h3><p><strong>问题：</strong></p><p>构建multiMap函数，接受两个数组作为参数，第一个数组的元素为值而第二个数组的元素为回调函数。multiMap会返回一个特定对象，该对象的键为第一个数组的值，键对应的值则是将键依序传入第二个数组的回调函数中得到的返回值组成的新数组。</p><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Challenge 10</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">multiMap</span>(<span class="params">arrVals, arrCallbacks</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> multiMapObj = &#123;&#125;;</span><br><span class="line">  <span class="keyword">let</span> tempArray = [];</span><br><span class="line">  arrVals.forEach(<span class="function"><span class="params">el</span> =&gt;</span> &#123;</span><br><span class="line">    tempArray = [];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i =<span class="number">0</span>; i&lt;arrCallbacks.length; i++)&#123;</span><br><span class="line">      tempArray.push(arrCallbacks[i](el));</span><br><span class="line">    &#125;</span><br><span class="line">    multiMapObj[el] = tempArray;</span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="keyword">return</span> multiMapObj;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(multiMap([<span class="string">'catfood'</span>, <span class="string">'glue'</span>, <span class="string">'beer'</span>], [<span class="function"><span class="keyword">function</span>(<span class="params">str</span>) </span>&#123; <span class="keyword">return</span> str.toUpperCase(); &#125;, <span class="function"><span class="keyword">function</span>(<span class="params">str</span>) </span>&#123; <span class="keyword">return</span> str[<span class="number">0</span>].toUpperCase() + str.slice(<span class="number">1</span>).toLowerCase(); &#125;, <span class="function"><span class="keyword">function</span>(<span class="params">str</span>) </span>&#123; <span class="keyword">return</span> str + str; &#125;]));</span><br><span class="line"><span class="comment">// should log: &#123; catfood: ['CATFOOD', 'Catfood', 'catfoodcatfood'], glue: ['GLUE', 'Glue', 'glueglue'], beer: ['BEER', 'Beer', 'beerbeer'] &#125;</span></span><br></pre></td></tr></table></figure><h3 id="挑战11-objectFilter"><a href="#挑战11-objectFilter" class="headerlink" title="挑战11 objectFilter"></a>挑战11 objectFilter</h3><p><strong>问题：</strong></p><p>构建objectFilter函数，第一个参数为对象，第二个参数为回调函数。objectFilter函数会返回特定对象。此特定对象所包含的属性为输入对象中值与其对应键传入回调函数得到的返回值一致的键值对。</p><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Challenge 11</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">objectFilter</span>(<span class="params">obj, callback</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> objectFilterObj = &#123;&#125;;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">let</span> key <span class="keyword">in</span> obj) &#123;</span><br><span class="line">    <span class="keyword">if</span>(obj[key] === callback(key))&#123;</span><br><span class="line">      objectFilterObj[key] = obj[key];</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> objectFilterObj;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> cities = &#123;</span><br><span class="line">London: <span class="string">'LONDON'</span>,</span><br><span class="line">LA: <span class="string">'Los Angeles'</span>,</span><br><span class="line">Paris: <span class="string">'PARIS'</span>,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="built_in">console</span>.log(objectFilter(cities, city =&gt; city.toUpperCase())) <span class="comment">// Should log &#123; London: 'LONDON', Paris: 'PARIS'&#125;</span></span><br></pre></td></tr></table></figure><h3 id="挑战12-majority"><a href="#挑战12-majority" class="headerlink" title="挑战12 majority"></a>挑战12 majority</h3><p><strong>问题:</strong></p><p>构建majority函数，接受参数为一个数组和一个回调函数。回调函数的返回值为true或false。majority会遍历输入数组的元素并且对其运行回调函数，直到能够确定大多数回调函数的返回值为true。如果返回true的数目与返回false的数目相同，majority应返回false。</p><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Challenge 12</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">majority</span>(<span class="params">array, callback</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> trueCounter = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">let</span> falseCounter = <span class="number">0</span>;</span><br><span class="line">  array.forEach(<span class="function"><span class="params">el</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span>(callback(el)) &#123;</span><br><span class="line">      trueCounter++;</span><br><span class="line">    &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">      falseCounter++;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">return</span> (trueCounter&gt;falseCounter)?<span class="literal">true</span>:<span class="literal">false</span>;</span><br><span class="line">  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*** Uncomment these to check your work! ***/</span></span><br><span class="line"><span class="comment">// const isOdd = function(num) &#123; return num % 2 === 1; &#125;;</span></span><br><span class="line"><span class="built_in">console</span>.log(majority([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>], isOdd)); <span class="comment">// should log: true</span></span><br><span class="line"><span class="built_in">console</span>.log(majority([<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>], isOdd)); <span class="comment">// should log: false</span></span><br></pre></td></tr></table></figure><h3 id="挑战13-prioritize"><a href="#挑战13-prioritize" class="headerlink" title="挑战13 prioritize"></a>挑战13 prioritize</h3><p><strong>问题：</strong></p><p>构建prioritize函数，接受参数为一个数组和一个回调函数。回调函数的返回值为true或false。prioritize会遍历输入数组的元素并且对其运行回调函数，然后返回一个新数组。这个新数组会先储存输入数组中被回调函数返回true的元素，再储存输入数组中剩下的元素。</p><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Challenge 13</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">prioritize</span>(<span class="params">array, callback</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> prioritizeArray = [];</span><br><span class="line">  <span class="keyword">const</span> restArray = [];</span><br><span class="line">  array.forEach(<span class="function"><span class="params">el</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span>(callback(el))&#123;</span><br><span class="line">      prioritizeArray.push(el);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      restArray.push(el);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="keyword">return</span> prioritizeArray.concat(restArray); </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*** Uncomment these to check your work! ***/</span></span><br><span class="line"><span class="keyword">const</span> startsWithS = <span class="function"><span class="keyword">function</span>(<span class="params">str</span>) </span>&#123; <span class="keyword">return</span> str[<span class="number">0</span>] === <span class="string">'s'</span> || str[<span class="number">0</span>] === <span class="string">'S'</span>; &#125;;</span><br><span class="line"><span class="built_in">console</span>.log(prioritize([<span class="string">'curb'</span>, <span class="string">'rickandmorty'</span>, <span class="string">'seinfeld'</span>, <span class="string">'sunny'</span>, <span class="string">'friends'</span>], startsWithS)); <span class="comment">// should log: ['seinfeld', 'sunny', 'curb', 'rickandmorty', 'friends']</span></span><br></pre></td></tr></table></figure><h3 id="挑战14-countBy"><a href="#挑战14-countBy" class="headerlink" title="挑战14 countBy"></a>挑战14 countBy</h3><p><strong>问题：</strong></p><p>构建countBy函数，接受参数为一个数组和一个回调函数，返回值为一个特定对象。countBy会遍历输入数组的元素并对其运行回调函数。每一个运行回调函数得到的返回值会被储存为特定对象的键，而键对应的值则为得到此返回值的回调函数运行的次数。</p><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Challenge 14</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">countBy</span>(<span class="params">array, callback</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> countByObj = &#123;&#125;;</span><br><span class="line">  array.forEach(<span class="function"><span class="params">el</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span>(countByObj[callback(el)] == <span class="literal">undefined</span>) &#123;</span><br><span class="line">      countByObj[callback(el)] = <span class="number">1</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      countByObj[callback(el)]++;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="keyword">return</span> countByObj;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*** Uncomment these to check your work! ***/</span></span><br><span class="line"><span class="built_in">console</span>.log(countBy([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>], <span class="function"><span class="keyword">function</span>(<span class="params">num</span>) </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (num % <span class="number">2</span> === <span class="number">0</span>) <span class="keyword">return</span> <span class="string">'even'</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> <span class="string">'odd'</span>;</span><br><span class="line">&#125;)); <span class="comment">// should log: &#123; odd: 3, even: 2 &#125;</span></span><br></pre></td></tr></table></figure><h3 id="挑战15-groupBy"><a href="#挑战15-groupBy" class="headerlink" title="挑战15 groupBy"></a>挑战15 groupBy</h3><p><strong>问题：</strong></p><p>构建groupBy函数，接受参数为一个数组和一个回调函数，返回值为一个特定对象。groupBy会遍历输入数组的元素并对其运行回调函数。每一个运行回调函数得到的返回值会被储存为特定对象的键，而键对应的值则为一个由导致回调函数产生此返回值的输入数组的元素组成的数组。</p><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Challenge 15</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">groupBy</span>(<span class="params">array, callback</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> groupByObj = &#123;&#125;;</span><br><span class="line">  array.forEach(<span class="function"><span class="params">el</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span>(groupByObj[callback(el)] === <span class="literal">undefined</span>) &#123;</span><br><span class="line">      groupByObj[callback(el)] = [el];</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      groupByObj[callback(el)] = groupByObj[callback(el)].concat([el]); </span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="keyword">return</span> groupByObj;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*** Uncomment these to check your work! ***/</span></span><br><span class="line"><span class="keyword">const</span> decimals = [<span class="number">1.3</span>, <span class="number">2.1</span>, <span class="number">2.4</span>];</span><br><span class="line"><span class="keyword">const</span> floored = <span class="function"><span class="keyword">function</span>(<span class="params">num</span>) </span>&#123; <span class="keyword">return</span> <span class="built_in">Math</span>.floor(num); &#125;;</span><br><span class="line"><span class="built_in">console</span>.log(groupBy(decimals, floored)); <span class="comment">// should log: &#123; 1: [1.3], 2: [2.1, 2.4] &#125;</span></span><br></pre></td></tr></table></figure><h3 id="挑战16-goodKeys"><a href="#挑战16-goodKeys" class="headerlink" title="挑战16 goodKeys"></a>挑战16 goodKeys</h3><p><strong>问题：</strong></p><p>构建goodKeys函数，接受参数为一个对象和一个回调函数。回调函数的返回值为true或false。goodKeys会遍历输入对象并运行回调函数于对象的值上。goodKeys的返回值为一个由运行回调函数后返回true的对象值所对应的对象键组成的数组。</p><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Challenge 16</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">goodKeys</span>(<span class="params">obj, callback</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> goodKeysArray = [];</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">let</span> key <span class="keyword">in</span> obj) &#123;</span><br><span class="line">    <span class="keyword">if</span>(callback(obj[key])) &#123;</span><br><span class="line">      goodKeysArray.push(key);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> goodKeysArray;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*** Uncomment these to check your work! ***/</span></span><br><span class="line"><span class="keyword">const</span> sunny = &#123; <span class="attr">mac</span>: <span class="string">'priest'</span>, <span class="attr">dennis</span>: <span class="string">'calculating'</span>, <span class="attr">charlie</span>: <span class="string">'birdlaw'</span>, <span class="attr">dee</span>: <span class="string">'bird'</span>, <span class="attr">frank</span>: <span class="string">'warthog'</span> &#125;;</span><br><span class="line"><span class="keyword">const</span> startsWithBird = <span class="function"><span class="keyword">function</span>(<span class="params">str</span>) </span>&#123; <span class="keyword">return</span> str.slice(<span class="number">0</span>, <span class="number">4</span>).toLowerCase() === <span class="string">'bird'</span>; &#125;;</span><br><span class="line"><span class="built_in">console</span>.log(goodKeys(sunny, startsWithBird)); <span class="comment">// should log: ['charlie', 'dee']</span></span><br></pre></td></tr></table></figure><h3 id="挑战17-commutative"><a href="#挑战17-commutative" class="headerlink" title="挑战17 commutative"></a>挑战17 commutative</h3><p><strong>问题：</strong></p><p>构建commutative函数，接受参数为两个回调函数和一个值。commutative会返回一个布尔值，从而表明运行第一个回调函数于输入值，再将得到的返回值输入到第二个回调函数中运行，得到的结果与逆序操作是否相同（即运行输入值于第二个回调函数，得到的返回值再输入到第一个回调函数中）。</p><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Challenge 17</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">commutative</span>(<span class="params">func1, func2, value</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(func1(func2(value)) === func2(func1(value))) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>; </span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*** Uncomment these to check your work! ***/</span></span><br><span class="line"><span class="keyword">const</span> multBy3 = <span class="function"><span class="params">n</span> =&gt;</span> n * <span class="number">3</span>;</span><br><span class="line"><span class="keyword">const</span> divBy4 = <span class="function"><span class="params">n</span> =&gt;</span> n / <span class="number">4</span>;</span><br><span class="line"><span class="keyword">const</span> subtract5 = <span class="function"><span class="params">n</span> =&gt;</span> n - <span class="number">5</span>;</span><br><span class="line"><span class="built_in">console</span>.log(commutative(multBy3, divBy4, <span class="number">11</span>)); <span class="comment">// should log: true</span></span><br><span class="line"><span class="built_in">console</span>.log(commutative(multBy3, subtract5, <span class="number">10</span>)); <span class="comment">// should log: false</span></span><br><span class="line"><span class="built_in">console</span>.log(commutative(divBy4, subtract5, <span class="number">48</span>)); <span class="comment">// should log: false</span></span><br></pre></td></tr></table></figure><h3 id="挑战18-objFilter"><a href="#挑战18-objFilter" class="headerlink" title="挑战18 objFilter"></a>挑战18 objFilter</h3><p><strong>问题：</strong></p><p>构建objFilter函数，接受参数为一个对象和一个回调函数，返回值为一个特定对象。objFilter会遍历输入对象，使用输入对象的键作为回调函数的输入。如果回调函数的输出与对应的对象值相等，此键值对会被复制到特定对象中。最后objFilter返回此特定对象。</p><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Challenge 18</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">objFilter</span>(<span class="params">obj, callback</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> objectFilterObj = &#123;&#125;;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">let</span> key <span class="keyword">in</span> obj) &#123;</span><br><span class="line">    <span class="keyword">if</span>(obj[key] === callback(key))&#123;</span><br><span class="line">      objectFilterObj[key] = obj[key];</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> objectFilterObj;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*** Uncomment these to check your work! ***/</span></span><br><span class="line"><span class="keyword">const</span> startingObj = &#123;&#125;;</span><br><span class="line">startingObj[<span class="number">6</span>] = <span class="number">3</span>;</span><br><span class="line">startingObj[<span class="number">2</span>] = <span class="number">1</span>;</span><br><span class="line">startingObj[<span class="number">12</span>] = <span class="number">4</span>;</span><br><span class="line"><span class="keyword">const</span> half = <span class="function"><span class="params">n</span> =&gt;</span> n / <span class="number">2</span>;</span><br><span class="line"><span class="built_in">console</span>.log(objFilter(startingObj, half)); <span class="comment">// should log: &#123; 2: 1, 6: 3 &#125;</span></span><br></pre></td></tr></table></figure><h3 id="挑战19-rating"><a href="#挑战19-rating" class="headerlink" title="挑战19 rating"></a>挑战19 rating</h3><p><strong>问题：</strong></p><p>构建rating函数，接受参数为一个由函数组成的数组和一个值。数组中的函数的返回值皆为true或false。rating会返回一个表明将输入值运行于数组中的函数会返回true的百分比数。</p><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Challenge 19</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">rating</span>(<span class="params">arrOfFuncs, value</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> trueCounter = <span class="number">0</span>;</span><br><span class="line">  arrOfFuncs.forEach(<span class="function"><span class="params">el</span>=&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span>(el(value))&#123;</span><br><span class="line">      trueCounter++;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="keyword">return</span> trueCounter/arrOfFuncs.length * <span class="number">100</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*** Uncomment these to check your work! ***/</span></span><br><span class="line"><span class="keyword">const</span> isEven = <span class="function"><span class="params">n</span> =&gt;</span> n % <span class="number">2</span> === <span class="number">0</span>;</span><br><span class="line"><span class="keyword">const</span> greaterThanFour = <span class="function"><span class="params">n</span> =&gt;</span> n &gt; <span class="number">4</span>;</span><br><span class="line"><span class="keyword">const</span> isSquare = <span class="function"><span class="params">n</span> =&gt;</span> <span class="built_in">Math</span>.sqrt(n) % <span class="number">1</span> === <span class="number">0</span>;</span><br><span class="line"><span class="keyword">const</span> hasSix = <span class="function"><span class="params">n</span> =&gt;</span> n.toString().includes(<span class="string">'6'</span>);</span><br><span class="line"><span class="keyword">const</span> checks = [isEven, greaterThanFour, isSquare, hasSix];</span><br><span class="line"><span class="built_in">console</span>.log(rating(checks, <span class="number">64</span>)); <span class="comment">// should log: 100</span></span><br><span class="line"><span class="built_in">console</span>.log(rating(checks, <span class="number">66</span>)); <span class="comment">// should log: 75</span></span><br></pre></td></tr></table></figure><h3 id="挑战20-pipe"><a href="#挑战20-pipe" class="headerlink" title="挑战20 pipe"></a>挑战20 pipe</h3><p><strong>问题：</strong></p><p>构建pipe函数，接受参数为一个由函数组成的数组和一个值。pipe会将输入值输入到数组的第一个函数中，然后再将得到的输出值输入到第二个函数中，然后输出值又再输入到第三个函数中，一直下去，直到得到数组的最后一个函数的输出值。pipe会返回这个最终输出值。</p><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Challenge 20</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">pipe</span>(<span class="params">arrOfFuncs, value</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> output = value;</span><br><span class="line">  arrOfFuncs.forEach(<span class="function"><span class="params">el</span> =&gt;</span> &#123;</span><br><span class="line">    output = el(output);</span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="keyword">return</span> output;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*** Uncomment these to check your work! ***/</span></span><br><span class="line"><span class="keyword">const</span> capitalize = <span class="function"><span class="params">str</span> =&gt;</span> str.toUpperCase();</span><br><span class="line"><span class="keyword">const</span> addLowerCase = <span class="function"><span class="params">str</span> =&gt;</span> str + str.toLowerCase();</span><br><span class="line"><span class="keyword">const</span> repeat = <span class="function"><span class="params">str</span> =&gt;</span> str + str;</span><br><span class="line"><span class="keyword">const</span> capAddlowRepeat = [capitalize, addLowerCase, repeat];</span><br><span class="line"><span class="built_in">console</span>.log(pipe(capAddlowRepeat, <span class="string">'cat'</span>)); <span class="comment">// should log: 'CATcatCATcat'</span></span><br></pre></td></tr></table></figure><h3 id="挑战21-highestFunc"><a href="#挑战21-highestFunc" class="headerlink" title="挑战21 highestFunc"></a>挑战21 highestFunc</h3><p><strong>问题：</strong></p><p>构建highestFunc函数，接受参数为一个对象（包含函数）和一个值。highestFunc会返回输入对象中运行输入值后得到最高值的函数所对应的键。</p><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Challenge 21</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">highestFunc</span>(<span class="params">objOfFuncs, subject</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> maxKey = <span class="string">""</span>;</span><br><span class="line">  <span class="keyword">let</span> maxNumber = <span class="built_in">Number</span>.NEGATIVE_INFINITY;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">let</span> key <span class="keyword">in</span> objOfFuncs) &#123;</span><br><span class="line">    <span class="keyword">if</span>(objOfFuncs[key](subject) &gt; maxNumber) &#123;</span><br><span class="line">      maxNumber = objOfFuncs[key](subject);</span><br><span class="line">      maxKey = key;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> maxKey;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*** Uncomment these to check your work! ***/</span></span><br><span class="line"><span class="keyword">const</span> groupOfFuncs = &#123;&#125;;</span><br><span class="line">groupOfFuncs.double = <span class="function"><span class="params">n</span> =&gt;</span> n * <span class="number">2</span>;</span><br><span class="line">groupOfFuncs.addTen = <span class="function"><span class="params">n</span> =&gt;</span> n + <span class="number">10</span>;</span><br><span class="line">groupOfFuncs.inverse = <span class="function"><span class="params">n</span> =&gt;</span> n * <span class="number">-1</span>;</span><br><span class="line"><span class="built_in">console</span>.log(highestFunc(groupOfFuncs, <span class="number">5</span>)); <span class="comment">// should log: 'addTen'</span></span><br><span class="line"><span class="built_in">console</span>.log(highestFunc(groupOfFuncs, <span class="number">11</span>)); <span class="comment">// should log: 'double'</span></span><br><span class="line"><span class="built_in">console</span>.log(highestFunc(groupOfFuncs, <span class="number">-20</span>)); <span class="comment">// should log: 'inverse'</span></span><br></pre></td></tr></table></figure><h3 id="挑战22-combineOperations"><a href="#挑战22-combineOperations" class="headerlink" title="挑战22 combineOperations"></a>挑战22 combineOperations</h3><p><strong>问题：</strong></p><p>构建combineOperations函数，接受参数为一个初始值和一个由函数组成的数组。conbineOperations会将初始值输入到输入数组的第一个函数中，得到的输出值再输入到第二个函数中，一直下去，直到输入数组中的每一个函数都被调用。combineOperations会返回输入数组的最后一个函数的输出值。</p><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// Challenge 22</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">combineOperations</span>(<span class="params">startVal, arrOfFuncs</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> output = startVal;</span><br><span class="line">  arrOfFuncs.forEach(<span class="function"><span class="params">el</span> =&gt;</span> &#123;</span><br><span class="line">    output = el(output);</span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="keyword">return</span> output;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">add100</span>(<span class="params">num</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> num + <span class="number">100</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">divByFive</span>(<span class="params">num</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> num / <span class="number">5</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">multiplyByThree</span>(<span class="params">num</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> num * <span class="number">3</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">multiplyFive</span>(<span class="params">num</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> num * <span class="number">5</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">addTen</span>(<span class="params">num</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> num + <span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*** Uncomment these to check your work! ***/</span></span><br><span class="line"><span class="built_in">console</span>.log(combineOperations(<span class="number">0</span>, [add100, divByFive, multiplyByThree])); <span class="comment">// Should output 60 --&gt;</span></span><br><span class="line"><span class="built_in">console</span>.log(combineOperations(<span class="number">0</span>, [divByFive, multiplyFive, addTen])); <span class="comment">// Should output 10</span></span><br></pre></td></tr></table></figure><h3 id="挑战23-myFunc"><a href="#挑战23-myFunc" class="headerlink" title="挑战23 myFunc"></a>挑战23 myFunc</h3><p><strong>问题：</strong></p><p>构建myFunc函数，接受参数为一个数组和一个回调函数。myFunc会依序将输入数组的元素输入到回调函数中。如果回调函数返回值为true，myFunc会返回当前数组元素的下标。如果回调函数从不返回true，myFunc会返回-1。</p><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Challenge 23</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">myFunc</span>(<span class="params">array, callback</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> returnIndicator = <span class="literal">false</span>;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>; i&lt; array.length; i++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(callback(array[i]))&#123;</span><br><span class="line">      returnIndicator = <span class="literal">true</span>;</span><br><span class="line">      <span class="keyword">return</span> i;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span>(!returnIndicator)&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> numbers = [<span class="number">2</span>, <span class="number">3</span>, <span class="number">6</span>, <span class="number">64</span>, <span class="number">10</span>, <span class="number">8</span>, <span class="number">12</span>];</span><br><span class="line"><span class="keyword">const</span> evens = [<span class="number">2</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">10</span>, <span class="number">12</span>, <span class="number">64</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isOdd</span>(<span class="params">num</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> (num % <span class="number">2</span> !== <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*** Uncomment these to check your work! ***/</span></span><br><span class="line"><span class="built_in">console</span>.log(myFunc(numbers, isOdd)); <span class="comment">// Output should be 1</span></span><br><span class="line"><span class="built_in">console</span>.log(myFunc(evens, isOdd)); <span class="comment">// Output should be -1</span></span><br></pre></td></tr></table></figure><h3 id="挑战24-myForEach"><a href="#挑战24-myForEach" class="headerlink" title="挑战24 myForEach"></a>挑战24 myForEach</h3><p><strong>问题：</strong></p><p>编写myForEach函数，接受参数为一个数组和一个回调函数。myForEach应该依序输入数组的每一个元素到回调函数中。myForEach的作用应该尽可能与原生的JavaScript数组方法.forEach()类似。</p><p><strong>题解：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// Challenge 24</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">myForEach</span>(<span class="params">array, callback</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i =<span class="number">0</span>; i &lt; array.length; i++) &#123;</span><br><span class="line">        <span class="comment">// To solve edge case: </span></span><br><span class="line">    <span class="comment">// var arr=[0, undefined, 2]; arr[10] = 10;</span></span><br><span class="line">        <span class="comment">// From https://gist.github.com/alexhawkins/28aaf610a3e76d8b8264#gistcomment-2209454</span></span><br><span class="line">        <span class="keyword">if</span>(i <span class="keyword">in</span> array)&#123;</span><br><span class="line">            callback(array[i]);</span><br><span class="line">        &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// You could not use arrow function to assign prototype method! </span></span><br><span class="line"><span class="built_in">Array</span>.prototype.myForEach = <span class="function"><span class="keyword">function</span>(<span class="params">callback</span>)  </span>&#123;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">let</span> i =<span class="number">0</span>; i&lt;<span class="keyword">this</span>.length; i++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(i <span class="keyword">in</span> <span class="keyword">this</span>) &#123;</span><br><span class="line">        callback(<span class="keyword">this</span>[i], i, <span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> sum = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">addToSum</span>(<span class="params">num</span>) </span>&#123;</span><br><span class="line">  sum += num;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*** Uncomment these to check your work! ***/</span></span><br><span class="line"><span class="keyword">const</span> numsArray = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br><span class="line">myForEach(numsArray, addToSum);</span><br><span class="line"><span class="built_in">console</span>.log(sum); <span class="comment">// Should output 6</span></span><br><span class="line"></span><br><span class="line">sum = <span class="number">0</span>;</span><br><span class="line">numsArray.myForEach(addToSum);</span><br><span class="line"><span class="built_in">console</span>.log(sum); <span class="comment">// Should output 6, too.</span></span><br></pre></td></tr></table></figure><p><img src="https://image-static.segmentfault.com/368/912/3689125541-53fc7437b6300a2d_fix732" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;＠冒泡的马树&lt;/p&gt;
&lt;p&gt;题库原地址：&lt;a href=&quot;http://csbin.io/callbacks&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://csbin.io/callbacks&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;挑战1-addTwo&quot;&gt;&lt;a href=&quot;#挑战1-addTwo&quot; class=&quot;headerlink&quot; title=&quot;挑战1 addTwo&quot;&gt;&lt;/a&gt;挑战1 addTwo&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;问题：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;构建一个addTwo函数，作用为接受一个参数并将参数加2。&lt;/p&gt;
    
    </summary>
    
    
      <category term="JavaScript" scheme="http://lesliewong.cn/categories/JavaScript/"/>
    
      <category term="算法" scheme="http://lesliewong.cn/categories/JavaScript/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="JavaScript" scheme="http://lesliewong.cn/tags/JavaScript/"/>
    
      <category term="算法" scheme="http://lesliewong.cn/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>借助诗词API和微博图床搭建自动发图文微博机器人</title>
    <link href="http://lesliewong.cn/2019/03/15/build-a-weibo-bot-with-some-data-api/"/>
    <id>http://lesliewong.cn/2019/03/15/build-a-weibo-bot-with-some-data-api/</id>
    <published>2019-03-15T12:45:30.000Z</published>
    <updated>2024-01-18T04:32:03.651Z</updated>
    
    <content type="html"><![CDATA[<p>​    在2011年的时候，浙大的一位博士生借助微博的开放平台为他实验室的一台饮水机弄了个微博，名唤@浙大CCNT实验室饮水机，俗称“饮水机娘“。当年自己对这条新闻留下了挺深的印象，也一直对这个微博账号可以自动发微博背后的机理感到十分憧憬。一晃，时间都来到了2019年了~~</p><p>​    咳咳——在钻研不少技术文章以及对技术派网友的多多请教后，自己终于也捣弄了一个自动发微博的机器人(￣︶￣)↗</p><a id="more"></a><hr><p>​    此微博机器人的功能如下：</p><ul><li>直接模拟登陆新浪微博；</li><li>自动获取唐诗宋词文本；</li><li>自动获取文艺主题图片；</li><li>自动上传图片至微博图床；</li><li>自动发送内容不同的图文微博；</li><li>通过定时任务，实现周期性发微博任务。</li></ul><hr><p>​    实际效果图：</p><p><img src="https://i.loli.net/2020/02/24/krqDmobZeLJWPcd.png" alt="image.png"></p><p>​    GitHub仓库：</p><blockquote><p><a href="https://github.com/Leslie-Wong-H/weiboPoemBot" target="_blank" rel="noopener">https://github.com/Leslie-Wong-H/weiboPoemBot</a></p></blockquote><p>​    正所谓“前不见古人，后不见来者。念天地之悠悠，独怆然而涕下！“，咳咳——IT技术世界当然不是这样，我们的技术积累都是站在前人的基础上的，换言之，站在巨人的肩膀上。所以，还是先来啰嗦啰嗦当年的饮水机娘。</p><h2 id="饮水机娘分析"><a href="#饮水机娘分析" class="headerlink" title="饮水机娘分析"></a>饮水机娘分析</h2><p>​    当年果壳网在饮水机娘爆红了的时候，采访了背后的开发者——浙江大学计算机科学与技术学院的一位陈姓博士生。文章标题是<a href="https://www.guokr.com/article/81621/" target="_blank" rel="noopener">《揭开“饮水机娘”的神秘面纱》</a>。在这篇文章中，阐述发微博原理的段落如下：</p><blockquote><p>据陈同学介绍，饮水机本身并没有多加改造，只是饮水机上安装一个摄像头，镜头正对加热指示灯，作为传感器，实时监控加热状态。</p><p>发送微博的功能通过代码实现，利用了新浪微博开放平台提供的PHP语言软件开发工具包。在代码的设计中，主要有检测模块和反应模块两部分。检测模块处理摄像头的监控数据，捕捉加热指示灯“亮-&gt;不亮”与“不亮-&gt;亮”两个切换状态，然后调用反应模块及时发送微博。所以在“饮水机娘”自动发送的微博下方，会显示“来自未通过审核应用”。目前，完成这些功能，所需的代码量不足两百行。</p></blockquote><p>​    现在来分析分析这两段话，把整个流程弄成流程图的话是如下的效果：</p><p><img src="https://i.loli.net/2020/02/24/9NVwazCH2PJmTjO.png" alt="image.png"> </p><p>​    从“指示灯”到“视觉算法判断状态”这部分属于计算机视觉实现了，依本人目前的技术视野判断，可以借助openCV来构建。至于发送微博这一部分，则是纯粹的PHP代码实现。由于本文所要讨论的是构建一个发微博的机器人，而微博报文数据的获取可以有很多种方式，因此，openCV就点到为止了。（自己也不是太懂openCV）(。・_・)/~~~</p><p>​    自己在查阅了不少技术文献后，通过这篇<a href="https://www.cnblogs.com/chasewade/p/3408086.html" target="_blank" rel="noopener">《新浪微博自动（模拟）登陆详解及实现》</a>了解到饮水机娘发送的微博下方会出现“来自未通过审核应用”是由于用了新浪微博开放平台的接口的缘故，而且其会有几个比较致命的限制（调用次数限制和授权期限限制）。网上流传一种直接模拟登陆微博的解决方案，关键点就是利用php的curl功能，这也是本人所要阐述的微博机器人使用的登录原理。</p><p>​    另外，翻了翻饮水机娘最早期发送的微博，报告饮水机水沸腾了的微博报文是这样子的——</p><p><img src="https://i.loli.net/2019/03/15/5c8bafa625e44.png" alt="1552649398204"></p><p>​    后来变成了这样子——</p><p><img src="https://i.loli.net/2019/03/15/5c8bafa6303d1.png" alt></p><p>​    而对应“亮-&gt;不亮”状态的微博报文最初是这样子的——</p><p><img src="https://i.loli.net/2019/03/15/5c8bafa643929.png" alt></p><p>​    不过，后来关注度上去之后，就很难判断饮水机娘发送的微博是不是根据饮水机状态自动发出去了的了，但是也不影响本文后续的叙述。OK，溯源的部分就到这里，接下来讲讲在机器人构建中占据不少分量的数据获取API——今日诗词API、文艺主题图片API、微博图床API。</p><h2 id="今日诗词API"><a href="#今日诗词API" class="headerlink" title="今日诗词API"></a>今日诗词API</h2><p>​    今日诗词API是<a href="https://luan.ma" target="_blank" rel="noopener">乱码</a>开发的一个可以返回一句古诗词名句的接口。它可以通过图片和JSON格式调用。今日诗词API根据不同地点、时间、节日、季节、天气、景观、城市、事件进行智能推荐。</p><p>​    官方文档地址是<a href="https://www.jinrishici.com/，" target="_blank" rel="noopener">https://www.jinrishici.com/，</a> 乱码大佬撰写的介绍文章则是<a href="https://luan.ma/post/jinrishici/。就本人所要构建的微博机器人而言，使用到的接口是" target="_blank" rel="noopener">https://luan.ma/post/jinrishici/。就本人所要构建的微博机器人而言，使用到的接口是</a><a href="https://v2.jinrishici.com/one.json" target="_blank" rel="noopener">https://v2.jinrishici.com/one.json</a>，而且是使用带token的调用方式。</p><h2 id="文艺主题图片API"><a href="#文艺主题图片API" class="headerlink" title="文艺主题图片API"></a>文艺主题图片API</h2><p>​    这个图片API是<a href="https://www.yuluoge.com/" target="_blank" rel="noopener">九凌少子</a>负责开发的，他的图源来自于360壁纸，主要功能就是根据调用需求，返回一张360壁纸的官方服务器上的图片URL。调用方式如下：</p><blockquote><p><a href="https://www.yuluoge.com/api/index.php?cid=5" target="_blank" rel="noopener">https://www.yuluoge.com/api/index.php?cid=5</a></p></blockquote><p>​    不同的cid值对应不同的分类，根据他的解释及本人测试，分类如下——</p><ul><li>cid=0 —— 默认图片，不分类型</li><li>cid=1 —— 美女</li><li>cid=2 —— 动漫</li><li>cid=3 —— 风景</li><li>cid=4 —— 游戏</li><li>cid=5 —— 文艺</li><li>cid=6 —— 文字控</li><li>cid=7 —— 动物</li><li>cid=8 —— 爱情</li></ul><p>​    此外，这篇文章最后贴出来的源代码是基于他在今日诗词的Q群里分享的发微博源码改造而来的，在此感谢他的贡献。</p><h2 id="微博图床API"><a href="#微博图床API" class="headerlink" title="微博图床API"></a>微博图床API</h2><p>​    对于微博图床API的理解得力于这篇文章——<a href="https://cloud.tencent.com/developer/article/1147512" target="_blank" rel="noopener">《利用微博当图床-php语言实现》</a>。</p><p>​    使用到的微博图片上传接口为</p><blockquote><p><a href="http://picupload.service.weibo.com/interface/pic_upload.php" target="_blank" rel="noopener">http://picupload.service.weibo.com/interface/pic_upload.php</a></p></blockquote><p>​    本文所构建机器人略有改动地使用了这篇文章里的获取新浪图床图片pid的PHP源码。源码如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 上传图片到微博图床</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mengkun  http://mkblog.cn</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> $file 图片文件/图片url</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> $multipart 是否采用multipart方式上传</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> 返回的json数据</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">upload</span><span class="params">($file, $multipart = true)</span> </span>&#123;</span><br><span class="line">    $cookie = <span class="string">''</span>;    <span class="comment">// 微博cookie</span></span><br><span class="line">    $url = <span class="string">'http://picupload.service.weibo.com/interface/pic_upload.php'</span></span><br><span class="line">    .<span class="string">'?mime=image%2Fjpeg&amp;data=base64&amp;url=0&amp;markpos=1&amp;logo=&amp;nick=0&amp;marks=1&amp;app=miniblog'</span>;</span><br><span class="line">    <span class="keyword">if</span>($multipart) &#123;</span><br><span class="line">        $url .= <span class="string">'&amp;cb=http://weibo.com/aj/static/upimgback.html?_wv=5&amp;callback=STK_ijax_'</span>.time();</span><br><span class="line">        <span class="keyword">if</span> (class_exists(<span class="string">'CURLFile'</span>)) &#123;     <span class="comment">// php 5.5</span></span><br><span class="line">            $post[<span class="string">'pic1'</span>] = <span class="keyword">new</span> CURLFile(realpath($file));</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $post[<span class="string">'pic1'</span>] = <span class="string">'@'</span>.realpath($file);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $post[<span class="string">'b64_data'</span>] = base64_encode(file_get_contents($file));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// Curl提交</span></span><br><span class="line">    $ch = curl_init($url);</span><br><span class="line">    curl_setopt_array($ch, <span class="keyword">array</span>(</span><br><span class="line">        CURLOPT_POST =&gt; <span class="keyword">true</span>,</span><br><span class="line">        CURLOPT_VERBOSE =&gt; <span class="keyword">true</span>,</span><br><span class="line">        CURLOPT_RETURNTRANSFER =&gt; <span class="keyword">true</span>,</span><br><span class="line">        CURLOPT_HTTPHEADER =&gt; <span class="keyword">array</span>(<span class="string">"Cookie: $cookie"</span>),</span><br><span class="line">        CURLOPT_POSTFIELDS =&gt; $post,</span><br><span class="line">    ));</span><br><span class="line">    $output = curl_exec($ch);</span><br><span class="line">    curl_close($ch);</span><br><span class="line">    <span class="comment">// 正则表达式提取返回结果中的json数据</span></span><br><span class="line">    preg_match(<span class="string">'/(&#123;.*)/i'</span>, $output, $match);</span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">isset</span>($match[<span class="number">1</span>])) <span class="keyword">return</span> <span class="string">''</span>;</span><br><span class="line">    <span class="keyword">return</span> $match[<span class="number">1</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="微博机器人源码"><a href="#微博机器人源码" class="headerlink" title="微博机器人源码"></a>微博机器人源码</h2><p>​    列举了所要用到的几个重要API，最后还是贴一下机器人的源码吧。当然，也有相对应的GitHub仓库<a href="https://github.com/Leslie-Wong-H/weiboPoemBot" target="_blank" rel="noopener">https://github.com/Leslie-Wong-H/weiboPoemBot</a></p><p><strong>主模块</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//weibo.php</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">require_once</span> <span class="string">'./weiboLogin.php'</span>;</span><br><span class="line">header(<span class="string">"Content-type: text/html; charset=utf-8"</span>);</span><br><span class="line">header(<span class="string">"Access-Control-Allow-Origin:*"</span>);</span><br><span class="line">header(<span class="string">'Content-type: application/json'</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">发送微博</span></span><br><span class="line"><span class="comment">**/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">curl</span><span class="params">($url,$post=<span class="number">0</span>,$header=<span class="number">0</span>,$cookie=<span class="number">0</span>,$referer=<span class="number">0</span>,$ua=<span class="number">0</span>,$nobody=<span class="number">0</span>)</span></span>&#123;</span><br><span class="line">$ch = curl_init();</span><br><span class="line">curl_setopt($ch, CURLOPT_URL,$url);</span><br><span class="line">curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, <span class="keyword">false</span>);</span><br><span class="line">curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, <span class="keyword">false</span>);</span><br><span class="line">$httpheader[] = <span class="string">"Accept:*/*"</span>;</span><br><span class="line">$httpheader[] = <span class="string">"Accept-Encoding:gzip,deflate,sdch"</span>;</span><br><span class="line">$httpheader[] = <span class="string">"Accept-Language:zh-CN,zh;q=0.8"</span>;</span><br><span class="line">$httpheader[] = <span class="string">"Connection:close"</span>;</span><br><span class="line">curl_setopt($ch, CURLOPT_HTTPHEADER, $httpheader);</span><br><span class="line"><span class="keyword">if</span>($post)&#123;</span><br><span class="line">curl_setopt($ch, CURLOPT_POST, <span class="number">1</span>);</span><br><span class="line">curl_setopt($ch, CURLOPT_POSTFIELDS, $post);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>($header)&#123;</span><br><span class="line">curl_setopt($ch, CURLOPT_HEADER, <span class="keyword">TRUE</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>($cookie)&#123;</span><br><span class="line">curl_setopt($ch, CURLOPT_COOKIE, $cookie);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>($referer)&#123;</span><br><span class="line">curl_setopt($ch, CURLOPT_REFERER, $referer);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>($ua)&#123;</span><br><span class="line">curl_setopt($ch, CURLOPT_USERAGENT,$ua);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">curl_setopt($ch, CURLOPT_USERAGENT,<span class="string">'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.167 Safari/537.36'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>($nobody)&#123;</span><br><span class="line">curl_setopt($ch, CURLOPT_NOBODY,<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">curl_setopt($ch, CURLOPT_ENCODING, <span class="string">"gzip"</span>);</span><br><span class="line">curl_setopt($ch, CURLOPT_RETURNTRANSFER,<span class="number">1</span>);</span><br><span class="line">$ret = curl_exec($ch);</span><br><span class="line">curl_close($ch);</span><br><span class="line"><span class="keyword">return</span> $ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 上传图片到微博图床</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> mengkun http://mkblog.cn</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> $file 图片文件/图片url</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> $multipart 是否采用multipart方式上传</span></span><br><span class="line"><span class="comment"> * return 返回的json数据</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">upload</span><span class="params">($file, $cookie, $multipart = true)</span></span>&#123;</span><br><span class="line">$url = <span class="string">'http://picupload.service.weibo.com/interface/pic_upload.php'</span>.<span class="string">'?mime=image%2Fjpeg&amp;data=base64&amp;url=0&amp;markpos=1&amp;logo=&amp;nick=0&amp;marks=1&amp;app=miniblog'</span>;</span><br><span class="line"><span class="keyword">if</span>($multipart)&#123;</span><br><span class="line">$url .= <span class="string">'&amp;cb=http://weibo.com/aj/static/upimgback.html?_wv=5&amp;callback=STK_ijax_'</span>.time();</span><br><span class="line"><span class="keyword">if</span>(class_exists(<span class="string">'CURLFile'</span>))&#123;<span class="comment">//php 5.5</span></span><br><span class="line">$post[<span class="string">'pic1'</span>] = <span class="keyword">new</span> CURLFile(realpath($file));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">$post[<span class="string">'pic1'</span>] = <span class="string">'@'</span>.realpath($file);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">$post[<span class="string">'b64_data'</span>] = base64_encode(file_get_contents($file));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// echo $post['b64_data'];</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//Curl 提交</span></span><br><span class="line">$ch = curl_init($url);</span><br><span class="line">curl_setopt_array($ch, <span class="keyword">array</span>(</span><br><span class="line">CURLOPT_POST =&gt; <span class="keyword">true</span>,</span><br><span class="line">CURLOPT_VERBOSE =&gt; <span class="keyword">true</span>,</span><br><span class="line">CURLOPT_RETURNTRANSFER =&gt; <span class="keyword">true</span>,</span><br><span class="line">CURLOPT_HTTPHEADER =&gt; <span class="keyword">array</span>(<span class="string">"Cookie: $cookie"</span>),</span><br><span class="line">CURLOPT_POSTFIELDS =&gt; $post,</span><br><span class="line">));</span><br><span class="line"></span><br><span class="line">$output = curl_exec($ch);</span><br><span class="line">curl_close($ch);</span><br><span class="line"><span class="comment">// 正则表达式提取返回结果中的json数据</span></span><br><span class="line"></span><br><span class="line">preg_match(<span class="string">'/(&#123;.*)/i'</span>, $output, $match);</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>($match[<span class="number">1</span>])) <span class="keyword">return</span> <span class="string">''</span>;</span><br><span class="line"><span class="keyword">return</span> $match[<span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  通过今日诗词API获取诗词内容</span></span><br><span class="line"><span class="comment">**/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">jinrishici</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    $opts = <span class="keyword">array</span>(</span><br><span class="line">        <span class="string">'http'</span>=&gt;<span class="keyword">array</span>(</span><br><span class="line">        <span class="string">'method'</span>=&gt;<span class="string">"GET"</span>,</span><br><span class="line">        <span class="string">'header'</span>=&gt;<span class="string">"Accept-language: en\r\n"</span>.<span class="string">"X-User-Token: k4z4CMgTyl3JN6s+y2iWWiHN6we+0J9V\r\n"</span></span><br><span class="line">        )</span><br><span class="line">    );</span><br><span class="line">    $context = stream_context_create($opts);</span><br><span class="line">    <span class="comment">// Open the file using the HTTP headers set above</span></span><br><span class="line">    $tangshi_pailie = json_decode(file_get_contents(<span class="string">'https://v2.jinrishici.com/one.json'</span>, <span class="keyword">false</span>, $context),<span class="keyword">true</span>);          <span class="comment">//今日诗词API，带token版本</span></span><br><span class="line">   </span><br><span class="line">    <span class="comment">// $tangshi_pailie = json_decode(file_get_contents('https://v2.jinrishici.com/one.json'), true);                  //今日诗词api,不带token版本</span></span><br><span class="line"></span><br><span class="line">    $tangshi_title = $tangshi_pailie[<span class="string">'data'</span>][<span class="string">'origin'</span>][<span class="string">'title'</span>];              <span class="comment">//标题</span></span><br><span class="line">    $tangshi_dynasty = $tangshi_pailie[<span class="string">'data'</span>][<span class="string">'origin'</span>][<span class="string">'dynasty'</span>];          <span class="comment">//朝代</span></span><br><span class="line">    $tangshi_author = $tangshi_pailie[<span class="string">'data'</span>][<span class="string">'origin'</span>][<span class="string">'author'</span>];            <span class="comment">//诗人</span></span><br><span class="line">    </span><br><span class="line">    $tangshi_line_numbers = count($tangshi_pailie[<span class="string">'data'</span>][<span class="string">'origin'</span>][<span class="string">'content'</span>]);</span><br><span class="line">    $tangshi_content = $tangshi_pailie[<span class="string">'data'</span>][<span class="string">'origin'</span>][<span class="string">'content'</span>][<span class="number">0</span>];  </span><br><span class="line">    <span class="keyword">for</span> ($i=<span class="number">1</span>; $i &lt; $tangshi_line_numbers; $i++) &#123; </span><br><span class="line">      $tangshi_temp_line = $tangshi_pailie[<span class="string">'data'</span>][<span class="string">'origin'</span>][<span class="string">'content'</span>][$i];  </span><br><span class="line">        $tangshi_content = $tangshi_content.<span class="string">"\n"</span>.$tangshi_temp_line;      </span><br><span class="line">    &#125;                                 <span class="comment">//拼接全诗</span></span><br><span class="line"></span><br><span class="line">    $post_Poem = <span class="string">"《"</span>.$tangshi_title.<span class="string">"》"</span>.<span class="string">"\n"</span>.$tangshi_dynasty.<span class="string">"·"</span>.$tangshi_author.<span class="string">"\n"</span>.<span class="string">"\n"</span>.$tangshi_content;</span><br><span class="line">  </span><br><span class="line">    <span class="keyword">return</span> <span class="string">"$post_Poem"</span>;</span><br><span class="line">&#125;  </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">include</span> <span class="string">'./wbcookie.php'</span>;</span><br><span class="line">    $cookie = $config[<span class="string">'cookie'</span>];</span><br><span class="line"></span><br><span class="line">    <span class="comment">//通过图片api获取图片，并转存微博图床</span></span><br><span class="line">    $bing_img = json_decode(upload(<span class="string">'https://www.yuluoge.com/api/index.php?cid=5'</span>, $cookie, <span class="keyword">false</span>),<span class="keyword">true</span>);</span><br><span class="line">    $bing_img_pid = $bing_img[<span class="string">'data'</span>][<span class="string">'pics'</span>][<span class="string">'pic_1'</span>][<span class="string">'pid'</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"$bing_img_pid\n"</span>;</span><br><span class="line"></span><br><span class="line">    $tangshi = jinrishici();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"$tangshi\n"</span>;</span><br><span class="line"></span><br><span class="line">    $post=[</span><br><span class="line">    <span class="string">'title'</span> =&gt;<span class="string">'今日要说什么？'</span>,</span><br><span class="line">    <span class="string">'location'</span> =&gt; <span class="string">'v6_content_home'</span>,</span><br><span class="line">    <span class="string">'text'</span> =&gt; <span class="string">"#诗词[超话]# #中华好诗词# #中国诗词大会#"</span>.<span class="string">"\n"</span>.$tangshi.<span class="string">"\n"</span>.<span class="string">"\n"</span>,<span class="comment">//需要发送微博的内容</span></span><br><span class="line">    <span class="string">'pic_id'</span> =&gt;  <span class="string">"$bing_img_pid"</span>,</span><br><span class="line">    <span class="comment">// '007CcEyfly1g042kquhztj31ns0u0tdu',//微博图片id，需事先上传好 </span></span><br><span class="line">    <span class="string">'isReEdit'</span> =&gt; <span class="keyword">false</span>,</span><br><span class="line">    <span class="string">'pub_source'</span> =&gt; <span class="string">'page_2'</span>,</span><br><span class="line">    <span class="string">'topic_id'</span> =&gt; <span class="string">'1022%3A'</span>,</span><br><span class="line">    <span class="string">'pub_type'</span> =&gt; <span class="string">'dialog'</span>,</span><br><span class="line">    <span class="string">'_t'</span> =&gt; <span class="number">0</span>,</span><br><span class="line">    <span class="string">'style_type'</span> =&gt; <span class="number">1</span>,</span><br><span class="line">    ];</span><br><span class="line">    $url=<span class="string">'https://weibo.com/aj/mblog/add?ajwvr=6&amp;__rnd=2918942797035'</span>;<span class="comment">//不需要改变</span></span><br><span class="line">    $referer=<span class="string">'https://weibo.com/liufengshishe/home?topnav=1&amp;wvr=6'</span>;<span class="comment">//你的微博用户名(首页链接)</span></span><br><span class="line"></span><br><span class="line">    $response = curl($url,$post,<span class="string">''</span>,$cookie,$referer);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"$response\n发送成功"</span>;</span><br></pre></td></tr></table></figure><p><strong>微博登录模块</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (!is_file(<span class="string">'./wbcookie.php'</span>)) &#123;</span><br><span class="line">    CookieSet(<span class="string">'SUB;'</span>,<span class="string">'0'</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">include</span> <span class="string">'./wbcookie.php'</span>;</span><br><span class="line">  <span class="keyword">require_once</span> <span class="string">'./weiboAccount.php'</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (time() - $config[<span class="string">'time'</span>] &gt;<span class="number">20</span>*<span class="number">3600</span>||$config[<span class="string">'cookie'</span>]==<span class="string">'SUB;'</span>) &#123;</span><br><span class="line">    $cookie = login($sinauser,$sinapwd);</span><br><span class="line">    <span class="keyword">if</span>($cookie&amp;&amp;$cookie!=<span class="string">'SUB;'</span>)</span><br><span class="line">    &#123;</span><br><span class="line">      CookieSet($cookie,$time = time());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">return</span> error(<span class="string">'203'</span>,<span class="string">'获取cookie出现错误，请检查账号状态或者重新获取cookie'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">       * 新浪微博登录(无加密接口版本)</span></span><br><span class="line"><span class="comment">       * <span class="doctag">@param</span>  string $u 用户名</span></span><br><span class="line"><span class="comment">       * <span class="doctag">@param</span>  string $p 密码</span></span><br><span class="line"><span class="comment">       * <span class="doctag">@return</span> string    返回最有用最精简的cookie</span></span><br><span class="line"><span class="comment">       */</span></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">login</span><span class="params">($u,$p)</span></span>&#123;</span><br><span class="line">    $loginUrl = <span class="string">'https://login.sina.com.cn/sso/login.php?client=ssologin.js(v1.4.15)&amp;_=1403138799543'</span>;</span><br><span class="line">    $loginData[<span class="string">'entry'</span>] = <span class="string">'sso'</span>;</span><br><span class="line">    $loginData[<span class="string">'gateway'</span>] = <span class="string">'1'</span>;</span><br><span class="line">    $loginData[<span class="string">'from'</span>] = <span class="string">'null'</span>;</span><br><span class="line">    $loginData[<span class="string">'savestate'</span>] = <span class="string">'30'</span>;</span><br><span class="line">    $loginData[<span class="string">'useticket'</span>] = <span class="string">'0'</span>;</span><br><span class="line">    $loginData[<span class="string">'pagerefer'</span>] = <span class="string">''</span>;</span><br><span class="line">    $loginData[<span class="string">'vsnf'</span>] = <span class="string">'1'</span>;</span><br><span class="line">    $loginData[<span class="string">'su'</span>] = base64_encode($u);</span><br><span class="line">    $loginData[<span class="string">'service'</span>] = <span class="string">'sso'</span>;</span><br><span class="line">    $loginData[<span class="string">'sp'</span>] = $p;</span><br><span class="line">    $loginData[<span class="string">'sr'</span>] = <span class="string">'1920*1080'</span>;</span><br><span class="line">    $loginData[<span class="string">'encoding'</span>] = <span class="string">'UTF-8'</span>;</span><br><span class="line">    $loginData[<span class="string">'cdult'</span>] = <span class="string">'3'</span>;</span><br><span class="line">    $loginData[<span class="string">'domain'</span>] = <span class="string">'sina.com.cn'</span>;</span><br><span class="line">    $loginData[<span class="string">'prelt'</span>] = <span class="string">'0'</span>;</span><br><span class="line">    $loginData[<span class="string">'returntype'</span>] = <span class="string">'TEXT'</span>;</span><br><span class="line">    <span class="keyword">return</span> loginPost($loginUrl,$loginData); </span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">       * 发送微博登录请求</span></span><br><span class="line"><span class="comment">       * <span class="doctag">@param</span>  string $url  接口地址</span></span><br><span class="line"><span class="comment">       * <span class="doctag">@param</span>  array  $data 数据</span></span><br><span class="line"><span class="comment">       * <span class="doctag">@return</span> json         算了，还是返回cookie吧//返回登录成功后的用户信息json</span></span><br><span class="line"><span class="comment">       */</span></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">loginPost</span><span class="params">($url,$data)</span></span>&#123;</span><br><span class="line">    $tmp = <span class="string">''</span>;</span><br><span class="line">    <span class="keyword">if</span>(is_array($data))&#123;</span><br><span class="line">      <span class="keyword">foreach</span>($data <span class="keyword">as</span> $key =&gt;$value)&#123;</span><br><span class="line">        $tmp .= $key.<span class="string">"="</span>.$value.<span class="string">"&amp;"</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      $post = trim($tmp,<span class="string">"&amp;"</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      $post = $data;</span><br><span class="line">    &#125;</span><br><span class="line">    $ch = curl_init();</span><br><span class="line">    curl_setopt($ch,CURLOPT_URL,$url); </span><br><span class="line">    curl_setopt($ch,CURLOPT_RETURNTRANSFER,<span class="number">1</span>); </span><br><span class="line">    curl_setopt($ch,CURLOPT_HEADER,<span class="number">1</span>);</span><br><span class="line">    curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, <span class="keyword">false</span>);</span><br><span class="line">    curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, <span class="keyword">false</span>);</span><br><span class="line">    curl_setopt($ch,CURLOPT_POST,<span class="number">1</span>);</span><br><span class="line">    curl_setopt($ch,CURLOPT_POSTFIELDS,$post);</span><br><span class="line">    $return = curl_exec($ch);</span><br><span class="line">    curl_close($ch);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">'SUB'</span> . getSubstr($return,<span class="string">"Set-Cookie: SUB"</span>,<span class="string">'; '</span>) . <span class="string">';'</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 取本文中间</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">getSubstr</span><span class="params">($str,$leftStr,$rightStr)</span></span>&#123;</span><br><span class="line">    $left = strpos($str, $leftStr);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'左边:'</span>.$left;</span><br><span class="line">    $right = strpos($str, $rightStr,$left);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'&lt;br&gt;右边:'</span>.$right;</span><br><span class="line">    <span class="keyword">if</span>($left &lt;= <span class="number">0</span> <span class="keyword">or</span> $right &lt; $left) <span class="keyword">return</span> <span class="string">''</span>;</span><br><span class="line">    <span class="keyword">return</span> substr($str, $left + strlen($leftStr), $right-$left-strlen($leftStr));</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">    设置cookie文件</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">CookieSet</span><span class="params">($cookie,$time)</span></span>&#123;</span><br><span class="line">    $newConfig = <span class="string">'&lt;?php </span></span><br><span class="line"><span class="string">    $config = array(</span></span><br><span class="line"><span class="string">      "cookie" =&gt; "'</span>.$cookie.<span class="string">'",</span></span><br><span class="line"><span class="string">      "time" =&gt; "'</span>.$time.<span class="string">'",</span></span><br><span class="line"><span class="string">    );'</span>;</span><br><span class="line">    @file_put_contents(<span class="string">'./wbcookie.php'</span>, $newConfig);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">    错误反馈</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">error</span><span class="params">($code,$msg)</span></span>&#123;</span><br><span class="line">    $arr = <span class="keyword">array</span>(<span class="string">'code'</span>=&gt;$code,<span class="string">'msg'</span>=&gt;$msg);</span><br><span class="line">    <span class="keyword">echo</span> json_encode($arr);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p><strong>微博账号模块</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">$sinauser = <span class="string">'example@email.com'</span>;<span class="comment">//你的微博账号</span></span><br><span class="line">$sinapwd = <span class="string">'123456789'</span>;<span class="comment">//你的微博密码</span></span><br></pre></td></tr></table></figure><h2 id="关于如何使用"><a href="#关于如何使用" class="headerlink" title="关于如何使用"></a>关于如何使用</h2><p>​    本地搭建了lamp环境的话，开启lamp环境后，直接在浏览器地址栏输入localhost及主入口文件对应的路径就可以运行了（本人使用xampp）。</p><p>​    云服务器的话，本人的方案是使用宝塔服务器面板安装lamp环境后，使用xftp将文件传到apache服务器网站根目录上，开启lamp环境就可以了的。</p><h2 id="关于安全性问题"><a href="#关于安全性问题" class="headerlink" title="关于安全性问题"></a>关于安全性问题</h2><p>​    实不相瞒，如果是在云服务器上直接跑这些php文件的话，是不太安全的。因为网站的公共用户具有可以访问微博账号文件的权限。所以，推荐对微博账号文件进行.htaccess设置，也推荐申请个小号来搭建。</p><p>​    具体操作有点复杂，可以参考这篇文章——<a href="https://www.cnblogs.com/engeng/articles/5948089.html" target="_blank" rel="noopener">《apache .htaccess文件详解和配置技巧总结》</a></p><h2 id="关于定时任务"><a href="#关于定时任务" class="headerlink" title="关于定时任务"></a>关于定时任务</h2><p>​    设置定时任务的话可以使用linux主机的crontab命令。</p><ol><li>远程连接主机，连接成功后，输入命令crontab -e；<img src="https://i.loli.net/2020/02/24/LOcErqJ2189Co3w.png" alt="image.png"></li><li>会打开一个文件，按照格式输入需要执行的脚本；<img src="https://i.loli.net/2020/02/24/R8qUw2ZxmejAYEH.png" alt="image.png"></li><li>保存退出后，重启crontab服务。<img src="https://image-static.segmentfault.com/105/562/1055621514-5c8bef330373e_fix732" alt="preview"></li></ol><p><strong>语法解释：</strong></p><p><img src="https://i.loli.net/2019/03/15/5c8bafa6379fe.png" alt></p><p>“*” 代表取值范围内的数字,<br>“/” 代表”每”,<br>“-” 代表从某个数字到某个数字,<br>“,” 分开几个离散的数字</p><h4 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h4><blockquote><p><a href="https://www.guokr.com/article/81621/" target="_blank" rel="noopener">《揭开“饮水机娘”的神秘面纱》</a></p><p><a href="https://www.cnblogs.com/chasewade/p/3408086.html" target="_blank" rel="noopener">《新浪微博自动（模拟）登陆详解及实现》</a></p><p><a href="https://www.jinrishici.com/doc/" target="_blank" rel="noopener">《今日诗词开放接口-调用文档》</a></p><p><a href="https://cloud.tencent.com/developer/article/1147512" target="_blank" rel="noopener">《利用微博当图床-php语言实现》</a></p><p><a href="https://www.cnblogs.com/engeng/articles/5948089.html" target="_blank" rel="noopener">《apache .htaccess文件详解和配置技巧总结》</a></p><p><a href="https://blog.csdn.net/myuantao3286286/article/details/55095282" target="_blank" rel="noopener">《linux下crontab定时访问指定url》</a></p></blockquote><hr><h4 id="特别致谢"><a href="#特别致谢" class="headerlink" title="特别致谢"></a>特别致谢</h4><blockquote><p><a href="https://www.yuluoge.com/" target="_blank" rel="noopener">九凌少子</a></p></blockquote><hr><p><img src="https://i.loli.net/2020/02/24/rNU7HBf4RAEtDJw.png" alt="image.png"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;​    在2011年的时候，浙大的一位博士生借助微博的开放平台为他实验室的一台饮水机弄了个微博，名唤@浙大CCNT实验室饮水机，俗称“饮水机娘“。当年自己对这条新闻留下了挺深的印象，也一直对这个微博账号可以自动发微博背后的机理感到十分憧憬。一晃，时间都来到了2019年了~~&lt;/p&gt;
&lt;p&gt;​    咳咳——在钻研不少技术文章以及对技术派网友的多多请教后，自己终于也捣弄了一个自动发微博的机器人(￣︶￣)↗&lt;/p&gt;
    
    </summary>
    
    
      <category term="微博" scheme="http://lesliewong.cn/categories/%E5%BE%AE%E5%8D%9A/"/>
    
      <category term="PHP" scheme="http://lesliewong.cn/categories/%E5%BE%AE%E5%8D%9A/PHP/"/>
    
    
      <category term="微博" scheme="http://lesliewong.cn/tags/%E5%BE%AE%E5%8D%9A/"/>
    
      <category term="PHP" scheme="http://lesliewong.cn/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>给自己的博客网站加上酷炫的初音未来音乐游戏？</title>
    <link href="http://lesliewong.cn/2019/01/12/equiped-an-awesome-music-game-for-my-own-blog-website/"/>
    <id>http://lesliewong.cn/2019/01/12/equiped-an-awesome-music-game-for-my-own-blog-website/</id>
    <published>2019-01-12T12:45:30.000Z</published>
    <updated>2019-02-24T11:45:19.848Z</updated>
    
    <content type="html"><![CDATA[<hr><p>先前在某个Q群里有位网友发了个链接，一点进去，发现是个极度让人耳目一新的初音未来音乐网页游戏。 为了让有幸看到这篇文章的看官也来体会下本人第一次玩时的激动，抛个链接——<a href="https://blog.eunji.cn/music/music.html" target="_blank" rel="noopener">乐柔嘴巴</a>。链接的具体地址是<a href="https://blog.eunji.cn/music/music.html" target="_blank" rel="noopener">blog.eunji.cn/music/music.html</a>。尽管这个页面实在让人上瘾，但是自己同样是个喜欢折腾博客网站的家伙，而这位仁兄是在一个博客网站下放的这个网页。自己就开始思量，可不可以在自己的的博客下<a href="https://www.lesliewong.cn" target="_blank" rel="noopener">www.lesliewong.cn</a>也放个这样的游戏呢？这也很彰显自己的品格&lt;(￣︶￣)&gt;</p><a id="more"></a><p>​    于是自己也就开始开展A计划了。。。</p><hr><h1 id="A计划：无耻地直接盗链"><a href="#A计划：无耻地直接盗链" class="headerlink" title="A计划：无耻地直接盗链"></a>A计划：无耻地直接盗链</h1><p>​    鉴于<a href="https://blog.eunji.cn/music/music.html" target="_blank" rel="noopener">乐柔嘴巴</a>的链接就是一个静态地址，盗链真的是直接就手到擒来、屡试不爽的了。</p><p>​    将自己的博客主页上的“相册”字段对应的链接改成<a href="https://blog.eunji.cn/music/music.html。" target="_blank" rel="noopener">https://blog.eunji.cn/music/music.html。</a></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://blog.eunji.cn/music/music.html"</span>&gt;</span>相册<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p>效果如下：</p><p><img src="https://i.loli.net/2019/01/12/5c394f23de1d5.png" alt="1547223928655.png" title="1547223928655.png"></p><p>​    看！访问我的网站就可以玩到如此新颖的游戏——<a href="http://www.lesliewong.cn" target="_blank" rel="noopener">www.lesliewong.cn</a></p><p>​    不过，过了不久，还是觉得有些不爽。自己还是有点控制欲的念头的，为什么自己的博客网站要跳转到人家的博客上去玩初音未来的音乐游戏，自己家里就不能玩吗？说白了——看见这个音乐游戏上头的地址栏的域名不是自己的就真心让人不爽。</p><p>​    不行！我要做到点我博客主页链接的时候仍然跳转到我的域名下——</p><p>​    于是，灵机一动下，有了B计划。</p><hr><h1 id="B计划：无耻地反向代理盗链"><a href="#B计划：无耻地反向代理盗链" class="headerlink" title="B计划：无耻地反向代理盗链"></a>B计划：无耻地反向代理盗链</h1><p>​    Nginx服务器具有很强的反向代理功能。通常那些大流量网站都借助Nginx服务器的反向代理功能将访问请求均匀地分配到内网的其他业务服务器进行处理，实现负载均衡功能，业务处理完毕后再通过Nginx服务器返送回去给请求者。</p><p>​    换个方向思考，如果我转发的不是自己内网的业务服务器，而是外网上别人的网站呢？请求者访问我的网站，我将这个请求转发到外网上别人的网站上，然后将他们返回的数据反馈给我的请求者。那么，对于我的请求者而言，他从头到尾都是访问我的网站，而不知道自己收到的数据其实是从另外的网站转发过来的。</p><p>​    在这样的逻辑下，结合这篇文章的指导——<a href="https://www.zifangsky.cn/728.html" target="_blank" rel="noopener">利用Nginx的反向代理克隆生成镜像网站——中间人攻击</a>。自己也就在自己的一台架设了Nginx的服务器上捣弄了。用<u>music.lesliewong.cn</u>这个域名来转发那位仁兄的网页。配置文件如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen       <span class="number">80</span>;</span><br><span class="line">    server_name  music.lesliewong.cn;</span><br><span class="line">    root   /webser/www/musiz;</span><br><span class="line">    index  index.php index.html index.htm;</span><br><span class="line">    error_page   <span class="number">500</span> <span class="number">502</span> <span class="number">503</span> <span class="number">504</span>  /<span class="number">50</span>x.html;</span><br><span class="line">    location = /<span class="number">50</span>x.html &#123;</span><br><span class="line">        root   /usr/share/nginx/html;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        proxy_pass https:<span class="comment">//blog.eunji.cn/music/music.html;</span></span><br><span class="line">    &#125;   </span><br><span class="line"></span><br><span class="line">    location ~ \.php$ &#123;</span><br><span class="line">        fastcgi_pass   php7-fpm:<span class="number">9000</span>;</span><br><span class="line">        fastcgi_index  index.php;</span><br><span class="line">        <span class="keyword">include</span>        fastcgi_params;</span><br><span class="line">        fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后重启自己的服务器，心想这下该大功告成了吧! 去地址栏里满心欢喜地输入<u>music.lesliewong.cn</u>。然而结果却是——</p><p><img src="https://i.loli.net/2019/01/12/5c395000513d2.png" alt="1547259824230.png" title="1547259824230.png"></p><p>​    吖！自己顿时有点摸不着脑袋，然后回去看那篇<a href="https://www.zifangsky.cn/728.html" target="_blank" rel="noopener">利用Nginx的反向代理克隆生成镜像网站——中间人攻击</a>，最后面作者提示道，“网站全站HTTPS之后，如果网站被克隆了，里面的域名被替换，那么将会因为域名与预期不符从而导致网站显示异常”，也就像上面的炮灰例子一样。自己代理的是一个https的页面，是搞不了Nginx反向代理中间人攻击的。。。话说这也让自己更理解到——Nginx反向代理用的最多的地方还是内网负载均衡，因为内网大都是用http来转发吧？！</p><p>​    自己折腾了这么久，得到的却是这样一个结果，是有几分泄气的。难道就没有办法了吗？难不成自己要一砖一瓦地仿照着写个这样的页面，那有多么可怕啊！难道就没有源码吗？自己可以直接拿来用——</p><p>​    接着，C计划开始筹划。。。</p><hr><h1 id="C计划：原作者源码魔改"><a href="#C计划：原作者源码魔改" class="headerlink" title="C计划：原作者源码魔改"></a>C计划：原作者源码魔改</h1><p>​    自己发现在发这个<a href="https://blog.eunji.cn/music/music.html" target="_blank" rel="noopener">乐柔嘴巴</a>的Q群里有位网友还另外发了个同样的实例网站<a href="http://miku.iysheng.com/。界面如下：" target="_blank" rel="noopener">http://miku.iysheng.com/。界面如下：</a></p><p><img src="https://i.loli.net/2019/01/12/5c3950944c262.png" alt="1547234325453.png" title="1547234325453.png"></p><p>​    现在总算找到了原作者了，原来是彩虹猫歌曲的<a href="https://aidn.jp/" target="_blank" rel="noopener">作者</a>写的，浏览了下他的网站，发现他还弄了好多很有趣的<a href="https://aidn.jp/contents/" target="_blank" rel="noopener">东西</a>——（内心忽然鄙视自己这种可恶的伸手党）</p><p><img src="https://i.loli.net/2019/01/12/5c3950cd63d22.png" alt="1547234782434.png" title="1547234782434.png"></p><p>​    </p><p>​    另外，自己也把失败折腾过程和Q友<a href="https://hexo.itsukio.com/" target="_blank" rel="noopener">执着的少年</a>谈了谈，汗颜的是，没过不久他就把github上的开源镜像给我找到了（好吧，自己当时没想到去github搜一搜）链接如下：</p><p><a href="https://github.com/HFIProgramming/mikutap" target="_blank" rel="noopener">https://github.com/HFIProgramming/mikutap</a></p><p><img src="https://i.loli.net/2019/01/12/5c3950faed03c.png" alt="1547235242065.png" title="1547235242065.png"></p><p>​    自己真的是喜出望外，立马把上面的代码都给fork了下来。然而，使用这些源码发现，出来的效果是这样地。。。</p><p><img src="https://i.loli.net/2019/01/12/5c3950944c262.png" alt="1547234325453.png" title="1547234325453.png"></p><p>​    </p><p>​    而不是我想要的上面乐柔嘴巴的样子——</p><p><img src="https://i.loli.net/2019/01/12/5c39512882022.png" alt="1547235494268.png" title="1547235494268.png"></p><p>​    </p><p>​    不过，既然自己都有了源码，照着人家乐柔嘴巴的样子依葫芦画瓢也就不是什么难事了。自己把源码研究了下，偷梁换柱一番终于实现了自己希冀的效果，配置前后对比如下：</p><hr><h4 id="github源码的index文件："><a href="#github源码的index文件：" class="headerlink" title="github源码的index文件："></a>github源码的index文件：</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- index.html --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"IE=edge"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"apple-mobile-web-app-capable"</span> <span class="attr">content</span>=<span class="string">"yes"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0, user-scalable=0"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"description"</span> <span class="attr">content</span>=<span class="string">"初音未来版本的通过点击/触摸播放声音并出现变化图案的互动内容。"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Mikutap<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"apple-touch-icon"</span> <span class="attr">href</span>=<span class="string">"icon.png"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"https://fonts.loli.net/css?family=Quicksand:400"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span> <span class="attr">href</span>=<span class="string">"shared/sp/css/common.css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span> <span class="attr">href</span>=<span class="string">"css/mikutap.css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span> <span class="attr">src</span>=<span class="string">"https://cdnjs.loli.net/ajax/libs/jquery/2.2.4/jquery.min.js"</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span> <span class="attr">src</span>=<span class="string">"https://cdnjs.loli.net/ajax/libs/pixi.js/3.0.11/pixi.min.js"</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span> <span class="attr">src</span>=<span class="string">"https://cdnjs.loli.net/ajax/libs/gsap/1.19.1/TweenMax.min.js"</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span> <span class="attr">src</span>=<span class="string">"shared/js/common-2.min.js"</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span> <span class="attr">src</span>=<span class="string">"js/mikutap.min.js"</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"view"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"scene_top"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Mikutap<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"ng"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"atten"</span>&gt;</span>十分抱歉<span class="tag">&lt;<span class="name">br</span>&gt;</span>您的浏览器并不支持本页面需要的特性<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ok"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"bt_start"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>!开始!<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"bt_about"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>*关于*<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ok"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"attention"</span>&gt;</span>※请打开声音并享受。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">     <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ok"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">     <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"tit"</span>&gt;</span><span class="tag">&lt;<span class="name">strong</span>&gt;</span>注意！搬运内容，原页面(Origin Site): <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://aidn.jp/mikutap"</span>&gt;</span>https://aidn.jp/mikutap<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"scene_loading"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span> <span class="attr">size</span>=<span class="string">"1"</span> <span class="attr">color</span>=<span class="string">"#fff"</span>&gt;</span> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"scene_main"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"set"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"attention"</span>&gt;</span>点击 &amp;amp; 拖动或者按任意键!<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"bt_backtrack"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>背景音乐: 开启<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"about_cover"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"about"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"about_in"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"close"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"bt_close"</span>&gt;</span>×<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"con"</span>&gt;</span> 声音来源 <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://ec.crypton.co.jp/pages/prod/vocaloid/mikuv4x"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>Hatsune Miku<span class="tag">&lt;/<span class="name">a</span>&gt;</span> <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"con"</span>&gt;</span> 作者 <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://aidn.jp"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>daniwell<span class="tag">&lt;/<span class="name">a</span>&gt;</span> (<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://twitter.com/daniwell_aidn"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>twitter<span class="tag">&lt;/<span class="name">a</span>&gt;</span>) <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"link"</span>&gt;</span> 灵感来源 <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://patatap.com/"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>Patatap<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span>(令人赞叹的网页!)<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"bt_back"</span>&gt;</span>＜返回<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"bt_fs"</span>&gt;</span>□全屏显示<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><h4 id="自己魔改后的music-html文件："><a href="#自己魔改后的music-html文件：" class="headerlink" title="自己魔改后的music.html文件："></a>自己魔改后的music.html文件：</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- music.html --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"IE=edge"</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"apple-mobile-web-app-capable"</span> <span class="attr">content</span>=<span class="string">"yes"</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0, user-scalable=0"</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"description"</span> <span class="attr">content</span>=<span class="string">"初音未来版本的通过点击/触摸播放声音并出现变化图案的互动内容。"</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>MUSIC - 马树菌的博客驿站<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"apple-touch-icon"</span> <span class="attr">href</span>=<span class="string">"icon.png"</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"https://fonts.loli.net/css?family=Quicksand:400"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span> <span class="attr">href</span>=<span class="string">"shared/sp/css/common.css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span> <span class="attr">href</span>=<span class="string">"css/mikutap.css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span> <span class="attr">src</span>=<span class="string">"https://cdnjs.loli.net/ajax/libs/jquery/2.2.4/jquery.min.js"</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span> <span class="attr">src</span>=<span class="string">"https://cdnjs.loli.net/ajax/libs/pixi.js/3.0.11/pixi.min.js"</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span> <span class="attr">src</span>=<span class="string">"https://cdnjs.loli.net/ajax/libs/gsap/1.19.1/TweenMax.min.js"</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span> <span class="attr">src</span>=<span class="string">"shared/js/common-2.min.js"</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span> <span class="attr">src</span>=<span class="string">"js/mikutap.min.js"</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"view"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"scene_top"</span>&gt;</span></span><br><span class="line">      </span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>MUSIC<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">      </span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"ng"</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"atten"</span> <span class="attr">style</span>=<span class="string">"font-weight: bold;"</span>&gt;</span>十分抱歉<span class="tag">&lt;<span class="name">br</span>&gt;</span>您的浏览器并不支持本页面面需要的特性<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      </span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ok"</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"bt_start"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span> <span class="attr">style</span>=<span class="string">"font-weight: bold;"</span>&gt;</span>!开始!<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      </span><br><span class="line">    <span class="comment">&lt;!-- &lt;p id="bt_about"&gt;&lt;a href=""&gt;*关于*&lt;/a&gt;&lt;/p&gt; --&gt;</span></span><br><span class="line">      </span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ok"</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"padding-top: 10px;font-weight: bold;"</span>&gt;</span>乐柔要唱歌啦<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"attention"</span> <span class="attr">style</span>=<span class="string">"font-weight: bold;"</span>&gt;</span>※请打开声音并享受。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      </span><br><span class="line">  <span class="comment">&lt;!--    &lt;div class="ok"&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">     &lt;p class="tit"&gt;&lt;strong&gt;注意！搬运内容，原页面(Origin Site): &lt;a href="https://aidn.jp/mikutap"&gt;https://aidn.jp/mikutap&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    &lt;/div&gt; --&gt;</span></span><br><span class="line">      </span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"scene_loading"</span>&gt;</span></span><br><span class="line">      </span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span> <span class="attr">size</span>=<span class="string">"1"</span> <span class="attr">color</span>=<span class="string">"#fff"</span>&gt;</span> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"scene_main"</span>&gt;</span></span><br><span class="line">      </span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"set"</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"attention"</span> <span class="attr">style</span>=<span class="string">"font-weight: bold;"</span>&gt;</span>点击 &amp;amp; 拖动或者按任意键!<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"bt_backtrack"</span> <span class="attr">style</span>=<span class="string">"font-weight: bold;"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>乐柔的嘴巴: 开启<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      </span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">  <span class="comment">&lt;!-- &lt;div id="about_cover"&gt;&lt;/div&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">  &lt;div id="about"&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    &lt;div id="about_in"&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">      &lt;p class="close"&gt;&lt;span id="bt_close"&gt;×&lt;/span&gt;&lt;/p&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">      &lt;p class="con"&gt; 声音来源 &lt;a href="https://ec.crypton.co.jp/pages/prod/vocaloid/mikuv4x" target="_blank"&gt;Hatsune Miku&lt;/a&gt; &lt;/p&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">      &lt;p class="con"&gt; 作者 &lt;a href="https://aidn.jp" target="_blank"&gt;daniwell&lt;/a&gt; (&lt;a href="https://twitter.com/daniwell_aidn" target="_blank"&gt;twitter&lt;/a&gt;) &lt;/p&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">      &lt;p class="link"&gt; 灵感来源 &lt;a href="http://patatap.com/" target="_blank"&gt;Patatap&lt;/a&gt;&lt;br&gt;(令人赞叹的网页!)&lt;/p&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    &lt;/div&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">  &lt;/div&gt; --&gt;</span></span><br><span class="line">    </span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"bt_back"</span> <span class="attr">style</span>=<span class="string">"font-weight: bold;"</span>&gt;</span>＜返回<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"bt_fs"</span> <span class="attr">style</span>=<span class="string">"font-weight: bold;"</span>&gt;</span>☒全屏显示<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>​    具体说来后者的区别就是注释掉了不少内容，换了下一些用词——但，奏效就行(<em>￣▽￣</em>)ブ</p><p>​    （另外，相应的JS文件也进行同样偷梁换柱的操作）</p><p>接着就把这一摞子的源码都放在了自己的hexo博客后台一个命名为MUISIC的文件夹里，并把自己博客主页的“相册”字段改为“音乐”字段且映射到MUSIC文件夹里，最终再git到自己在github上的博客代码仓库。</p><p>​    (<em>^__^</em>) 嘻嘻……</p><p>​    大功告成！C计划完美实现——</p><p><img src="https://i.loli.net/2019/01/12/5c39516768d74.png" alt="1547258339921.png" title="1547258339921.png"></p><hr><h4 id="参考文献："><a href="#参考文献：" class="headerlink" title="参考文献："></a>参考文献：</h4><blockquote><p><a href="https://blog.eunji.cn/music/music.html" target="_blank" rel="noopener">乐柔嘴巴</a></p><p><a href="https://cloud.tencent.com/developer/article/1333764" target="_blank" rel="noopener">Nginx 反向代理学习及实例笔记</a></p><p><a href="https://www.zifangsky.cn/728.html" target="_blank" rel="noopener">利用Nginx的反向代理克隆生成镜像网站——中间人攻击</a></p><p><a href="https://aidn.jp/mikutap/" target="_blank" rel="noopener">原作者daniwell的mikutap原始游戏页面</a></p><p><a href="https://github.com/HFIProgramming/mikutap" target="_blank" rel="noopener">github上国人搬运的mikutap开源镜像</a></p></blockquote><h4 id="特别致谢："><a href="#特别致谢：" class="headerlink" title="特别致谢："></a>特别致谢：</h4><blockquote><p><a href="https://hexo.itsukio.com/" target="_blank" rel="noopener">执着的少年</a></p></blockquote><p><img src="https://i.loli.net/2019/01/12/5c395190d0461.jpg" alt="6.deer.jpg" title="6.deer.jpg"></p>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;p&gt;先前在某个Q群里有位网友发了个链接，一点进去，发现是个极度让人耳目一新的初音未来音乐网页游戏。 为了让有幸看到这篇文章的看官也来体会下本人第一次玩时的激动，抛个链接——&lt;a href=&quot;https://blog.eunji.cn/music/music.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;乐柔嘴巴&lt;/a&gt;。链接的具体地址是&lt;a href=&quot;https://blog.eunji.cn/music/music.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;blog.eunji.cn/music/music.html&lt;/a&gt;。尽管这个页面实在让人上瘾，但是自己同样是个喜欢折腾博客网站的家伙，而这位仁兄是在一个博客网站下放的这个网页。自己就开始思量，可不可以在自己的的博客下&lt;a href=&quot;https://www.lesliewong.cn&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;www.lesliewong.cn&lt;/a&gt;也放个这样的游戏呢？这也很彰显自己的品格&amp;lt;(￣︶￣)&amp;gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="游戏" scheme="http://lesliewong.cn/categories/%E6%B8%B8%E6%88%8F/"/>
    
    
      <category term="游戏" scheme="http://lesliewong.cn/tags/%E6%B8%B8%E6%88%8F/"/>
    
  </entry>
  
  <entry>
    <title>如何用优雅的格式打印C语言代码？</title>
    <link href="http://lesliewong.cn/2018/12/14/How-to-print-c-document-in-elegant-format/"/>
    <id>http://lesliewong.cn/2018/12/14/How-to-print-c-document-in-elegant-format/</id>
    <published>2018-12-13T17:53:37.000Z</published>
    <updated>2019-01-13T01:58:32.209Z</updated>
    
    <content type="html"><![CDATA[<p>​自己在学习过程中发现，大家经常用来敲代码的sublime没有提供代码打印功能，而教学过程中用到的Dev-C++打印出来的东西则是歪歪扭扭的，十分难看。Visual C++ 6.0 更是由于兼容性问题，在本人的win10上无法打印——<br>因此，安利一款可以用优雅格式打印C语言代码的软件——Keil C。只需要区区4个步骤，便可用优雅的格式打印C语言代码。</p><a id="more"></a><h3 id="1-下载安装单片机调试软件Keil-C。"><a href="#1-下载安装单片机调试软件Keil-C。" class="headerlink" title="1. 下载安装单片机调试软件Keil C。"></a>1. 下载安装单片机调试软件Keil C。</h3><p><img src="https://i.loli.net/2019/01/11/5c38b116804b2.jpg" alt="打印.jpg" title="打印.jpg"></p><h3 id="2-Keil-C界面工具栏打开C语言文件。"><a href="#2-Keil-C界面工具栏打开C语言文件。" class="headerlink" title="2. Keil C界面工具栏打开C语言文件。"></a>2. Keil C界面工具栏打开C语言文件。</h3><p><img src="https://i.loli.net/2019/01/11/5c38b1a45da95.jpg" alt="格式工厂打印2.jpg" title="格式工厂打印2.jpg"></p><h3 id="3-按Ctrl-P快捷键快速打开打印界面。"><a href="#3-按Ctrl-P快捷键快速打开打印界面。" class="headerlink" title="3. 按Ctrl+P快捷键快速打开打印界面。"></a>3. 按Ctrl+P快捷键快速打开打印界面。</h3><p><img src="https://i.loli.net/2019/01/11/5c38b1ce00441.jpg" alt="打印3.jpg" title="打印3.jpg"></p><h3 id="4-打印完成的页面效果如下，实在很优雅-……"><a href="#4-打印完成的页面效果如下，实在很优雅-……" class="headerlink" title="4. 打印完成的页面效果如下，实在很优雅(^__^) ……"></a>4. 打印完成的页面效果如下，实在很优雅(<em>^__^</em>) ……</h3><p><img src="https://i.loli.net/2019/01/11/5c38b21ddd9f2.jpg" alt="格式工厂打印4.jpg" title="格式工厂打印4.jpg"></p><p><img src="https://i.loli.net/2019/01/11/5c38b23d49eb7.jpg" alt="5.horse.jpg" title="5.horse.jpg"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;​自己在学习过程中发现，大家经常用来敲代码的sublime没有提供代码打印功能，而教学过程中用到的Dev-C++打印出来的东西则是歪歪扭扭的，十分难看。Visual C++ 6.0 更是由于兼容性问题，在本人的win10上无法打印——&lt;br&gt;因此，安利一款可以用优雅格式打印C语言代码的软件——Keil C。只需要区区4个步骤，便可用优雅的格式打印C语言代码。&lt;/p&gt;
    
    </summary>
    
    
      <category term="技巧" scheme="http://lesliewong.cn/categories/%E6%8A%80%E5%B7%A7/"/>
    
    
      <category term="技巧" scheme="http://lesliewong.cn/tags/%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>借助Docker和Kodexplorer实现简易化部署Discuz类论坛网站</title>
    <link href="http://lesliewong.cn/2018/11/28/How-to-build-a-discuz-forum-using-Docker-and-Kodexplorer/"/>
    <id>http://lesliewong.cn/2018/11/28/How-to-build-a-discuz-forum-using-Docker-and-Kodexplorer/</id>
    <published>2018-11-27T17:53:37.000Z</published>
    <updated>2019-01-13T01:58:08.363Z</updated>
    
    <content type="html"><![CDATA[<p>基于DiscuzX系列构建的论坛可以说是大家在日常浏览各类BBS网站中接触最多的论坛类型了。本教程旨在引导读者通过简单明确的一些步骤就打造出自己的论坛网站，做一个实实在在的站长。</p><a id="more"></a><h2 id="工具-原料"><a href="#工具-原料" class="headerlink" title="工具/原料"></a>工具/原料</h2><blockquote><p>腾讯云服务器 CentOS 7.2 64位；</p><p>远程控制程序  Xshell 6;</p><p>谷歌浏览器 版本号 69.0.3497.81 ；</p><p>DiscuzX3.4代码包。</p></blockquote><h2 id="知识科普"><a href="#知识科普" class="headerlink" title="知识科普"></a>知识科普</h2><blockquote><p><strong>Docker:</strong>Docker是一个开源的引擎，可以轻松地为任何应用创建一个轻量级的、可移植的、自给自足的容器。开发者在笔记本上编译测试通过的容器可以批量地在生产环境中部署，包括VMs（虚拟机）、bare metal、OpenStack集群和其他的基础应用平台。</p><p>Docker通常用于如下场景：</p><ul><li>Web应用的自动化打包和发布；</li><li>自动化测试和持续集成、发布；</li><li>在服务型环境中部署和调整数据库或其他的后台应用；</li><li>从头编译或者扩展现有的OpenShift或Cloud Foundry平台来搭建自己的PaaS环境。</li></ul><p>Docker中文社区：<a href="http://www.docker.org.cn/" target="_blank" rel="noopener">www.docker.org.cn/</a></p><p>Docker官方文档：<a href="https://docs.docker.com/" target="_blank" rel="noopener">https://docs.docker.com/</a></p><p>不过，我们这里所用到的Kodexplorer脚本已经由某位前辈使用Docker容器封装好了。在具体使用时只需要在调用一条命令即可（见下文）</p></blockquote><hr><blockquote><p><strong>Xshell</strong>:一款强大的安全终端模拟软件，支持SHH1，SHH2，以及Microsoft Windows 平台的TELNET协议。Xshell独具创新性的设计和特色，助力于用户在复杂的网络环境中通过互联网安全连接到远程书机中。Xshell有商业版和免费版两种，免费版限于家庭和学校用户，限制也不是太多。</p><p>Xshell官方页面：<a href="https://www.netsarang.com/products/xsh_overview.html" target="_blank" rel="noopener">https://www.netsarang.com/products/xsh_overview.html</a></p></blockquote><hr><blockquote><p><strong>Kodexplorer</strong>:一款快捷高效的私有云和在线文档管理系统，为个人网站、企业私有云部署、网络存储、在线文档管理、在线办公等提供安全可控、简便易用的体验。Kodexplorer采用windows风格界面及操作习惯，用户无需适应即可快速上手，且其支持几百种常用文件格式的在线预览。官方有提供开源版本。</p><p>Kodexplorer官方网站：<a href="https://www.kodcloud.com/" target="_blank" rel="noopener">https://www.kodcloud.com/</a></p></blockquote><hr><blockquote><p>Discuz ! X: Discuz!X 社区软件，是一个采用 PHP 和 MySQL 等其他多种数据库构建的性能优异、功能全面、安全稳定的社区论坛平台，是全球市场占有率第一的社区论坛（BBS）软件。</p><p>Discuz ! 官方站：<a href="http://www.discuz.net/forum-10-1.html" target="_blank" rel="noopener">http://www.discuz.net/forum-10-1.html</a> </p></blockquote><h2 id="详细步骤："><a href="#详细步骤：" class="headerlink" title="详细步骤："></a>详细步骤：</h2><h3 id="1）配置腾讯云服务器"><a href="#1）配置腾讯云服务器" class="headerlink" title="1）配置腾讯云服务器"></a>1）配置腾讯云服务器</h3><blockquote><ol><li><p>购置域名和云服务器</p><p>​    </p><p>用自己的微信号登入腾讯云官网（<a href="https://cloud.tencent.com/），选择左上角云产品中的云服务器，新建云服务器（如图）；" target="_blank" rel="noopener">https://cloud.tencent.com/），选择左上角云产品中的云服务器，新建云服务器（如图）；</a></p><hr><p><img src="https://i.loli.net/2019/01/11/5c38a789a43a5.png" alt="1539352833349.png" title="1539352833349.png"></p><hr><p>进去后就是云服务器的配置界面了，地域、机型的话按自己需要选择，关键在于选择操作系统为<strong>CentOS  7.2 64位</strong>。</p><hr><p><img src="https://i.loli.net/2019/01/11/5c38a7bf147e5.png" alt="1539353052321.png" title="1539353052321.png"></p><hr><p>订单完成后就是下图中的状态了。主机密码的话腾讯云会通过站内信的方式发给我们，请注意网站右上角消息，并记得及时修改初始密码）</p><hr><p><img src="https://i.loli.net/2019/01/11/5c38a7e28af42.png" alt="1539353208721.png" title="1539353208721.png"></p><hr><p>接下来我们讲注册域名。选择左上角中的云产品的域名注册，进入我的域名管理界面如下</p><hr><p><img src="https://i.loli.net/2019/01/11/5c38a80442247.png" alt="1539353436760.png" title="1539353436760.png"></p><hr><p>点击注册域名，在查询框里输入选择自己需要的域名及后缀，查询未被他人占用后加入购物车立即购买即可</p><hr><p><img src="https://i.loli.net/2019/01/11/5c38a822d9bcf.png" alt="1539353702890.png" title="1539353702890.png"></p><hr><p>例如本人的域名（已备案）</p><hr><p><img src="https://i.loli.net/2019/01/11/5c38a840ae9a3.png" alt="1539353761344.png" title="1539353761344.png"></p><hr><p>注意：众所周知的因素，在腾讯云注册的新域名烦请走下备案流程，具体流程请移步参考腾讯云官方的备案文档（人家已经为你省了很多步骤了）</p><p><a href="https://cloud.tencent.com/document/product/243" target="_blank" rel="noopener">https://cloud.tencent.com/document/product/243</a></p></li><li><p>映射域名和云服务器</p><p>​    </p><p>点击云产品中的云解析进入云解析后台，进入右下边“操作”下的“解析”</p><hr><p><img src="https://i.loli.net/2019/01/11/5c38a8766e1cc.png" alt="1539356370101.png" title="1539356370101.png"></p><hr><p><img src="https://i.loli.net/2019/01/11/5c38a89eaa7aa.png" alt="1539356521977.png" title="1539356521977.png"></p><hr><p>添加记录，分别用鼠标点击不同的输入框下方会出现相应说明。自己多体验——</p><hr><p><img src="https://i.loli.net/2019/01/11/5c38a8d180720.png" alt="1539356695756.png" title="1539356695756.png"></p><hr><p>对于我们目前讲到的这个实例来说，我们选择记录类型为A，在记录值中输入自己云服务器的公网IP（在云服务器控制台可查）</p><hr><p><img src="https://i.loli.net/2019/01/11/5c38a90065f39.png" alt="1539357062935.png" title="1539357062935.png"></p><hr><p><img src="https://i.loli.net/2019/01/11/5c38a91a9dec1.png" alt="1539357011006.png" title="1539357011006.png"></p><hr><p>设置好了后，保存即可。</p></li></ol><p>   就这样，云服务器和域名的映射就设置好了——</p></blockquote><hr><h3 id="2）Xshell远程连接服务器"><a href="#2）Xshell远程连接服务器" class="headerlink" title="2）Xshell远程连接服务器"></a>2）Xshell远程连接服务器</h3><blockquote><p>​    登录云服务器的话，可以直接在腾讯云官网的云服务器后台里登录（如图），不过我们这里采用的是另外一种方法，使用专业远程控制软件Xshell来协助远程登录。</p><hr><p><img src="https://i.loli.net/2019/01/11/5c38a94693e80.png" alt="1539357779494.png" title="1539357779494.png"></p><hr><p><img src="https://i.loli.net/2019/01/11/5c38a983c27a6.png" alt="1539357880701.png" title="1539357880701.png"></p></blockquote><blockquote><hr><p>1.到官网下载Xshell 6 软件</p><p>在浏览框里输入以下链接：<a href="https://www.netsarang.com/products/xsh_overview.html" target="_blank" rel="noopener">https://www.netsarang.com/products/xsh_overview.html</a> 进入Xshell的官方下载界面</p><hr><p><img src="https://i.loli.net/2019/01/11/5c38a9a68c6ad.png" alt="1539440950942.png" title="1539440950942.png"></p><hr><p>点击download后进入版本选择界面，选择家庭/学校用途版本,随便填写一些信息及重要的电子邮件地址，提交就行。</p><hr><p><img src="https://i.loli.net/2019/01/11/5c38a9c054eaa.png" alt="1539441010102.png" title="1539441010102.png"></p><hr><p>​    之后便会有邮件发至电子邮箱，点击里面的链接 </p><p>​    即可下载。</p><hr><p><img src="https://i.loli.net/2019/01/11/5c38a9e4b1150.png" alt="1539441240936.png" title="1539441240936.png"></p><hr><p>2.安装Xshell 6 </p><p>双击下载完成的exe文件，进行安装</p><hr><p><img src="https://i.loli.net/2019/01/11/5c38aa069ae0b.png" alt="1539442812495.png" title="1539442812495.png"></p><hr><p>安装界面，点下一步，同意条款，下一步，随便输入名字公司信息，安装到C盘外，确定安装，进度条跑完即可 </p><hr><p><img src="https://i.loli.net/2019/01/11/5c38aa25af089.png" alt="1539443197084.png" title="1539443197084.png"></p><hr><p><img src="https://i.loli.net/2019/01/11/5c38aa479064e.png" alt="1539443248146.png" title="1539443248146.png"></p><hr><p><img src="https://i.loli.net/2019/01/11/5c38aa6aeab30.png" alt="1539443286639.png" title="1539443286639.png"></p><hr><p><img src="https://i.loli.net/2019/01/11/5c38aa84c72a2.png" alt="1539443365470.png" title="1539443365470.png"></p><hr><p>3.Xshell连接远程服务器</p><p>运行Xshell, 初始界面如下</p><hr><p><img src="https://i.loli.net/2019/01/11/5c38aaa406125.png" alt="1539615814983.png" title="1539615814983.png"></p><hr><p>点菜单栏文件— 新建，出现新建会话弹窗。在主机输入框中输入自己的云服务器分配的公网IP，其他设置不变，点击“连接”</p><hr><p><img src="https://i.loli.net/2019/01/11/5c38aabf7d795.png" alt="1539616198499.png" title="1539616198499.png"></p><hr><p>之后会出现SSH安全警告，如果是在自己的电脑上操作的话，“接受并保存”即可。</p><hr><p><img src="https://i.loli.net/2019/01/11/5c38ac86ce8b7.jpg" alt="1539616297332.jpg" title="1539616297332.jpg"></p><hr><p>输入登录用户名（默认为root)</p><hr><p><img src="https://i.loli.net/2019/01/11/5c38ab011b479.png" alt="1539616367172.png" title="1539616367172.png"></p><hr><p>接下来输入主机密码</p><hr><p><img src="https://i.loli.net/2019/01/11/5c38ab23dffb2.png" alt="1539616544527.png" title="1539616544527.png"></p><hr><p>登录成功！ &lt;(￣ˇ￣)/）</p><hr><p><img src="https://i.loli.net/2019/01/11/5c38b059823bb.jpg" alt="1539616844526.jpg" title="1539616844526.jpg"></p><hr><p>这样，本地与远程云服务器的连接就完成了！</p><p>(^o^)/~</p></blockquote><hr><h3 id="3）借助Docker向服务器安装脚本"><a href="#3）借助Docker向服务器安装脚本" class="headerlink" title="3）借助Docker向服务器安装脚本"></a>3）借助Docker向服务器安装脚本</h3><blockquote><p>1.连接成功后，在命令行界面输入以下脚本命令</p><p>curl -sSL <a href="http://www.xinghuankj.com/docker/script/xinghuan-V1.6.sh" target="_blank" rel="noopener">http://www.xinghuankj.com/docker/script/xinghuan-V1.6.sh</a> | bash</p><p>按回车就可以开始安装用Docker封装好的Kodexplorer脚本了.</p><hr><p><img src="https://i.loli.net/2019/01/11/5c38acc3ca254.png" alt="1539627239350.png" title="1539627239350.png"></p><hr><p>2.当命令行界面出现“请修改需要访问网站的电脑或者主机的hosts文件，将以下内容加入hosts文件”提示的时候，即宣告安装完成了。我们移步到浏览器那里去折腾。</p><hr><p><img src="https://i.loli.net/2019/01/11/5c38ace5a82d2.png" alt="1539627697904.png" title="1539627697904.png"></p><hr></blockquote><hr><h3 id="4）浏览器操作Kodexplorer"><a href="#4）浏览器操作Kodexplorer" class="headerlink" title="4）浏览器操作Kodexplorer"></a>4）浏览器操作Kodexplorer</h3><blockquote><p> 1.浏览器地址栏里输入主机IP（也可输入已配置好的域名），访问Kodexplorer，初始界面如下，需要我们设置管理员账号</p><hr><p> <img src="https://i.loli.net/2019/01/11/5c38ad131d7e4.png" alt="1539627757821.png" title="1539627757821.png"></p><hr><p> 2.设置完毕点登录，会跳转到Kodexplorer登录界面，用我们刚才的管理员账号直接登录</p><p> （PS: 可能会出现Kodexplorer版本更新弹窗，按照指示操作就行）</p><hr><p> <img src="https://i.loli.net/2019/01/11/5c38ad37a1d3d.png" alt="1539627797489.png" title="1539627797489.png"></p><hr><p> 3.登录成功后的界面如下，可以注意到右上边有个提示告诉我们文件仅为只读状态。我们需要移步到Xshell中获取Kodexplorer的文件读写权限。</p><hr><p> <img src="https://i.loli.net/2019/01/11/5c38ad530a864.png" alt="1539627933216.png" title="1539627933216.png"></p><hr><p> 4.在Xshell的命令行界面输入以下命令</p><p> chmod -R 777 /webser/</p><hr><p> <img src="https://i.loli.net/2019/01/11/5c38ad7121732.png" alt="1539628008064.png" title="1539628008064.png"></p><hr><p> 5.回到浏览器中，点刷新，就会发现右上边的提示符号消失了，我们成功地获取了文件读写权限</p><hr><p> <img src="https://i.loli.net/2019/01/11/5c38ad9633344.png" alt="1539629018926.png" title="1539629018926.png"></p><hr><p> 折腾到这儿，一个直接在浏览器跑的的图形化Web网站管理后台就基本有了雏形了。接下来，我们就借助这个平台，上传DiscuzX！压缩包，做建站准备。</p></blockquote><hr><h3 id="5）创建DiscuzX网站资源管理后台"><a href="#5）创建DiscuzX网站资源管理后台" class="headerlink" title="5）创建DiscuzX网站资源管理后台"></a>5）创建DiscuzX网站资源管理后台</h3><blockquote><p> 1.前往DiscuzX！的官方代码托管站点下载代码压缩包。网址是 <a href="https://gitee.com/ComsenzDiscuz/DiscuzX" target="_blank" rel="noopener">https://gitee.com/ComsenzDiscuz/DiscuzX</a> 界面如下：</p><hr><p> <img src="https://i.loli.net/2019/01/11/5c38adbd9f297.png" alt="1542481517619.png" title="1542481517619.png"></p><hr><p> 2.点击上图箭头所指示的“克隆/下载”按钮，下载zip压缩包到本地。（什么验证码之类的就照人家提示做就行了——）</p><hr><p> <img src="https://i.loli.net/2019/01/11/5c38addf3f0b5.png" alt="1542481977323.png" title="1542481977323.png"></p><hr><p> 3.跳转回先前的kodexplorer管理后台，进入到/webser/www/对应的文件夹目录下面，上传DiscuzX压缩包。</p><hr><p> <img src="https://i.loli.net/2019/01/11/5c38adfc42e51.png" alt="1542482296406.png" title="1542482296406.png"></p><hr><p> <img src="https://i.loli.net/2019/01/11/5c38ae135a06e.png" alt="1542482355809.png" title="1542482355809.png"></p><hr><p> 4.操作完成界面如下，接着就双击zip包解压缩，将子文件夹upload右键解压到当前目录。</p><hr><p> <img src="https://i.loli.net/2019/01/11/5c38ae38ee0a8.png" alt="1542482555141.png" title="1542482555141.png"></p><hr><p> 5.将upload重命名为dz。（0.o   看自己想法了）  接下来前往/webser/compose/nginx/conf.d/目录下。</p><hr><p> <img src="https://i.loli.net/2019/01/11/5c38ae528ef09.png" alt="1542483128118.png" title="1542483128118.png"></p><hr><p> 6.右键kod.conf-更多-创建副本，并将副本重命名为dz.conf，然后打开dz.conf, </p><hr><p> <img src="https://i.loli.net/2019/01/11/5c38ae698c08e.png" alt="1542483393558.png" title="1542483393558.png"></p><hr><p> <img src="https://i.loli.net/2019/01/11/5c38ae8ce7963.png" alt="1542483825857.png" title="1542483825857.png"></p><hr><p> 7.改写root字段的内容为 /webser/www/dz,   server_name字段改为example.lesliewong.cn. (读者请填写自己对应服务器映射的域名)</p><hr><p> <img src="https://i.loli.net/2019/01/11/5c38aec710ac6.png" alt="1542484287768.png" title="1542484287768.png"></p><hr><p> 8.同时还要修改同一目录下的kod.conf文件，修改内容如图所标（域名请自觉对应），作用是使这个域名映射到DiscuzX站点的管理后台。（依旧是这个kodexplorer资源管理器）</p><hr><p> <img src="https://i.loli.net/2019/01/11/5c38aeecc8287.png" alt="1542600360615.png" title="1542600360615.png"></p><hr><p> 9.OK，做完这些之后马上就要大功告成了！ 接下来我们转移到 Xshell6命令行界面上，输入下面一行命令重启nginx服务器。 </p><p> docker restart nginx </p><hr><p> <img src="https://i.loli.net/2019/01/11/5c38af18ea729.png" alt="1542599669959.png" title="1542599669959.png"></p><hr><p> 10.转到浏览器网址栏输入刚才的dz文件夹域名example.lesliewong.cn. 铛铛~铛铛！DiscuzX的配置页面出现了！</p><hr><p> <img src="https://i.loli.net/2019/01/11/5c38af39b8808.png" alt="1542600619767.png" title="1542600619767.png"></p><hr></blockquote><hr><h3 id="6）连接数据库对接DiscuzX站点"><a href="#6）连接数据库对接DiscuzX站点" class="headerlink" title="6）连接数据库对接DiscuzX站点"></a>6）连接数据库对接DiscuzX站点</h3><blockquote><p>1.照着页面上的提示按钮，我同意——（开始安装）下一步——（设置运行环境：全新）下一步，就到了         创建数据库页面，如下。在此我们需要打住一下，回到我们的腾讯云主机管理页面。</p><hr><p><img src="https://i.loli.net/2019/01/11/5c38af5f6bc63.png" alt="1542602776485.png" title="1542602776485.png"></p><hr><p>2.来到腾讯云主机管理页面，如下图，复制主机对应的内网IP，然后填写到上面的DiscuzX表单上的数据库服务器字段（去掉localhost）。</p><hr><p><img src="https://i.loli.net/2019/01/11/5c38af8397193.png" alt="1543301253211.png" title="1543301253211.png"></p><hr><p>3.接着我们需要到Kodexplorer界面去获取数据库密码，如下图。打开/webser/README.MD, 弹出的文件里面有写数据库密码，将其复制下来，同样拷贝到上面的DiscuzX表单中。</p><hr><p><img src="https://i.loli.net/2019/01/11/5c38af9c3939b.png" alt="1543303448584.png" title="1543303448584.png"></p><hr><p>4.完成上面的步骤后，再补充表单中其他的信息，就是下面这个样子了。</p><hr><p><img src="https://i.loli.net/2019/01/11/5c38afb4c265e.png" alt="1543307987994.png" title="1543307987994.png"></p><hr><p>5.万事俱备，只欠东风。OK！点击“下一步”。进度条跑完就是下面这个页面了——</p><hr><p><img src="https://i.loli.net/2019/01/11/5c38afd575f2d.png" alt="1543308134838.png" title="1543308134838.png"></p><hr><p>6.点击右下角的“您的论坛已完成安装，点此访问”即可访问我们的目标站点，DiscuzX 论坛原始界面。至于后面的怎样论坛定制化，大家就去DiscuzX的官方论坛看一些优秀的教程吧！有很多开源的应用可以使用。</p><hr><p><img src="https://i.loli.net/2019/01/11/5c38aff2d430a.png" alt="1543308358551.png" title="1543308358551.png"></p><hr><p>​    ~ o(<em>￣▽￣</em>)ブ</p></blockquote><hr><h2 id="尾语"><a href="#尾语" class="headerlink" title="尾语"></a>尾语</h2><blockquote><hr><p>教程到这里，建站流程就走完了，感谢各位耐心看到这里&lt;(￣ˇ￣)/</p><p>通过这个教程，我们接触到了kodexplorer，一款很好用的直接在浏览器跑的图形化资源管理器，xshell 6， Linux机器远程控制软件，以及云的知识~~， 当然也少不了我们关注的主角——DiscuzX论坛。</p><p>相信在未来的发展中，各位依旧可以发现这些工具对自己起到很大的帮助。</p><p>共勉   ~&lt;(￣︶￣)↗</p><hr></blockquote><hr><h6 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h6><blockquote><p><a href="http://api.xinghuankj.com/" target="_blank" rel="noopener">http://api.xinghuankj.com/</a></p><p><a href="https://kodcloud.com/help/show-1.html" target="_blank" rel="noopener">https://kodcloud.com/help/show-1.html</a></p><p><a href="https://www.youtube.com/watch?v=IN7FrJopIIM" target="_blank" rel="noopener">https://www.youtube.com/watch?v=IN7FrJopIIM</a></p><p><a href="http://www.docker.org.cn/book/docker/what-is-docker-16.html" target="_blank" rel="noopener">http://www.docker.org.cn/book/docker/what-is-docker-16.html</a></p></blockquote><p><img src="https://i.loli.net/2019/01/11/5c38b0cc1aa7d.jpg" alt="4.cow.jpg" title="4.cow.jpg"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;基于DiscuzX系列构建的论坛可以说是大家在日常浏览各类BBS网站中接触最多的论坛类型了。本教程旨在引导读者通过简单明确的一些步骤就打造出自己的论坛网站，做一个实实在在的站长。&lt;/p&gt;
    
    </summary>
    
    
      <category term="前端" scheme="http://lesliewong.cn/categories/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="建站" scheme="http://lesliewong.cn/categories/%E5%89%8D%E7%AB%AF/%E5%BB%BA%E7%AB%99/"/>
    
    
      <category term="建站" scheme="http://lesliewong.cn/tags/%E5%BB%BA%E7%AB%99/"/>
    
      <category term="前端" scheme="http://lesliewong.cn/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>一元多项式的加法、减法、乘法和微分运算的C语言链表结构算法实现</title>
    <link href="http://lesliewong.cn/2018/11/03/A-C-algorithm-with-linked-list-to-express-addition-subtraction-multiplication-differential-of-polynomial/"/>
    <id>http://lesliewong.cn/2018/11/03/A-C-algorithm-with-linked-list-to-express-addition-subtraction-multiplication-differential-of-polynomial/</id>
    <published>2018-11-03T12:45:30.000Z</published>
    <updated>2019-01-13T01:57:39.315Z</updated>
    
    <content type="html"><![CDATA[<p>利用链表实现一元多项式的数学运算。如一元多项式 </p><img src="/2018/11/03/A-C-algorithm-with-linked-list-to-express-addition-subtraction-multiplication-differential-of-polynomial/1543086464267.png" title="This is an example image"><p>可以利用其系数p和指数e组合的方式实现链式存储。通过对线性表的基本操<br>作，例如插入，删除，查找等可以实现一元多项式的复杂运算，比如加，减，<br>乘，除等运算。 </p><a id="more"></a><h4 id="基本要求"><a href="#基本要求" class="headerlink" title="基本要求"></a>基本要求</h4><p>利用链表存储一元多项式，通过对链表的操作实现多项式的运算。 </p><h4 id="测试数据"><a href="#测试数据" class="headerlink" title="测试数据"></a>测试数据</h4><p>对于多项式：A(x) = 7 + 3x + 9x + 5x，B(x) = 8x + 22x − 9x，实现加，减，乘和微分，输出结果。</p><h3 id="解答："><a href="#解答：" class="headerlink" title="解答："></a>解答：</h3><h4 id="实现思路"><a href="#实现思路" class="headerlink" title="实现思路"></a>实现思路</h4><blockquote><p>代码结构为主分形式，主函数主要为一些提示，具体的输入输出则将参数传递到分函数中实现。分函数有创建一元多项式、多项式升幂排序、比较项指数大小、打印多项式、加法运算、减法运算、微分运算和乘法运算等。</p><hr><p>比较需要关注的是乘法方面的实现，思路是将乘法运算分解为一系列的加法运算。不过在这里着实纠结了好多天，本来呢觉得实现乘法自己应该为它再另外构造一个加法算法提供接口，以便实现它的加法迭代。可是呢，这样完全行不通，打印出来的都是0.0，自己完全不晓得为什么，重复对着代码思考了好多次了，觉得没什么毛病，但就是行不通——</p><hr><p>然后呢，大概是前天吧！自己捣弄了半天代码调试依旧不会的情况下，决定回归输出调试，于是就在乘法函数里注释掉了迭代用的加法，另外在加法循环体外面上头加了两句打印语句想看看多项式A和多项式B的每一项相乘后得到的结果是咋样的。</p><hr><p>于是乎奇迹就诞生了，用x^1+2x^2+3x^3和x^1作为测试数据，莫名其妙地乘法结果就给打印出来了，完全没有用到我费了九牛二虎之力写出来的迭代加法——</p><hr><p>不过显示结果还是有点小bug，显示出来的是正确结果的相反数，而且主函数返回值也不是正常的0，而是莫名其妙的3221225477</p><hr><p>接着本着修bug的精神就在乘法函数里运算部分乘了个负一，这下结果就好看了，如下（返回值依旧不正常）</p></blockquote><p><img src="https://i.loli.net/2019/01/11/5c38b4bb12219.png" alt="1541253016150.png" title="1541253016150.png"></p><blockquote><p>但是，天下怎么会有凭空掉馅饼这等好事！？自己再用上面给出的复杂测试数据跑了下，这下就没那么好看了，得出来的是一个明显错误的结果(。﹏。*)</p></blockquote><p><img src="https://i.loli.net/2019/01/11/5c38b4f415e63.png" alt="1541252764755.png" title="1541252764755.png"></p><blockquote><p>而且也发现了微分算法部分的一个小bug——</p><p>好吧，只能后续继续改进了，自己应该是在指针理解上出现了问题，回头去《深入理解C指针》。</p><hr><p>另外，假如用户输入的两个一元多项式为相同的话，输出也会有点不正常，需要弄弄。</p><p>看来有点眉目了</p></blockquote><p><img src="https://i.loli.net/2019/01/11/5c38b539227db.png" alt="abc.png" title="abc.png"></p><blockquote><p>11.25这天晚上，我终于弄明白了bug的缘由——丫蛋自己没把Pd给初始化！，而且打印函数如果给它的参数是个空地址的话，它会在那儿瞎转悠几圈，然后返回个不是0的返回值，直接结束程序——</p><hr><p>（还修复了打印首项有时会出现加号的小bug）</p><p>还存在一个问题，就是如果输入的两个多项式是相同的话，减法那部分结果会不显示任何值，而不是0。得弄弄</p><p>（已解决）</p><hr><p>OK，下面就贴下自己的代码了，折腾带注释版本，以及去掉无关注释~纯净版本^_^</p></blockquote><h4 id="实现代码-折腾注释版-："><a href="#实现代码-折腾注释版-：" class="headerlink" title="实现代码(折腾注释版)："></a>实现代码(折腾注释版)：</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">term</span>&#123;</span></span><br><span class="line"><span class="keyword">float</span> coef;</span><br><span class="line"><span class="keyword">int</span> expn;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">term</span> *<span class="title">next</span>;</span></span><br><span class="line">&#125;term,*LinkList;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> LinkList polynomial;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cmp</span><span class="params">(LinkList pa,LinkList pb)</span>                <span class="comment">//比较各项指数大小</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(pa-&gt;expn &gt; pb-&gt;expn)</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(pa-&gt;expn == pb-&gt;expn)</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">LocateElem</span><span class="params">(LinkList L,LinkList t,LinkList *q)</span>    <span class="comment">/*定位项数指数大小，使多项式按升幂排序               这里的*q起到内存保护的作用*/</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">LinkList p1=L-&gt;next;</span><br><span class="line">LinkList p2=L;</span><br><span class="line"><span class="keyword">while</span>(p1)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(t-&gt;expn &gt; p1-&gt;expn)</span><br><span class="line">&#123;</span><br><span class="line">p1=p1-&gt;next;</span><br><span class="line">p2=p2-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(t-&gt;expn == p1-&gt;expn)</span><br><span class="line">&#123;</span><br><span class="line">*q=p1;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">*q=p2;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">*q=p2;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">CreatePolyn</span><span class="params">(polynomial P)</span><span class="comment">//建立多项式所需的各项具体值</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">LinkList t;</span><br><span class="line">LinkList q;</span><br><span class="line">P-&gt;coef=<span class="number">0.0</span>;</span><br><span class="line">P-&gt;expn=<span class="number">-1</span>;</span><br><span class="line">P-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Please input coefficient and exponent below in format like 1,2 and end with 0,0:\n"</span>);</span><br><span class="line"></span><br><span class="line">t=(LinkList)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(term));</span><br><span class="line">   <span class="comment">// if(!t) exit(OVERFLOW);   //借鉴教材《数据结构（C语言版）》的代码风格...没用</span></span><br><span class="line">t-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%f,%d"</span>,&amp;t-&gt;coef,&amp;t-&gt;expn);</span><br><span class="line"><span class="keyword">while</span>(t-&gt;coef||t-&gt;expn)            <span class="comment">//约定0,0结束输入，实现动态输入多项式</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(!LocateElem(P,t,&amp;q))             <span class="comment">/*每次输入的指数都应不同，转移指针P-&gt;q,而且实现指数排序（这里 &amp;q 博大精深， 利用指针的指针之妙法确保指针不被篡改，在LocateElem内部又机智地取回———）*/</span></span><br><span class="line">&#123;</span><br><span class="line">t-&gt;next=q-&gt;next;                <span class="comment">/*1.q-&gt;next = NULL,2.q-&gt;next = t，    也改变了P-&gt;next的值  P与q共享内存*/</span></span><br><span class="line">q-&gt;next=t;                      <span class="comment">//对t, 头插法, 对q, 尾插法</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">        t=(LinkList)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(term));</span><br><span class="line">         <span class="comment">//  if(!t) exit(OVERFLOW);</span></span><br><span class="line">t-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%f,%d"</span>,&amp;t-&gt;coef,&amp;t-&gt;expn);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printPolyn</span><span class="params">(polynomial P)</span><span class="comment">//打印多项式</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">LinkList q;</span><br><span class="line">q=P-&gt;next;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(!q)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"0\n"</span>);  <span class="comment">//针对两多项式相同的情况</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"><span class="keyword">while</span>(q)</span><br><span class="line">&#123;</span><br><span class="line">        <span class="keyword">if</span>(q-&gt;coef==<span class="number">0</span>)<span class="comment">/*主要针对微分的常数项情况，可是出现了下一项变为首项但其前面加号没有去掉的情况。。。*/</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">""</span>);</span><br><span class="line">            q=q-&gt;next;<span class="comment">/*将此if结构与下面if结构分开，不耦合，解决打印首项带加号问题*/</span></span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line"><span class="keyword">if</span>(q-&gt;expn==<span class="number">0</span>)                         <span class="comment">//判断指数是否为零及正负，调整输出格式</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%.2f"</span>,q-&gt;coef);</span><br><span class="line">q=q-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(q-&gt;expn&gt;<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%.2f*x^%d"</span>,q-&gt;coef,q-&gt;expn);</span><br><span class="line">q=q-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%.2f*x^(%d)"</span>,q-&gt;coef,q-&gt;expn);</span><br><span class="line">q=q-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(q)<span class="comment">//判断下一项系数正负，调整输出格式</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(q-&gt;coef&gt;<span class="number">0</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"+"</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">""</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">AddPolyn</span><span class="params">(polynomial Pa,polynomial Pb,polynomial Pc)</span>    <span class="comment">/*不完全参照教科书上的思路，而是另外开辟空间存储和，不释放原来数据空间*/</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">LinkList qa=Pa-&gt;next;</span><br><span class="line">LinkList qb=Pb-&gt;next;</span><br><span class="line">LinkList qc=Pc;</span><br><span class="line">LinkList head=qc;</span><br><span class="line">LinkList s;</span><br><span class="line"><span class="keyword">float</span> sum; </span><br><span class="line"></span><br><span class="line">Pc-&gt;coef=<span class="number">0.0</span>;</span><br><span class="line">Pc-&gt;expn=<span class="number">-1</span>;</span><br><span class="line">Pc-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(qa&amp;&amp;qb)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">switch</span>(cmp(qa,qb))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">-1</span>:</span><br><span class="line">s=(LinkList)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(term));</span><br><span class="line">                   <span class="comment">//if(!s) exit(OVERFLOW);</span></span><br><span class="line">*s=*qa;</span><br><span class="line">qc-&gt;next=s;</span><br><span class="line">qc=s;</span><br><span class="line">qa=qa-&gt;next;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">sum=qa-&gt;coef+qb-&gt;coef;</span><br><span class="line"><span class="keyword">if</span>(sum!=<span class="number">0.0</span>)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">s=(LinkList)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(term));</span><br><span class="line">                       <span class="comment">//if(!s) exit(OVERFLOW);</span></span><br><span class="line">*s=*qa;</span><br><span class="line">s-&gt;coef=sum;</span><br><span class="line"></span><br><span class="line">qc-&gt;next=s;</span><br><span class="line">qc=s;</span><br><span class="line">qa=qa-&gt;next;</span><br><span class="line">qb=qb-&gt;next;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">qc-&gt;next=qa-&gt;next;</span><br><span class="line">qa=qa-&gt;next;</span><br><span class="line">qb=qb-&gt;next;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">s=(LinkList)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(term));</span><br><span class="line">                <span class="comment">//  if(!s) exit(OVERFLOW);</span></span><br><span class="line">*s=*qb;   </span><br><span class="line">qc-&gt;next=s;</span><br><span class="line">qc=s;</span><br><span class="line">qb=qb-&gt;next;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">qc-&gt;next=qa?qa:qb;    <span class="comment">//添加NULL尾巴</span></span><br><span class="line">Pc=head;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SubPolyn</span><span class="params">(polynomial Pa,polynomial Pb,polynomial Pc)</span>   <span class="comment">/*思路同前面加法，减法变加法，前面加负号，  另外开辟空间存储差*/</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">LinkList qa=Pa-&gt;next;</span><br><span class="line">LinkList qb=Pb-&gt;next;</span><br><span class="line">LinkList qc=Pc;</span><br><span class="line">LinkList head=qc;</span><br><span class="line">LinkList s;</span><br><span class="line"><span class="keyword">float</span> differ; </span><br><span class="line"></span><br><span class="line">Pc-&gt;coef=<span class="number">0.0</span>;</span><br><span class="line">Pc-&gt;expn=<span class="number">-1</span>;</span><br><span class="line">Pc-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(qb)          <span class="comment">//为减数加负号</span></span><br><span class="line">&#123;</span><br><span class="line">qb-&gt;coef=<span class="number">0</span>-(qb-&gt;coef);</span><br><span class="line">qb=qb-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">qb=Pb-&gt;next;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(qa&amp;&amp;qb)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">switch</span>(cmp(qa,qb))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">-1</span>:</span><br><span class="line">s=(LinkList)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(term));</span><br><span class="line">                <span class="comment">//   if(!s) exit(OVERFLOW);</span></span><br><span class="line">*s=*qa;</span><br><span class="line">qc-&gt;next=s;</span><br><span class="line">qc=s;</span><br><span class="line">qa=qa-&gt;next;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">differ=qa-&gt;coef+qb-&gt;coef;</span><br><span class="line"><span class="keyword">if</span>(differ!=<span class="number">0.0</span>)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">s=(LinkList)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(term));</span><br><span class="line">                    <span class="comment">//   if(!s) exit(OVERFLOW);</span></span><br><span class="line">*s=*qa;</span><br><span class="line">s-&gt;coef=differ;</span><br><span class="line">qc-&gt;next=s;</span><br><span class="line">qc=s;</span><br><span class="line">qa=qa-&gt;next;</span><br><span class="line">qb=qb-&gt;next;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">qc-&gt;next=qa-&gt;next;</span><br><span class="line">qa=qa-&gt;next;</span><br><span class="line">qb=qb-&gt;next;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">s=(LinkList)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(term));</span><br><span class="line">                 <span class="comment">//  if(!s) exit(OVERFLOW);</span></span><br><span class="line">*s=*qb;</span><br><span class="line">   </span><br><span class="line">qc-&gt;next=s;</span><br><span class="line">qc=s;</span><br><span class="line">qb=qb-&gt;next;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">qc-&gt;next=qa?qa:qb;</span><br><span class="line">Pc=head;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">AddPolyn_multi</span><span class="params">(polynomial Pa,polynomial Pb)</span>    <span class="comment">/*构造一个可以用于乘法项数迭代的特殊加法,释放空间，和储存至Pa，方便迭代累加*/</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">LinkList qa=Pa-&gt;next;<span class="comment">//这两句导致项数错位了？</span></span><br><span class="line">LinkList qb=Pb-&gt;next;</span><br><span class="line"><span class="comment">//LinkList qa=Pa;</span></span><br><span class="line">    <span class="comment">//LinkList qb=Pb;</span></span><br><span class="line">    LinkList qc=Pa;</span><br><span class="line">LinkList head=qc;</span><br><span class="line">LinkList s,s1,s2;</span><br><span class="line"><span class="keyword">float</span> sum;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(qa&amp;&amp;qb)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">switch</span>(cmp(qa,qb))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">-1</span>:</span><br><span class="line">qc-&gt;next=qa;</span><br><span class="line">qc=qa;</span><br><span class="line">qa=qa-&gt;next;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">sum=qa-&gt;coef+qb-&gt;coef;</span><br><span class="line"><span class="keyword">if</span>(sum!=<span class="number">0.0</span>)</span><br><span class="line">&#123;</span><br><span class="line">s=qb;</span><br><span class="line">qa-&gt;coef=sum;</span><br><span class="line">qc-&gt;next=qa;</span><br><span class="line">qc=qa;</span><br><span class="line">qa=qa-&gt;next;</span><br><span class="line">qb=qb-&gt;next;</span><br><span class="line"><span class="built_in">free</span>(s);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">s1=qa;</span><br><span class="line">s2=qb;</span><br><span class="line">qc-&gt;next=qa-&gt;next;</span><br><span class="line">qa=qa-&gt;next;</span><br><span class="line">qb=qb-&gt;next;</span><br><span class="line"><span class="built_in">free</span>(s1);</span><br><span class="line"><span class="built_in">free</span>(s2);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">qc-&gt;next=qb;</span><br><span class="line">qc=qb;</span><br><span class="line">qb=qb-&gt;next;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">qc-&gt;next=qa?qa:qb;</span><br><span class="line">Pa=head;   <span class="comment">//千思万虑老子终于把你给揪出来了，原来是形参搞得鬼！？</span></span><br><span class="line">    <span class="comment">//printPolyn(Pa);</span></span><br><span class="line">    <span class="comment">//pirntf("\n");</span></span><br><span class="line"><span class="comment">//free(Pb);     /*这句语句挺有问题，要是该指数项唯有Pb才有呢，相加后依然链接到Pb的内存空间上 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MultiPolyn</span><span class="params">(polynomial Pa,polynomial Pb,polynomial Pc)</span>       <span class="comment">/*乘法运算，分解为一系列的加法运算*/</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">LinkList qa=Pa-&gt;next;</span><br><span class="line">LinkList qb=Pb-&gt;next;</span><br><span class="line"><span class="comment">// LinkList qc=Pc;</span></span><br><span class="line">LinkList head;</span><br><span class="line">LinkList qd;</span><br><span class="line">LinkList t[<span class="number">20</span>],d[<span class="number">20</span>],h[<span class="number">20</span>];<span class="comment">/*,s1,s2;  这些结构体指针数组所对应的空间也应该为它们加个指数值为负一的内存！ 有啊！！！*/</span> </span><br><span class="line"><span class="keyword">int</span> i,j;</span><br><span class="line"><span class="comment">//float product; </span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/******下面添加的这两句由于思考疏忽耗费了我大半个月的精力********/</span></span><br><span class="line">    Pc-&gt;coef=<span class="number">0.0</span>;</span><br><span class="line">    Pc-&gt;expn=<span class="number">-1</span>;</span><br><span class="line">    Pc-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/******以上*********/</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="keyword">while</span>(qa&amp;&amp;qb)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">20</span>;j++)</span><br><span class="line">&#123;</span><br><span class="line">d[j]=(LinkList)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(term));</span><br><span class="line">              <span class="comment">// if(!d[j]) exit(OVERFLOW);</span></span><br><span class="line">d[j]-&gt;coef=<span class="number">0.0</span>;</span><br><span class="line">d[j]-&gt;expn=<span class="number">-1</span>; </span><br><span class="line">d[j]-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line">h[j]=d[j];</span><br><span class="line">qd=qa;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">20</span>;i++)                      <span class="comment">/*二维数组应该有两个中括号吧？  不，不用，用了指针 */</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//leave it alone!</span></span><br><span class="line"></span><br><span class="line">t[i]=(LinkList)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(term));</span><br><span class="line"><span class="comment">//   if(!t[i]) exit(OVERFLOW);</span></span><br><span class="line">*t[i]=*qd;</span><br><span class="line">t[i]-&gt;coef=(qd-&gt;coef)*(qb-&gt;coef)*(<span class="number">-1</span>);</span><br><span class="line">t[i]-&gt;expn=qd-&gt;expn+qb-&gt;expn;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">d[j]-&gt;next=t[i];</span><br><span class="line"></span><br><span class="line">d[j]=t[i];</span><br><span class="line">qd=qd-&gt;next;</span><br><span class="line"><span class="keyword">if</span>(!qd)</span><br><span class="line">&#123;</span><br><span class="line">d[j]-&gt;next=<span class="literal">NULL</span>; </span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">qb=qb-&gt;next;</span><br><span class="line"><span class="keyword">if</span>(!qb)</span><br><span class="line">&#123;</span><br><span class="line">h[j+<span class="number">1</span>]=<span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//printPolyn(h[0]);</span></span><br><span class="line">    <span class="comment">//printPolyn(h[1]);</span></span><br><span class="line">    <span class="comment">//printPolyn(h[2]);</span></span><br><span class="line">    <span class="comment">//printPolyn(h[3]);</span></span><br><span class="line">    <span class="comment">/*非常奇怪，加了这两句就可以运行乘法了，不过打印出来的却是相反数，而且返回值不是0，而是3221225477 </span></span><br><span class="line"><span class="comment">//现在不用那个特殊加法也可以了！？难道是因为我创建的那伪二维数组实现了地址的复用？？？</span></span><br><span class="line"><span class="comment">测试发现，如果碰到空地址,比如这个h[3]，会进入一段时间死循环。。。果不其然</span></span><br><span class="line"><span class="comment">//自己应该是在指针的理解上出现了一些问题，得去攻读下o'reilly的《深入理解c指针》了 */</span></span><br><span class="line"> </span><br><span class="line">                 <span class="comment">//Not effective???</span></span><br><span class="line">                 </span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">20</span>;j++)                  <span class="comment">//对了，每一列指数值不一定相同的吖！ </span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(!h[j+<span class="number">1</span>])<span class="comment">//原来是你把我辛辛苦苦生成的结果的头指针给改了的#.#</span></span><br><span class="line">        &#123;</span><br><span class="line">            head=h[j];</span><br><span class="line"><span class="keyword">break</span>;<span class="comment">//不，不是它的错，是下面的Pc-&gt;next出现了两个-1指数项！</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">//printPolyn(h[j+1]);</span></span><br><span class="line">AddPolyn_multi(h[j+<span class="number">1</span>],h[j]);</span><br><span class="line">head=h[j+<span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// qc-&gt;next=qa?qa:qb;</span></span><br><span class="line">Pc-&gt;next=head;<span class="comment">//擦!你丫蛋没初始化就跑进来了</span></span><br><span class="line"><span class="comment">//free(Pb);/*乘法部分逻辑上是没什么问题的咯，问题应该是出现在构造加法那里，哪里没有接上 */</span></span><br><span class="line">&#125;<span class="comment">//（后来补充）看来不是构造加法问题</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">diff</span><span class="params">(polynomial Pa, polynomial Pb)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">LinkList qa=Pa-&gt;next;</span><br><span class="line">LinkList head;</span><br><span class="line"></span><br><span class="line">Pb-&gt;coef=<span class="number">0.0</span>;</span><br><span class="line">Pb-&gt;expn=<span class="number">-1</span>;</span><br><span class="line">Pb-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line">head=Pb;</span><br><span class="line"><span class="comment">//Pb=Pb-&gt;next;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(qa)</span><br><span class="line">&#123;</span><br><span class="line">Pb-&gt;next=(LinkList)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(term));</span><br><span class="line">         <span class="comment">//  if(!Pb-&gt;next) exit(OVERFLOW);</span></span><br><span class="line">Pb=Pb-&gt;next;</span><br><span class="line">Pb-&gt;coef=(qa-&gt;coef)*(<span class="keyword">float</span>)(qa-&gt;expn);                <span class="comment">//coef和expn类型不同，需要进行类型转化</span></span><br><span class="line">Pb-&gt;expn=qa-&gt;expn<span class="number">-1</span>;</span><br><span class="line">Pb-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line">qa=qa-&gt;next;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Pb=head;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">polynomial Pa;</span><br><span class="line">polynomial Pb;</span><br><span class="line">polynomial Pc;</span><br><span class="line">polynomial Pd;</span><br><span class="line">Pa=(LinkList)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(term));</span><br><span class="line">Pb=(LinkList)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(term));</span><br><span class="line">Pc=(LinkList)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(term));</span><br><span class="line"><span class="comment">//Pc-&gt;next=NULL;</span></span><br><span class="line">Pd=(LinkList)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(term));</span><br><span class="line"><span class="comment">//Pd-&gt;next=NULL;</span></span><br><span class="line"></span><br><span class="line">CreatePolyn(Pa);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Pa="</span>);</span><br><span class="line">printPolyn(Pa);</span><br><span class="line">CreatePolyn(Pb);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Pb="</span>);</span><br><span class="line">printPolyn(Pb);</span><br><span class="line"><span class="comment">/*Pc = Pa;</span></span><br><span class="line"><span class="comment">Pd = Pb;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\nPa'="</span>);</span><br><span class="line">diff(Pa,Pc);</span><br><span class="line">printPolyn(Pc);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Pa+Pb="</span>);</span><br><span class="line">AddPolyn(Pa,Pb,Pc);</span><br><span class="line">printPolyn(Pc);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Pa-Pb="</span>);</span><br><span class="line">SubPolyn(Pa,Pb,Pc);</span><br><span class="line">printPolyn(Pc);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Pa*Pb="</span>);</span><br><span class="line">MultiPolyn(Pa,Pb,Pd);</span><br><span class="line">printPolyn(Pd);</span><br><span class="line"><span class="comment">//printf("\n");</span></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*printf("Pb'=");</span></span><br><span class="line"><span class="comment">diff(Pb,Pc);</span></span><br><span class="line"><span class="comment">printPolyn(Pc);</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="实现代码-纯净版-："><a href="#实现代码-纯净版-：" class="headerlink" title="实现代码(纯净版)："></a>实现代码(纯净版)：</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">term</span>&#123;</span></span><br><span class="line"><span class="keyword">float</span> coef;</span><br><span class="line"><span class="keyword">int</span> expn;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">term</span> *<span class="title">next</span>;</span></span><br><span class="line">&#125;term,*LinkList;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> LinkList polynomial;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cmp</span><span class="params">(LinkList pa,LinkList pb)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(pa-&gt;expn &gt; pb-&gt;expn)</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(pa-&gt;expn == pb-&gt;expn)</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">LocateElem</span><span class="params">(LinkList L,LinkList t,LinkList *q)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">LinkList p1=L-&gt;next;</span><br><span class="line">LinkList p2=L;</span><br><span class="line"><span class="keyword">while</span>(p1)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(t-&gt;expn &gt; p1-&gt;expn)</span><br><span class="line">&#123;</span><br><span class="line">p1=p1-&gt;next;</span><br><span class="line">p2=p2-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(t-&gt;expn == p1-&gt;expn)</span><br><span class="line">&#123;</span><br><span class="line">*q=p1;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line">*q=p2;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">*q=p2;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">CreatePolyn</span><span class="params">(polynomial P)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">LinkList t;</span><br><span class="line">LinkList q;</span><br><span class="line">P-&gt;coef=<span class="number">0.0</span>;</span><br><span class="line">P-&gt;expn=<span class="number">-1</span>;</span><br><span class="line">P-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Please input coefficient and exponent in format like 1,2 and end with 0,0 :\n"</span>);</span><br><span class="line"></span><br><span class="line">t=(LinkList)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(term));</span><br><span class="line">t-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%f,%d"</span>,&amp;t-&gt;coef,&amp;t-&gt;expn);</span><br><span class="line"><span class="keyword">while</span>(t-&gt;coef||t-&gt;expn)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(!LocateElem(P,t,&amp;q))</span><br><span class="line">&#123;</span><br><span class="line">t-&gt;next=q-&gt;next;</span><br><span class="line">q-&gt;next=t;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">t=(LinkList)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(term));</span><br><span class="line">t-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%f,%d"</span>,&amp;t-&gt;coef,&amp;t-&gt;expn);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printPolyn</span><span class="params">(polynomial P)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">LinkList q;</span><br><span class="line">q=P-&gt;next;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!q)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"0\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(q)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(q-&gt;coef==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">""</span>);</span><br><span class="line">q=q-&gt;next;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(q-&gt;expn==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%.2f"</span>,q-&gt;coef);</span><br><span class="line">q=q-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(q-&gt;expn&gt;<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%.2f*x^%d"</span>,q-&gt;coef,q-&gt;expn);</span><br><span class="line">q=q-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%.2f*x^(%d)"</span>,q-&gt;coef,q-&gt;expn);</span><br><span class="line">q=q-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(q)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(q-&gt;coef&gt;<span class="number">0</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"+"</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">""</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">AddPolyn</span><span class="params">(polynomial Pa,polynomial Pb,polynomial Pc)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">LinkList qa=Pa-&gt;next;</span><br><span class="line">LinkList qb=Pb-&gt;next;</span><br><span class="line">LinkList qc=Pc;</span><br><span class="line">LinkList head=qc;</span><br><span class="line">LinkList s;</span><br><span class="line"><span class="keyword">float</span> sum;</span><br><span class="line"></span><br><span class="line">Pc-&gt;coef=<span class="number">0.0</span>;</span><br><span class="line">Pc-&gt;expn=<span class="number">-1</span>;</span><br><span class="line">Pc-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(qa&amp;&amp;qb)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">switch</span>(cmp(qa,qb))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">-1</span>:</span><br><span class="line">s=(LinkList)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(term));</span><br><span class="line">*s=*qa;</span><br><span class="line">qc-&gt;next=s;</span><br><span class="line">qc=s;</span><br><span class="line">qa=qa-&gt;next;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">sum=qa-&gt;coef+qb-&gt;coef;</span><br><span class="line"><span class="keyword">if</span>(sum!=<span class="number">0.0</span>)</span><br><span class="line">&#123;</span><br><span class="line">s=(LinkList)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(term));</span><br><span class="line">*s=*qa;</span><br><span class="line">s-&gt;coef=sum;</span><br><span class="line">qc-&gt;next=s;</span><br><span class="line">qc=s;</span><br><span class="line">qa=qa-&gt;next;</span><br><span class="line">qb=qb-&gt;next;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">qc-&gt;next=qa-&gt;next;</span><br><span class="line">qa=qa-&gt;next;</span><br><span class="line">qb=qb-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">s=(LinkList)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(term));</span><br><span class="line">*s=*qb;</span><br><span class="line">qc-&gt;next=s;</span><br><span class="line">qc=s;</span><br><span class="line">qb=qb-&gt;next;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">qc-&gt;next=qa?qa:qb;</span><br><span class="line">Pc=head;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SubPolyn</span><span class="params">(polynomial Pa,polynomial Pb,polynomial Pc)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">LinkList qa=Pa-&gt;next;</span><br><span class="line">LinkList qb=Pb-&gt;next;</span><br><span class="line">LinkList qc=Pc;</span><br><span class="line">LinkList head=qc;</span><br><span class="line">LinkList s;</span><br><span class="line"><span class="keyword">float</span> differ;</span><br><span class="line"></span><br><span class="line">Pc-&gt;coef=<span class="number">0.0</span>;</span><br><span class="line">Pc-&gt;expn=<span class="number">-1</span>;</span><br><span class="line">Pc-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(qb)</span><br><span class="line">&#123;</span><br><span class="line">qb-&gt;coef=<span class="number">0</span>-(qb-&gt;coef);</span><br><span class="line">qb=qb-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">qb=Pb-&gt;next;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(qa&amp;&amp;qb)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">switch</span>(cmp(qa,qb))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">-1</span>:</span><br><span class="line">s=(LinkList)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(term));</span><br><span class="line">*s=*qa;</span><br><span class="line">qc-&gt;next=s;</span><br><span class="line">qc=s;</span><br><span class="line">qa=qa-&gt;next;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">differ=qa-&gt;coef+qb-&gt;coef;</span><br><span class="line"><span class="keyword">if</span>(differ!=<span class="number">0.0</span>)</span><br><span class="line">&#123;</span><br><span class="line">s=(LinkList)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(term));</span><br><span class="line">*s=*qa;</span><br><span class="line">s-&gt;coef=differ;</span><br><span class="line">qc-&gt;next=s;</span><br><span class="line">qc=s;</span><br><span class="line">qa=qa-&gt;next;</span><br><span class="line">qb=qb-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">qc-&gt;next=qa-&gt;next;</span><br><span class="line">qa=qa-&gt;next;</span><br><span class="line">qb=qb-&gt;next;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">s=(LinkList)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(term));</span><br><span class="line">*s=*qb;</span><br><span class="line">qc-&gt;next=s;</span><br><span class="line">qc=s;</span><br><span class="line">qb=qb-&gt;next;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">qc-&gt;next=qa?qa:qb;</span><br><span class="line">Pc=head;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">diff</span><span class="params">(polynomial Pa,polynomial Pb)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">LinkList qa=Pa-&gt;next;</span><br><span class="line">LinkList head;</span><br><span class="line">Pb-&gt;coef=<span class="number">0.0</span>;</span><br><span class="line">Pb-&gt;expn=<span class="number">-1</span>;</span><br><span class="line">Pb-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line">head=Pb;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(qa)</span><br><span class="line">&#123;</span><br><span class="line">Pb-&gt;next=(LinkList)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(term));</span><br><span class="line">Pb=Pb-&gt;next;</span><br><span class="line">Pb-&gt;coef=(qa-&gt;coef)*(<span class="keyword">float</span>)(qa-&gt;expn);</span><br><span class="line">Pb-&gt;expn=qa-&gt;expn<span class="number">-1</span>;</span><br><span class="line">Pb-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line">qa=qa-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Pb=head;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">AddPolyn_multi</span><span class="params">(polynomial Pa,polynomial Pb)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">LinkList qa=Pa-&gt;next;</span><br><span class="line">LinkList qb=Pb-&gt;next;</span><br><span class="line">LinkList qc=qa;</span><br><span class="line">LinkList head=qc;</span><br><span class="line">LinkList s,s1,s2;</span><br><span class="line"><span class="keyword">float</span> sum;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(qa&amp;&amp;qb)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">switch</span>(cmp(qa,qb))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">-1</span>:</span><br><span class="line">qc-&gt;next=qa;</span><br><span class="line">qc=qa;</span><br><span class="line">qa=qa-&gt;next;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">sum=qa-&gt;coef+qb-&gt;coef;</span><br><span class="line"><span class="keyword">if</span>(sum!=<span class="number">0.0</span>)</span><br><span class="line">&#123;</span><br><span class="line">s=qb;</span><br><span class="line">qa-&gt;coef=sum;</span><br><span class="line">qc-&gt;next=qa;</span><br><span class="line">qc=qa;</span><br><span class="line">qa=qa-&gt;next;</span><br><span class="line">qb=qb-&gt;next;</span><br><span class="line"><span class="built_in">free</span>(s);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">s1=qa;</span><br><span class="line">s2=qb;</span><br><span class="line">qc-&gt;next=qa-&gt;next;</span><br><span class="line">qa=qa-&gt;next;</span><br><span class="line">qb=qb-&gt;next;</span><br><span class="line"><span class="built_in">free</span>(s1);</span><br><span class="line"><span class="built_in">free</span>(s2);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">qc-&gt;next=qb;</span><br><span class="line">qc=qb;</span><br><span class="line">qb=qb-&gt;next;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">qc-&gt;next=qa?qa:qb;</span><br><span class="line">Pa=head;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MultiPolyn</span><span class="params">(polynomial Pa,polynomial Pb,polynomial Pc)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">LinkList qa=Pa-&gt;next;</span><br><span class="line">LinkList qb=Pb-&gt;next;</span><br><span class="line">LinkList head;</span><br><span class="line">LinkList qd;</span><br><span class="line">LinkList t[<span class="number">20</span>],d[<span class="number">20</span>],h[<span class="number">20</span>];</span><br><span class="line"><span class="keyword">int</span> i,j;</span><br><span class="line"></span><br><span class="line">Pc-&gt;coef=<span class="number">0.0</span>;</span><br><span class="line">Pc-&gt;expn=<span class="number">-1</span>;</span><br><span class="line">Pc-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(qa&amp;&amp;qb)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">20</span>;j++)</span><br><span class="line">&#123;</span><br><span class="line">d[j]=(LinkList)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(term));</span><br><span class="line">d[j]-&gt;coef=<span class="number">0.0</span>;</span><br><span class="line">d[j]-&gt;expn=<span class="number">-1</span>;</span><br><span class="line">d[j]-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line">h[j]=d[j];</span><br><span class="line">qd=qa;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">20</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">t[i]=(LinkList)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(term));</span><br><span class="line">*t[i]=*qd;</span><br><span class="line">t[i]-&gt;coef=(qd-&gt;coef)*(qb-&gt;coef)*(<span class="number">-1</span>);</span><br><span class="line">t[i]-&gt;expn=qd-&gt;expn+qb-&gt;expn;</span><br><span class="line">d[j]-&gt;next=t[i];</span><br><span class="line">d[j]=t[i];</span><br><span class="line">qd=qd-&gt;next;</span><br><span class="line"><span class="keyword">if</span>(!qd)</span><br><span class="line">&#123;</span><br><span class="line">d[j]-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">qb=qb-&gt;next;</span><br><span class="line"><span class="keyword">if</span>(!qb)</span><br><span class="line">&#123;</span><br><span class="line">h[j+<span class="number">1</span>]=<span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">20</span>;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(!h[j+<span class="number">1</span>])</span><br><span class="line">&#123;</span><br><span class="line">head=h[j];</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">AddPolyn_multi(h[j+<span class="number">1</span>],h[j]);</span><br><span class="line">head=h[j+<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Pc-&gt;next=head;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">polynomial Pa;</span><br><span class="line">polynomial Pb;</span><br><span class="line">polynomial Pc;</span><br><span class="line">polynomial Pd;</span><br><span class="line">Pa=(LinkList)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(term));</span><br><span class="line">Pb=(LinkList)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(term));</span><br><span class="line">Pc=(LinkList)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(term));</span><br><span class="line"></span><br><span class="line">Pd=(LinkList)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(term));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">CreatePolyn(Pa);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Pa="</span>);</span><br><span class="line">printPolyn(Pa);</span><br><span class="line">CreatePolyn(Pb);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Pb="</span>);</span><br><span class="line">printPolyn(Pb);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\nPa'="</span>);</span><br><span class="line">diff(Pa,Pc);</span><br><span class="line">printPolyn(Pc);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Pa+Pb="</span>);</span><br><span class="line">AddPolyn(Pa,Pb,Pc);</span><br><span class="line">printPolyn(Pc);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Pa-Pb="</span>);</span><br><span class="line">SubPolyn(Pa,Pb,Pc);</span><br><span class="line">printPolyn(Pc);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Pa*Pb="</span>);</span><br><span class="line">MultiPolyn(Pa,Pb,Pd);</span><br><span class="line">printPolyn(Pd);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="运行结果："><a href="#运行结果：" class="headerlink" title="运行结果："></a>运行结果：</h4><p><img src="https://i.loli.net/2019/01/11/5c38b57227e64.png" alt="1543085198024.png" title="1543085198024.png"></p><h4 id="参考文章："><a href="#参考文章：" class="headerlink" title="参考文章："></a>参考文章：</h4><blockquote><p><a href="https://blog.csdn.net/qq_18677011/article/details/60590564" target="_blank" rel="noopener">利用单链表实现一元多项式的表示及相加</a></p><p><a href="https://blog.csdn.net/lijgcn/article/details/62247927" target="_blank" rel="noopener">有序链表一元多项式C实例</a></p><p><a href="https://stackoverflow.com/questions/18162340/polynomial-multiplication-using-linked-list-in-c" target="_blank" rel="noopener">Polynomial multiplication using linked list in C</a></p></blockquote><p><img src="https://i.loli.net/2019/01/11/5c38b58ad9cf5.jpg" alt="3.coyote.jpg" title="3.coyote.jpg"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;利用链表实现一元多项式的数学运算。如一元多项式 &lt;/p&gt;
&lt;img src=&quot;/2018/11/03/A-C-algorithm-with-linked-list-to-express-addition-subtraction-multiplication-differential-of-polynomial/1543086464267.png&quot; title=&quot;This is an example image&quot;&gt;
&lt;p&gt;可以利用其系数p和指数e组合的方式实现链式存储。通过对线性表的基本操&lt;br&gt;作，例如插入，删除，查找等可以实现一元多项式的复杂运算，比如加，减，&lt;br&gt;乘，除等运算。 &lt;/p&gt;
    
    </summary>
    
    
      <category term="算法" scheme="http://lesliewong.cn/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://lesliewong.cn/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>约瑟夫环问题的C语言算法实现</title>
    <link href="http://lesliewong.cn/2018/10/25/A-C-algorithm-to-solve-the-Joseph-Ring-problem/"/>
    <id>http://lesliewong.cn/2018/10/25/A-C-algorithm-to-solve-the-Joseph-Ring-problem/</id>
    <published>2018-10-25T11:35:04.000Z</published>
    <updated>2019-01-13T01:56:42.672Z</updated>
    
    <content type="html"><![CDATA[<hr><p>约瑟夫(Joseph)问题的一种描述是：编号为 1，2，…..，n 的 n 个人按顺时针方向围坐一圈，每人持有一个密码（正整数）。一开始任选一个正整数作为报数上限值 m，从第一个人开始按顺时针方向自 1 开始顺序报数，报到 m 时停止报数。报 m 的人出列，将他的密码作为新的 m 值，从他在顺时针方 向上的下一个人开始重新从 1 报数，如此下去，直至所有人全部出列为止。试设计一个程序求出出列顺序。 </p><a id="more"></a><h4 id="基本要求"><a href="#基本要求" class="headerlink" title="基本要求"></a>基本要求</h4><p>利用单向循环链表存储结构模拟此过程，按照出列的顺序印出各人的编号。 </p><h4 id="测试数据"><a href="#测试数据" class="headerlink" title="测试数据"></a>测试数据</h4><p>n=7, 7 个人的密码依次为：3，1，7，2，4，8，4，首先 m 值为 6（正 确的出列顺序应为 6，1，4，7，2，3，5），输出的密码为 8，3，2，4，1， 7，4. </p><h4 id="实现提示"><a href="#实现提示" class="headerlink" title="实现提示"></a>实现提示</h4><p>程序运行后，首先要求用户指定初始报数上限值，然后读取各人的密 码。可设 n&lt;=30。此题所用的循环链表中不需要“头节点”，请注意空表和非空表的界限。</p><h5 id="算法代码："><a href="#算法代码：" class="headerlink" title="算法代码："></a>算法代码：</h5><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LEN sizeof(struct Student)</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Student</span>//用链表建立学生数据类型</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> number;</span><br><span class="line"><span class="keyword">int</span> password;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Student</span> *<span class="title">next</span>;</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function">struct Student *<span class="title">creat</span><span class="params">(<span class="keyword">void</span>)</span><span class="comment">//输入具体学生信息，约定0,0结束</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Student</span> *<span class="title">head</span>;</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Student</span> *<span class="title">p1</span>,*<span class="title">p2</span>;</span></span><br><span class="line"><span class="keyword">int</span> n=<span class="number">0</span>;</span><br><span class="line">p1=p2=(struct Student *)<span class="built_in">malloc</span>(LEN);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d,%d"</span>,&amp;p1-&gt;number,&amp;p1-&gt;password);</span><br><span class="line">head=<span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">while</span>(p1-&gt;number!=<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">n=n+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(n==<span class="number">1</span>)head=p1;</span><br><span class="line"><span class="keyword">else</span> p2-&gt;next=p1;</span><br><span class="line">p2=p1;</span><br><span class="line">p1=(struct Student *)<span class="built_in">malloc</span>(LEN);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d,%d"</span>,&amp;p1-&gt;number,&amp;p1-&gt;password);</span><br><span class="line">&#125;</span><br><span class="line">p2-&gt;next=head;</span><br><span class="line"><span class="keyword">return</span>(head);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Joseph</span><span class="params">(struct Student *head,<span class="keyword">int</span> count)</span>    <span class="comment">//游戏环节，按照约瑟夫环规则运行，并输出结果</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> m;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Student</span> *<span class="title">p</span>;</span></span><br><span class="line">p=head;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(m=<span class="number">1</span>;m&lt;count<span class="number">-1</span>;m++)</span><br><span class="line">p=p-&gt;next;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d,%d\n"</span>,(p-&gt;next)-&gt;number,(p-&gt;next)-&gt;password);</span><br><span class="line">count=p-&gt;next-&gt;password;</span><br><span class="line">p-&gt;next=p-&gt;next-&gt;next;</span><br><span class="line"><span class="keyword">do</span>&#123;</span><br><span class="line"><span class="keyword">for</span>(m=<span class="number">1</span>;m&lt;count;m++)</span><br><span class="line">p=p-&gt;next;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d,%d\n"</span>,(p-&gt;next)-&gt;number,(p-&gt;next)-&gt;password);</span><br><span class="line">count=p-&gt;next-&gt;password;</span><br><span class="line">p-&gt;next=p-&gt;next-&gt;next;</span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">while</span>(p!=p-&gt;next);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d,%d\n"</span>,p-&gt;number,p-&gt;password);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span><span class="comment">//主函数，输入学生信息和上限值 </span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Student</span> *<span class="title">Head</span>;</span></span><br><span class="line"><span class="keyword">int</span> num;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"请输入个人的序号和密码：\n"</span>);</span><br><span class="line">Head=creat();</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"请指定初始报数上限值：\n"</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;num);</span><br><span class="line">Joseph(Head,num);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="运行结果："><a href="#运行结果：" class="headerlink" title="运行结果："></a>运行结果：</h5><p><img src="https://i.loli.net/2019/01/11/5c38b34655d70.jpg" alt="Joseph运行结果.jpg" title="Joseph运行结果.jpg"></p><hr><p><img src="https://i.loli.net/2019/01/11/5c38b36d83454.jpg" alt="2.cat.jpg" title="2.cat.jpg"></p>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;p&gt;约瑟夫(Joseph)问题的一种描述是：编号为 1，2，…..，n 的 n 个人按顺时针方向围坐一圈，每人持有一个密码（正整数）。一开始任选一个正整数作为报数上限值 m，从第一个人开始按顺时针方向自 1 开始顺序报数，报到 m 时停止报数。报 m 的人出列，将他的密码作为新的 m 值，从他在顺时针方 向上的下一个人开始重新从 1 报数，如此下去，直至所有人全部出列为止。试设计一个程序求出出列顺序。 &lt;/p&gt;
    
    </summary>
    
    
      <category term="算法" scheme="http://lesliewong.cn/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://lesliewong.cn/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>CSS中伪元素的定位上下文问题</title>
    <link href="http://lesliewong.cn/2018/09/10/A-doubt-about-the-pseudo-element-in-CSS/"/>
    <id>http://lesliewong.cn/2018/09/10/A-doubt-about-the-pseudo-element-in-CSS/</id>
    <published>2018-09-10T12:08:12.000Z</published>
    <updated>2025-04-30T12:50:03.443Z</updated>
    
    <content type="html"><![CDATA[<hr><p>在研究CSS名著《CSS设计指南》（第3版）中，对讲到界面组件中的用CSS为弹出层设计三角形这个知识点时，对例子代码中伪元素的定位上下文关系产生了很大的困惑。</p><a id="more"></a><hr><h4 id="源代码"><a href="#源代码" class="headerlink" title="源代码"></a>源代码</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line">&lt;!<span class="selector-tag">DOCTYPE</span> <span class="selector-tag">html</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">html</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">head</span>&gt;</span><br><span class="line">&lt;meta charset="utf-8" /&gt; </span><br><span class="line">&lt;title&gt;Stylin' with CSS - Figure 6.24 Popup Overlay&lt;/title&gt;</span><br><span class="line">&lt;<span class="selector-tag">style</span>&gt;</span><br><span class="line">* &#123;<span class="attribute">margin</span>:<span class="number">0</span>; <span class="attribute">padding</span>:<span class="number">0</span>; <span class="attribute">font-family</span>:helvetica, arial, sans-serif;&#125;</span><br><span class="line"><span class="selector-tag">figure</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">144px</span>; <span class="attribute">height</span>:<span class="number">153px</span>; <span class="comment">/* sizing of image box */</span></span><br><span class="line">    <span class="attribute">margin</span>:<span class="number">20px</span> <span class="number">20px</span>;            <span class="comment">/* space between boxes */</span></span><br><span class="line">    <span class="attribute">border</span>:<span class="number">1px</span> solid <span class="number">#666</span>;        <span class="comment">/* image border */</span></span><br><span class="line">    <span class="attribute">position</span>:relative; <span class="comment">/* positioning context for popups */</span></span><br><span class="line">    <span class="attribute">float</span>:left; <span class="comment">/* makes images sit side by side */</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="selector-tag">img</span> &#123;<span class="attribute">display</span>:block;&#125;<span class="comment">/* remove baseline spacing from under image */</span></span><br><span class="line"><span class="selector-tag">figcaption</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>:none; <span class="comment">/* hides popups */</span></span><br><span class="line">    <span class="attribute">position</span>:absolute; <span class="comment">/* relative to images */</span></span><br><span class="line">    <span class="attribute">left</span>:<span class="number">74%</span>; <span class="attribute">top</span>:<span class="number">14px</span>; <span class="comment">/* positions popup on right side of image */</span></span><br><span class="line">    <span class="attribute">width</span>:<span class="number">130px</span>; <span class="comment">/* width of popup */</span></span><br><span class="line">    <span class="attribute">padding</span>:<span class="number">10px</span>; <span class="comment">/* space around popup content */</span></span><br><span class="line">    <span class="attribute">background</span>:<span class="number">#f2eaea</span>;</span><br><span class="line">    <span class="attribute">border</span>:<span class="number">3px</span> solid red; <span class="attribute">border-radius</span>:<span class="number">6px</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="selector-tag">figure</span><span class="selector-pseudo">:hover</span> <span class="selector-tag">figcaption</span> &#123;<span class="attribute">display</span>:block; <span class="attribute">z-index</span>:<span class="number">2</span>;&#125; <span class="comment">/* displays popup when image is hovered */</span></span><br><span class="line"><span class="selector-tag">figcaption</span> <span class="selector-tag">h3</span> &#123; <span class="comment">/* popup content */</span></span><br><span class="line">    <span class="attribute">font-size</span>:<span class="number">14px</span>;</span><br><span class="line">    <span class="attribute">color</span>:<span class="number">#666</span>;</span><br><span class="line">    <span class="attribute">margin-bottom</span>:<span class="number">6px</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="selector-tag">figcaption</span> <span class="selector-tag">a</span> &#123; <span class="comment">/* popup content */</span></span><br><span class="line">    <span class="attribute">display</span>:block;</span><br><span class="line">    <span class="attribute">text-decoration</span>:none;</span><br><span class="line">    <span class="attribute">font-size</span>:<span class="number">12px</span>;</span><br><span class="line">    <span class="attribute">color</span>:<span class="number">#000</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="selector-tag">figcaption</span><span class="selector-pseudo">::after</span> &#123; <span class="comment">/* red triangle box*/</span></span><br><span class="line">    <span class="attribute">content</span>:<span class="string">""</span>; <span class="comment">/* some content required - using empty text string */</span></span><br><span class="line">    <span class="attribute">position</span>:absolute; <span class="comment">/* relative to popup */</span></span><br><span class="line">    <span class="attribute">border</span>:<span class="number">12px</span> solid;</span><br><span class="line">    <span class="attribute">border-color</span>:transparent red transparent transparent; </span><br><span class="line">    <span class="attribute">right</span>:<span class="number">100%</span>; <span class="attribute">top</span>:<span class="number">17px</span>;</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">0px</span>; <span class="attribute">width</span>:<span class="number">0px</span>; <span class="comment">/* collapses box to create triangle */</span> </span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;<span class="selector-tag">body</span>&gt;</span><br><span class="line">    &lt;<span class="selector-tag">figure</span>&gt;</span><br><span class="line">        &lt;img src="images/pink_heels.jpg" alt="pink heels" /&gt;</span><br><span class="line">        &lt;<span class="selector-tag">figcaption</span>&gt;</span><br><span class="line">            &lt;h3&gt;Pink Platforms&lt;/h3&gt;</span><br><span class="line">            &lt;a href="#"&gt;More info&lt;/a&gt;</span><br><span class="line">        &lt;/figcaption&gt;</span><br><span class="line">    &lt;/figure&gt;</span><br><span class="line">    &lt;figure class="click_me"&gt;</span><br><span class="line">        &lt;img src="images/leopard_heels.jpg" alt="leopard heels" /&gt;</span><br><span class="line">        &lt;<span class="selector-tag">figcaption</span>&gt;</span><br><span class="line">            &lt;h3&gt;Leopard Platforms&lt;/h3&gt;</span><br><span class="line">            &lt;a href="#"&gt;More info&lt;/a&gt;</span><br><span class="line">        &lt;/figcaption&gt;</span><br><span class="line">    &lt;/figure&gt;</span><br><span class="line">    &lt;figure class="click_me"&gt;</span><br><span class="line">        &lt;img src="images/red_heels.jpg" alt="red heels" /&gt;</span><br><span class="line">        &lt;<span class="selector-tag">figcaption</span>&gt;</span><br><span class="line">            &lt;h3&gt;Red Platforms&lt;/h3&gt;</span><br><span class="line">            &lt;a href="#"&gt;More info&lt;/a&gt;</span><br><span class="line">        &lt;/figcaption&gt;</span><br><span class="line">    &lt;/figure&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;!-- OK to remove the code between here and &lt;/body&gt; --&gt;</span><br><span class="line">    &lt;!-- Please note that the watermarked image/images in this code example is/are provided only for the purpose of displaying the code example in your browser. Licensing rights to this image/images is/are not conveyed to you. If you would like to purchase licensing rights for the images in this book, please visit the following url: --&gt; </span><br><span class="line">    &lt;div style="clear:both; padding:100px 0 0 0; font-size:.85em; color:#666;"&gt;</span><br><span class="line">    &lt;p&gt;To purchase the stock images in this book and other great stock images, go to &lt;a href="http://www.bigstockphoto.com/?refid=PEECNmwgKb"&gt;bigstockphoto.com&lt;/a&gt;&lt;/p&gt;</span><br><span class="line">    &lt;p&gt;A code example from &lt;em&gt;Stylin&amp;rsquo; with CSS, Third Edition&lt;/em&gt; by Charles Wyke-Smith. Visit &lt;a href="http://www.stylinwithcss.com"&gt;stylinwithcss.com&lt;/a&gt; for more CSS information and updates.&lt;/p&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    </span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><hr><p>浏览器渲染后的效果如下：</p><p><img src="https://i.loli.net/2019/01/11/5c38a36b93191.jpg" alt="1.jpg" title="1.jpg"></p><hr><p>文字说明框在鼠标悬浮于图片上时出现，同时框左边会出现由于边框透明原理而生出的三角形。具体原理代码如下：</p><hr><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">figcaption</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>:none; <span class="comment">/* hides popups */</span></span><br><span class="line">    <span class="attribute">position</span>:absolute; <span class="comment">/* relative to images */</span></span><br><span class="line">    <span class="attribute">left</span>:<span class="number">74%</span>; <span class="attribute">top</span>:<span class="number">14px</span>; <span class="comment">/* positions popup on right side of image */</span></span><br><span class="line">    <span class="attribute">width</span>:<span class="number">130px</span>; <span class="comment">/* width of popup */</span></span><br><span class="line">    <span class="attribute">padding</span>:<span class="number">10px</span>; <span class="comment">/* space around popup content */</span></span><br><span class="line">    <span class="attribute">background</span>:<span class="number">#f2eaea</span>;</span><br><span class="line">    <span class="attribute">border</span>:<span class="number">3px</span> solid red; <span class="attribute">border-radius</span>:<span class="number">6px</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="selector-tag">figure</span><span class="selector-pseudo">:hover</span> <span class="selector-tag">figcaption</span> &#123;<span class="attribute">display</span>:block; <span class="attribute">z-index</span>:<span class="number">2</span>;&#125; <span class="comment">/* displays popup when image is hovered */</span></span><br><span class="line"><span class="selector-tag">figcaption</span><span class="selector-pseudo">::after</span> &#123; <span class="comment">/* red triangle box*/</span></span><br><span class="line">    <span class="attribute">content</span>:<span class="string">""</span>; <span class="comment">/* some content required - using empty text string */</span></span><br><span class="line">    <span class="attribute">position</span>:absolute; <span class="comment">/* relative to popup */</span></span><br><span class="line">    <span class="attribute">border</span>:<span class="number">12px</span> solid;</span><br><span class="line">    <span class="attribute">border-color</span>:transparent red transparent transparent; </span><br><span class="line">    <span class="attribute">right</span>:<span class="number">100%</span>; <span class="attribute">top</span>:<span class="number">17px</span>;</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">0px</span>; <span class="attribute">width</span>:<span class="number">0px</span>; <span class="comment">/* collapses box to create triangle */</span> </span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><hr><p>根据《CSS设计指南（第3版）》中对定位上下文的解释，</p><blockquote><p>在讲绝对定位的时候，我们知道绝对定位元素默认的定位上下文是body。这是因为body是标记中所有元素唯一的祖先元素。而实际上，绝对定位元素的任何祖先元素都可以成为它的定位上下文，只要你把相应祖先元素的position设定为relative即可。</p><p>​                                    ——P91,人民邮电出版社，《CSS设计指南（第3版）》</p></blockquote><hr><p>可是位于书中第226页的例子代码中（如上）却出现了不太符合这种逻辑的情况。用伪元素法生成的红色三角形是相对position属性为absolute的figcaption（即弹出文字框）作移动，而不是相对position属性为relative的祖先元素figure。</p><p>自己目前还是不太明白，是因为出现了hover的缘故？亦或 原先的定位上下文的规则不太适用于伪元素？</p><p>依旧求解中。</p><hr><p>(2018.9.15更新)</p><p>对于这个问题的答案，自己姑且只能采取经验总结的方式了，总结认为伪元素::before和::after创建后position设置为absolute其位置移动属性是相对于设置自己的最近元素的。</p><p>参考了MDN文档中对::after和::before的解释，其中::before解释中出现了与此情况类似的代码。</p><h3 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>Buy milk<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>Take the dog for a walk<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>Exercise<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>Write code<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>Play music<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>Relax<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">li</span> &#123;</span><br><span class="line">  <span class="attribute">list-style-type</span>: none;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">2px</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0.5em</span> <span class="number">0.5em</span> <span class="number">0.5em</span> <span class="number">2em</span>;</span><br><span class="line">  <span class="attribute">background</span>: lightgrey;</span><br><span class="line">  <span class="attribute">font-family</span>: sans-serif;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">li</span><span class="selector-class">.done</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#CCFF99</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">li</span><span class="selector-class">.done</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">''</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">border-color</span>: <span class="number">#009933</span>;</span><br><span class="line">  <span class="attribute">border-style</span>: solid;</span><br><span class="line">  <span class="attribute">border-width</span>: <span class="number">0</span> <span class="number">0.3em</span> <span class="number">0.25em</span> <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">1em</span>;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">1.3em</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0.6em</span>;</span><br><span class="line">  <span class="attribute">margin-top</span>: -<span class="number">1em</span>;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">rotate</span>(45deg);</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">0.5em</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="JavaScript"><a href="#JavaScript" class="headerlink" title="JavaScript"></a>JavaScript</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> list = <span class="built_in">document</span>.querySelector(<span class="string">'ul'</span>);</span><br><span class="line">list.addEventListener(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">ev</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span>( ev.target.tagName === <span class="string">'LI'</span>) &#123;</span><br><span class="line">     ev.target.classList.toggle(<span class="string">'done'</span>); </span><br><span class="line">  &#125;</span><br><span class="line">&#125;, <span class="literal">false</span>);</span><br></pre></td></tr></table></figure><h3 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h3><hr><p>点击前:</p><p><img src="https://i.loli.net/2019/01/11/5c38a36b92892.jpg" alt="2.jpg" title="2.jpg"></p><p>点击后:</p><p><img src="https://i.loli.net/2019/01/11/5c38a36b92e11.jpg" alt="3.jpg" title="3.jpg"></p><hr><p>可以看到这个例子代码也给before伪元素设置了移动属性top和left,然而——–，可是——，   它的父元素 li 是堂堂正正地设置为position:relative; 的吖。。。</p><p>目前看来也只能总结成自己的踩坑经验了，给定位上下文这个知识点补充一些例外。</p><hr><p><img src="https://i.loli.net/2019/01/11/5c38a36b93476.jpg" alt="1.grizzlyBear.jpg" title="1.grizzlyBear.jpg"></p>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;p&gt;在研究CSS名著《CSS设计指南》（第3版）中，对讲到界面组件中的用CSS为弹出层设计三角形这个知识点时，对例子代码中伪元素的定位上下文关系产生了很大的困惑。&lt;/p&gt;
    
    </summary>
    
    
      <category term="前端" scheme="http://lesliewong.cn/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="前端" scheme="http://lesliewong.cn/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
</feed>
